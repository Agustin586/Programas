Version 4.0 HI-TECH Software Intermediate Code
"25 ./Task_Control.h
[; ;./Task_Control.h: 25: void E_Task1_Rpm(void);
[v _E_Task1_Rpm `(v ~T0 @X0 0 ef ]
"29
[; ;./Task_Control.h: 29: void E_Task1_Pwm(void);
[v _E_Task1_Pwm `(v ~T0 @X0 0 ef ]
"33
[; ;./Task_Control.h: 33: void E_Task1_Min(void);
[v _E_Task1_Min `(v ~T0 @X0 0 ef ]
"37
[; ;./Task_Control.h: 37: void E_Task1_Temp(void);
[v _E_Task1_Temp `(v ~T0 @X0 0 ef ]
"5 ./ADC.h
[; ;./ADC.h: 5: int Adc(unsigned char canal);
[v _Adc `(i ~T0 @X0 0 ef1`uc ]
"194 C:\Program Files (x86)\Microchip\xc8\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"58 ./LCD_control.h
[; ;./LCD_control.h: 58: void LCD_array(int x,int y,const char *date);
[v _LCD_array `(v ~T0 @X0 0 ef3`i`i`*Cuc ]
"172 C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 172:     struct {
[s S6 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S6 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"171
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 171: typedef union {
[u S5 `S6 1 ]
[n S5 . . ]
"183
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 183: extern volatile PORTAbits_t PORTAbits __attribute__((address(0x005)));
[v _PORTAbits `VS5 ~T0 @X0 0 e@5 ]
[v F1196 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\pic\include\pic.h
[v __delay `JF1196 ~T0 @X0 0 e ]
[p i __delay ]
"22 ./Pwm_Soft.h
[; ;./Pwm_Soft.h: 22: void Pwm1_init(unsigned int frecuencia);
[v _Pwm1_init `(v ~T0 @X0 0 ef1`ui ]
"23
[; ;./Pwm_Soft.h: 23: void Pwm1(float duty);
[v _Pwm1 `(v ~T0 @X0 0 ef1`f ]
"54 C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 354: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"375
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 375: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"382
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 382: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"460
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 460: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"516
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 516: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"573
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 573: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"580
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 580: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"587
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 587: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"594
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 594: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"688
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 688: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"695
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 695: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"766
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 766: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"773
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 773: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"843
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 843: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"850
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 850: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"857
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 857: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"864
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 864: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"961
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 961: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1056
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1056: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1063
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1063: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1070
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1070: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1077
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1077: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1084
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1084: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1091
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1091: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1161: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1168
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1168: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1269
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1269: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1339
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1339: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1401
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1401: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1463
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1463: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1525
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1525: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1546
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1546: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1602
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1602: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1659
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1659: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1706
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1706: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1771
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1771: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1823
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1823: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1885
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1885: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1892
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1892: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1899
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1899: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"1904
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 1904: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2021
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2021: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2190
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2190: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2260
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2260: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2330
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2330: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2400
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2400: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2486
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2486: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2548
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2548: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2618
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2618: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2688
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2688: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2770
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2770: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2814
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2814: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2821
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2821: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2855
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2855: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"2908
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2908: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"2973
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 2973: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3038
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3038: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3089
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3089: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3094
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3094: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3101
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3101: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3108
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3108: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3115
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3115: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3122
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3122: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3179
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3179: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3231
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3231: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3275
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3275: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3325
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3325: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3370
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic16f886.h: 3370: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"8 ./Task_Control.h
[; ;./Task_Control.h: 8: unsigned char Pwm,Min,Seg,Temp,Modo=0;
[v _Pwm `uc ~T0 @X0 1 e ]
[v _Min `uc ~T0 @X0 1 e ]
[v _Seg `uc ~T0 @X0 1 e ]
[v _Temp `uc ~T0 @X0 1 e ]
[v _Modo `uc ~T0 @X0 1 e ]
[i _Modo
-> -> 0 `i `uc
]
"9
[; ;./Task_Control.h: 9: unsigned int T_Tiempo=10000;
[v _T_Tiempo `ui ~T0 @X0 1 e ]
[i _T_Tiempo
-> -> 10000 `i `ui
]
"10
[; ;./Task_Control.h: 10: unsigned int Rpm;
[v _Rpm `ui ~T0 @X0 1 e ]
"11
[; ;./Task_Control.h: 11: _Bool Out_E=0;
[v _Out_E `a ~T0 @X0 1 e ]
[i _Out_E
-> -> 0 `i `a
]
"12
[; ;./Task_Control.h: 12: _Bool Fin=0;
[v _Fin `a ~T0 @X0 1 e ]
[i _Fin
-> -> 0 `i `a
]
"13
[; ;./Task_Control.h: 13: _Bool Temporizador=0;
[v _Temporizador `a ~T0 @X0 1 e ]
[i _Temporizador
-> -> 0 `i `a
]
"14
[; ;./Task_Control.h: 14: _Bool mod_min=0,mod_seg=0;
[v _mod_min `a ~T0 @X0 1 e ]
[i _mod_min
-> -> 0 `i `a
]
[v _mod_seg `a ~T0 @X0 1 e ]
[i _mod_seg
-> -> 0 `i `a
]
"31 ./Pwm_Soft.h
[; ;./Pwm_Soft.h: 31: unsigned int freqPwmS1=0;
[v _freqPwmS1 `ui ~T0 @X0 1 e ]
[i _freqPwmS1
-> -> 0 `i `ui
]
"33
[; ;./Pwm_Soft.h: 33: unsigned int PwmS1=0;
[v _PwmS1 `ui ~T0 @X0 1 e ]
[i _PwmS1
-> -> 0 `i `ui
]
"35
[; ;./Pwm_Soft.h: 35: float Per_PwmS1=0,Pw_PwmS1=0;
[v _Per_PwmS1 `f ~T0 @X0 1 e ]
[i _Per_PwmS1
-> -> 0 `i `f
]
[v _Pw_PwmS1 `f ~T0 @X0 1 e ]
[i _Pw_PwmS1
-> -> 0 `i `f
]
"36
[; ;./Pwm_Soft.h: 36: unsigned int P_W_T_S1=0,PER_T_S1=0;
[v _P_W_T_S1 `ui ~T0 @X0 1 e ]
[i _P_W_T_S1
-> -> 0 `i `ui
]
[v _PER_T_S1 `ui ~T0 @X0 1 e ]
[i _PER_T_S1
-> -> 0 `i `ui
]
"38
[; ;./Pwm_Soft.h: 38: _Bool Act_PwmS1=0;
[v _Act_PwmS1 `a ~T0 @X0 1 e ]
[i _Act_PwmS1
-> -> 0 `i `a
]
"9 Task_Control.c
[; ;Task_Control.c: 9: void Task1(unsigned char *Estado)
[v _Task1 `(v ~T0 @X0 1 ef1`*uc ]
"10
[; ;Task_Control.c: 10: {
{
[e :U _Task1 ]
"9
[; ;Task_Control.c: 9: void Task1(unsigned char *Estado)
[v _Estado `*uc ~T0 @X0 1 r1 ]
"10
[; ;Task_Control.c: 10: {
[f ]
"12
[; ;Task_Control.c: 12:     if(*Estado == 1 && (Modo == 1 || Modo == 3 || Modo == 2)) E_Task1_Rpm();
[e $ ! && == -> *U _Estado `i -> 1 `i || || == -> _Modo `i -> 1 `i == -> _Modo `i -> 3 `i == -> _Modo `i -> 2 `i 136  ]
[e ( _E_Task1_Rpm ..  ]
[e $U 137  ]
"14
[; ;Task_Control.c: 14:     else if(*Estado == 2 && (Modo == 1 || Modo == 3)) E_Task1_Pwm();
[e :U 136 ]
[e $ ! && == -> *U _Estado `i -> 2 `i || == -> _Modo `i -> 1 `i == -> _Modo `i -> 3 `i 138  ]
[e ( _E_Task1_Pwm ..  ]
[e $U 139  ]
"16
[; ;Task_Control.c: 16:     else if(*Estado == 3 && Out_E == 0) E_Task1_Min();
[e :U 138 ]
[e $ ! && == -> *U _Estado `i -> 3 `i == -> _Out_E `i -> 0 `i 140  ]
[e ( _E_Task1_Min ..  ]
[e $U 141  ]
"18
[; ;Task_Control.c: 18:     else if(*Estado == 4) E_Task1_Temp();
[e :U 140 ]
[e $ ! == -> *U _Estado `i -> 4 `i 142  ]
[e ( _E_Task1_Temp ..  ]
[e :U 142 ]
[e :U 141 ]
[e :U 139 ]
[e :U 137 ]
"20
[; ;Task_Control.c: 20:     *Estado+=1;
[e =+ *U _Estado -> -> 1 `i `uc ]
"21
[; ;Task_Control.c: 21:     if(*Estado == 5) *Estado = 1;
[e $ ! == -> *U _Estado `i -> 5 `i 143  ]
[e = *U _Estado -> -> 1 `i `uc ]
[e :U 143 ]
"23
[; ;Task_Control.c: 23:     return;
[e $UE 135  ]
"24
[; ;Task_Control.c: 24: }
[e :UE 135 ]
}
"28
[; ;Task_Control.c: 28: void E_Task1_Rpm(void)
[v _E_Task1_Rpm `(v ~T0 @X0 1 ef ]
"29
[; ;Task_Control.c: 29: {
{
[e :U _E_Task1_Rpm ]
[f ]
"30
[; ;Task_Control.c: 30:     char buffer[10];
[v _buffer `uc ~T0 @X0 -> 10 `i a ]
"31
[; ;Task_Control.c: 31:     unsigned int aux,valor,cent=0,dec_m=0,uni_m=0;
[v _aux `ui ~T0 @X0 1 a ]
[v _valor `ui ~T0 @X0 1 a ]
[v _cent `ui ~T0 @X0 1 a ]
[e = _cent -> -> 0 `i `ui ]
[v _dec_m `ui ~T0 @X0 1 a ]
[e = _dec_m -> -> 0 `i `ui ]
[v _uni_m `ui ~T0 @X0 1 a ]
[e = _uni_m -> -> 0 `i `ui ]
"33
[; ;Task_Control.c: 33:     aux = Rpm;
[e = _aux _Rpm ]
"34
[; ;Task_Control.c: 34:     valor = (int)((Adc(0)*5.0/1023.0)*10000.0/5.0);
[e = _valor -> -> / * / * -> ( _Adc (1 -> -> 0 `i `uc `d .5.0 .1023.0 .10000.0 .5.0 `i `ui ]
"36
[; ;Task_Control.c: 36:     dec_m = (int)(valor/10000)*10000;
[e = _dec_m -> * -> / _valor -> -> 10000 `i `ui `i -> 10000 `i `ui ]
"37
[; ;Task_Control.c: 37:     uni_m = (int)((valor-dec_m)/1000)*1000;
[e = _uni_m -> * -> / - _valor _dec_m -> -> 1000 `i `ui `i -> 1000 `i `ui ]
"38
[; ;Task_Control.c: 38:     cent = (int)((valor-(uni_m+dec_m))/100)*100;
[e = _cent -> * -> / - _valor + _uni_m _dec_m -> -> 100 `i `ui `i -> 100 `i `ui ]
"40
[; ;Task_Control.c: 40:     valor = cent+uni_m+dec_m;
[e = _valor + + _cent _uni_m _dec_m ]
"41
[; ;Task_Control.c: 41:     Rpm = valor;
[e = _Rpm _valor ]
"43
[; ;Task_Control.c: 43:     if(Rpm == 0) Rpm = 60;
[e $ ! == _Rpm -> -> 0 `i `ui 145  ]
[e = _Rpm -> -> 60 `i `ui ]
[e $U 146  ]
"44
[; ;Task_Control.c: 44:     else if(Rpm > 10000) Rpm = 10000;
[e :U 145 ]
[e $ ! > _Rpm -> -> 10000 `i `ui 147  ]
[e = _Rpm -> -> 10000 `i `ui ]
[e :U 147 ]
[e :U 146 ]
"46
[; ;Task_Control.c: 46:     if(Rpm != aux)
[e $ ! != _Rpm _aux 148  ]
"47
[; ;Task_Control.c: 47:     {
{
"48
[; ;Task_Control.c: 48:         sprintf(buffer,"%05u",Rpm);
[e ( _sprintf (1 , (. , &U _buffer :s 1C _Rpm ]
"49
[; ;Task_Control.c: 49:         LCD_array(1,5,buffer);
[e ( _LCD_array (3 , , -> 1 `i -> 5 `i -> &U _buffer `*Cuc ]
"50
[; ;Task_Control.c: 50:     }
}
[e :U 148 ]
"52
[; ;Task_Control.c: 52:     return;
[e $UE 144  ]
"53
[; ;Task_Control.c: 53: }
[e :UE 144 ]
}
"57
[; ;Task_Control.c: 57: void E_Task1_Pwm(void)
[v _E_Task1_Pwm `(v ~T0 @X0 1 ef ]
"58
[; ;Task_Control.c: 58: {
{
[e :U _E_Task1_Pwm ]
[f ]
"59
[; ;Task_Control.c: 59:     char buffer[10],aux;
[v _buffer `uc ~T0 @X0 -> 10 `i a ]
[v _aux `uc ~T0 @X0 1 a ]
"60
[; ;Task_Control.c: 60:     aux = Pwm;
[e = _aux -> _Pwm `uc ]
"62
[; ;Task_Control.c: 62:     if(Modo == 1)
[e $ ! == -> _Modo `i -> 1 `i 150  ]
"63
[; ;Task_Control.c: 63:     {
{
"64
[; ;Task_Control.c: 64:         Pwm = (int)((Adc(1)*5.0/1023.0)*100.0/5.0);
[e = _Pwm -> -> / * / * -> ( _Adc (1 -> -> 1 `i `uc `d .5.0 .1023.0 .100.0 .5.0 `i `uc ]
"65
[; ;Task_Control.c: 65:         if(Pwm > 95) Pwm = 95;
[e $ ! > -> _Pwm `i -> 95 `i 151  ]
[e = _Pwm -> -> 95 `i `uc ]
[e $U 152  ]
"66
[; ;Task_Control.c: 66:         else if(Pwm < 5) Pwm = 5;
[e :U 151 ]
[e $ ! < -> _Pwm `i -> 5 `i 153  ]
[e = _Pwm -> -> 5 `i `uc ]
[e :U 153 ]
[e :U 152 ]
"67
[; ;Task_Control.c: 67:     }
}
[e $U 154  ]
"68
[; ;Task_Control.c: 68:     else if(Modo == 3) Pwm = 99;
[e :U 150 ]
[e $ ! == -> _Modo `i -> 3 `i 155  ]
[e = _Pwm -> -> 99 `i `uc ]
[e :U 155 ]
[e :U 154 ]
"70
[; ;Task_Control.c: 70:     if(Pwm != aux)
[e $ ! != -> _Pwm `i -> _aux `i 156  ]
"71
[; ;Task_Control.c: 71:     {
{
"72
[; ;Task_Control.c: 72:         sprintf(buffer,"%02d",Pwm);
[e ( _sprintf (1 , (. , &U _buffer :s 2C -> _Pwm `i ]
"73
[; ;Task_Control.c: 73:         LCD_array(2,5,buffer);
[e ( _LCD_array (3 , , -> 2 `i -> 5 `i -> &U _buffer `*Cuc ]
"74
[; ;Task_Control.c: 74:     }
}
[e :U 156 ]
"76
[; ;Task_Control.c: 76:     return;
[e $UE 149  ]
"77
[; ;Task_Control.c: 77: }
[e :UE 149 ]
}
"81
[; ;Task_Control.c: 81: void E_Task1_Min(void)
[v _E_Task1_Min `(v ~T0 @X0 1 ef ]
"82
[; ;Task_Control.c: 82: {
{
[e :U _E_Task1_Min ]
[f ]
"83
[; ;Task_Control.c: 83:     char buffer[10],aux_min,aux_seg;
[v _buffer `uc ~T0 @X0 -> 10 `i a ]
[v _aux_min `uc ~T0 @X0 1 a ]
[v _aux_seg `uc ~T0 @X0 1 a ]
"86
[; ;Task_Control.c: 86:     if(mod_min == 1) aux_min = Min,Min = (int)((Adc(2)*5.0/1023.0)*59.0/5.0);
[e $ ! == -> _mod_min `i -> 1 `i 158  ]
[e ; = _aux_min -> _Min `uc = _Min -> -> / * / * -> ( _Adc (1 -> -> 2 `i `uc `d .5.0 .1023.0 .59.0 .5.0 `i `uc ]
[e $U 159  ]
"87
[; ;Task_Control.c: 87:     else if(mod_seg == 1) aux_seg = Seg,Seg = (int)((Adc(2)*5.0/1023.0)*59.0/5.0);
[e :U 158 ]
[e $ ! == -> _mod_seg `i -> 1 `i 160  ]
[e ; = _aux_seg -> _Seg `uc = _Seg -> -> / * / * -> ( _Adc (1 -> -> 2 `i `uc `d .5.0 .1023.0 .59.0 .5.0 `i `uc ]
[e :U 160 ]
[e :U 159 ]
"89
[; ;Task_Control.c: 89:     if(Seg == 0) Seg = 1;
[e $ ! == -> _Seg `i -> 0 `i 161  ]
[e = _Seg -> -> 1 `i `uc ]
[e :U 161 ]
"91
[; ;Task_Control.c: 91:     if((Min != aux_min && mod_min == 1) || (Seg != aux_seg && mod_seg == 1))
[e $ ! || && != -> _Min `i -> _aux_min `i == -> _mod_min `i -> 1 `i && != -> _Seg `i -> _aux_seg `i == -> _mod_seg `i -> 1 `i 162  ]
"92
[; ;Task_Control.c: 92:     {
{
"93
[; ;Task_Control.c: 93:         sprintf(buffer,"%02d",Min);
[e ( _sprintf (1 , (. , &U _buffer :s 3C -> _Min `i ]
"94
[; ;Task_Control.c: 94:         LCD_array(3,8,buffer);
[e ( _LCD_array (3 , , -> 3 `i -> 8 `i -> &U _buffer `*Cuc ]
"95
[; ;Task_Control.c: 95:         sprintf(buffer,"%02d",Seg);
[e ( _sprintf (1 , (. , &U _buffer :s 4C -> _Seg `i ]
"96
[; ;Task_Control.c: 96:         LCD_array(3,11,buffer);
[e ( _LCD_array (3 , , -> 3 `i -> 11 `i -> &U _buffer `*Cuc ]
"97
[; ;Task_Control.c: 97:     }
}
[e :U 162 ]
"106
[; ;Task_Control.c: 106:     return;
[e $UE 157  ]
"107
[; ;Task_Control.c: 107: }
[e :UE 157 ]
}
"111
[; ;Task_Control.c: 111: void E_Task1_Temp(void)
[v _E_Task1_Temp `(v ~T0 @X0 1 ef ]
"112
[; ;Task_Control.c: 112: {
{
[e :U _E_Task1_Temp ]
[f ]
"113
[; ;Task_Control.c: 113:     char buffer[10];
[v _buffer `uc ~T0 @X0 -> 10 `i a ]
"114
[; ;Task_Control.c: 114:     unsigned char aux;
[v _aux `uc ~T0 @X0 1 a ]
"115
[; ;Task_Control.c: 115:     aux = Temp;
[e = _aux _Temp ]
"116
[; ;Task_Control.c: 116:     Temp = (int)((Adc(3)*5.0/1023.0)*100.0);
[e = _Temp -> -> * / * -> ( _Adc (1 -> -> 3 `i `uc `d .5.0 .1023.0 .100.0 `i `uc ]
"117
[; ;Task_Control.c: 117:     if(Temp != aux)
[e $ ! != -> _Temp `i -> _aux `i 164  ]
"118
[; ;Task_Control.c: 118:     {
{
"119
[; ;Task_Control.c: 119:         sprintf(buffer,"%02d",Temp);
[e ( _sprintf (1 , (. , &U _buffer :s 5C -> _Temp `i ]
"120
[; ;Task_Control.c: 120:         LCD_array(4,13,buffer);
[e ( _LCD_array (3 , , -> 4 `i -> 13 `i -> &U _buffer `*Cuc ]
"121
[; ;Task_Control.c: 121:     }
}
[e :U 164 ]
"123
[; ;Task_Control.c: 123:     return;
[e $UE 163  ]
"124
[; ;Task_Control.c: 124: }
[e :UE 163 ]
}
"128
[; ;Task_Control.c: 128: void Task3(void)
[v _Task3 `(v ~T0 @X0 1 ef ]
"129
[; ;Task_Control.c: 129: {
{
[e :U _Task3 ]
[f ]
"130
[; ;Task_Control.c: 130:     char buffer[10];
[v _buffer `uc ~T0 @X0 -> 10 `i a ]
"133
[; ;Task_Control.c: 133:     if(Temporizador == 1)
[e $ ! == -> _Temporizador `i -> 1 `i 166  ]
"134
[; ;Task_Control.c: 134:     {
{
"135
[; ;Task_Control.c: 135:         sprintf(buffer,"%02d",Min);
[e ( _sprintf (1 , (. , &U _buffer :s 6C -> _Min `i ]
"136
[; ;Task_Control.c: 136:         LCD_array(3,8,buffer);
[e ( _LCD_array (3 , , -> 3 `i -> 8 `i -> &U _buffer `*Cuc ]
"137
[; ;Task_Control.c: 137:         sprintf(buffer,"%02d",Seg);
[e ( _sprintf (1 , (. , &U _buffer :s 7C -> _Seg `i ]
"138
[; ;Task_Control.c: 138:         LCD_array(3,11,buffer);
[e ( _LCD_array (3 , , -> 3 `i -> 11 `i -> &U _buffer `*Cuc ]
"140
[; ;Task_Control.c: 140:         Temporizador = 0;
[e = _Temporizador -> -> 0 `i `a ]
"141
[; ;Task_Control.c: 141:     }
}
[e :U 166 ]
"142
[; ;Task_Control.c: 142:     if(Min == 0 && Seg == 0)
[e $ ! && == -> _Min `i -> 0 `i == -> _Seg `i -> 0 `i 167  ]
"143
[; ;Task_Control.c: 143:     {
{
"144
[; ;Task_Control.c: 144:         Fin = 1;
[e = _Fin -> -> 1 `i `a ]
"146
[; ;Task_Control.c: 146:         for(char i=0;i<3;i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 168  ]
[e $U 169  ]
[e :U 168 ]
"147
[; ;Task_Control.c: 147:         {
{
"148
[; ;Task_Control.c: 148:             PORTAbits.RA5 = 1;
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
"149
[; ;Task_Control.c: 149:             _delay((unsigned long)((100)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"150
[; ;Task_Control.c: 150:             PORTAbits.RA5 = 0;
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
"151
[; ;Task_Control.c: 151:             _delay((unsigned long)((100)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"152
[; ;Task_Control.c: 152:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 168  ]
[e :U 169 ]
}
"153
[; ;Task_Control.c: 153:     }
}
[e :U 167 ]
"155
[; ;Task_Control.c: 155:     return;
[e $UE 165  ]
"156
[; ;Task_Control.c: 156: }
[e :UE 165 ]
}
"160
[; ;Task_Control.c: 160: void Task2(void)
[v _Task2 `(v ~T0 @X0 1 ef ]
"161
[; ;Task_Control.c: 161: {
{
[e :U _Task2 ]
[f ]
"162
[; ;Task_Control.c: 162:     Pwm1_init((int)(Rpm/60.0));
[e ( _Pwm1_init (1 -> -> / -> _Rpm `d .60.0 `i `ui ]
"163
[; ;Task_Control.c: 163:     Pwm1(Pwm);
[e ( _Pwm1 (1 -> _Pwm `f ]
"165
[; ;Task_Control.c: 165:     return;
[e $UE 171  ]
"166
[; ;Task_Control.c: 166: }
[e :UE 171 ]
}
[p f _sprintf 8422532 ]
[a 1C 37 48 53 117 0 ]
[a 2C 37 48 50 100 0 ]
[a 3C 37 48 50 100 0 ]
[a 4C 37 48 50 100 0 ]
[a 5C 37 48 50 100 0 ]
[a 6C 37 48 50 100 0 ]
[a 7C 37 48 50 100 0 ]
