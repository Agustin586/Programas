

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 16 14:46:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F886 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0007                     _PORTC	set	7
   202  0006                     _PORTB	set	6
   203  0005                     _PORTA	set	5
   204  0006                     _PORTBbits	set	6
   205  0035                     _RB5	set	53
   206  0060                     _TMR1IF	set	96
   207  0087                     _TRISC	set	135
   208  0086                     _TRISB	set	134
   209  0085                     _TRISAbits	set	133
   210  0435                     _TRISB5	set	1077
   211  0460                     _TMR1IE	set	1120
   212  0105                     _WDTCONbits	set	261
   213  0188                     _ANSELbits	set	392
   214  0189                     _ANSELHbits	set	393
   215  0C4D                     _ANS13	set	3149
   216                           
   217                           	psect	cinit
   218  07FB                     start_initialization:	
   219                           ; #config settings
   220                           
   221  07FB                     __initialization:
   222                           
   223                           ; Clear objects allocated to COMMON
   224  07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   225  07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  07FC                     __end_of__initialization:
   229  07FC  0183               	clrf	3
   230  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  0074                     __pbssCOMMON:
   234  0074                     _Estado_Actual:
   235  0074                     	ds	1
   236                           
   237                           	psect	cstackCOMMON
   238  0070                     __pcstackCOMMON:
   239  0070                     ?_Pines_Init:
   240  0070                     ??_Pines_Init:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_MEF_Init:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ??_MEF_Init:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_MEF_Actualizacion:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_Antirrebote:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??_Antirrebote:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263  0070                     	ds	2
   264  0072                     ??_MEF_Actualizacion:
   265                           
   266                           ; 1 bytes @ 0x2
   267  0072                     	ds	2
   268  0074                     ??_main:
   269                           
   270                           	psect	maintext
   271  07BB                     __pmaintext:	
   272                           ; 1 bytes @ 0x4
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 34 in file "Main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    2
   298 ;; This function calls:
   299 ;;		_MEF_Actualizacion
   300 ;;		_MEF_Init
   301 ;;		_Pines_Init
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           
   308                           ;psect for function _main
   309  07BB                     _main:
   310                           
   311                           ;Main.c: 37:     Pines_Init();
   312                           
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   315  07BB  120A  118A  27A4  120A  118A  	fcall	_Pines_Init
   316                           
   317                           ;Main.c: 38:     MEF_Init();
   318  07C0  120A  118A  278F  120A  118A  	fcall	_MEF_Init
   319                           
   320                           ;Main.c: 41:     WDTCONbits.SWDTEN = 1;
   321  07C5  1703               	bsf	3,6	;RP1=1, select bank2
   322  07C6  1405               	bsf	5,0	;volatile
   323                           
   324                           ;Main.c: 42:     WDTCONbits.WDTPS = 0b1010;
   325  07C7  0805               	movf	5,w	;volatile
   326  07C8  39E1               	andlw	-31
   327  07C9  3814               	iorlw	20
   328  07CA  0085               	movwf	5	;volatile
   329  07CB  0064               	clrwdt	;# 
   330                           
   331                           ;Main.c: 45:     TMR1IE=1,TMR1IF=1;
   332  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   333  07CD  1303               	bcf	3,6	;RP1=0, select bank1
   334  07CE  140C               	bsf	12,0	;volatile
   335  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   336  07D0  140C               	bsf	12,0	;volatile
   337  07D1                     l682:
   338                           
   339                           ;Main.c: 48:     {;Main.c: 49:         MEF_Actualizacion();
   340  07D1  120A  118A  27D7  120A  118A  	fcall	_MEF_Actualizacion
   341  07D6  2FD1               	goto	l682
   342  07D7                     __end_of_main:
   343                           
   344                           	psect	text1
   345  07A4                     __ptext1:	
   346 ;; *************** function _Pines_Init *****************
   347 ;; Defined at:
   348 ;;		line 81 in file "Main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : B00/0
   360 ;;		Unchanged: 800/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _Pines_Init
   377  07A4                     _Pines_Init:
   378                           
   379                           ;Main.c: 84:     TRISAbits.TRISA5 = 0;
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _Pines_Init: [wreg+status,2]
   383  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   384  07A5  1285               	bcf	5,5	;volatile
   385                           
   386                           ;Main.c: 85:     PORTA = 0;
   387  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   388  07A7  0185               	clrf	5	;volatile
   389                           
   390                           ;Main.c: 86:     PORTB = 0;
   391  07A8  0186               	clrf	6	;volatile
   392                           
   393                           ;Main.c: 87:     PORTC = 0;
   394  07A9  0187               	clrf	7	;volatile
   395                           
   396                           ;Main.c: 88:     TRISB = 0xFF;
   397  07AA  30FF               	movlw	255
   398  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   399  07AC  0086               	movwf	6	;volatile
   400                           
   401                           ;Main.c: 89:     TRISC = 0x00;
   402  07AD  0187               	clrf	7	;volatile
   403                           
   404                           ;Main.c: 90:     ANSELHbits.ANS12 = 0;
   405  07AE  1703               	bsf	3,6	;RP1=1, select bank3
   406  07AF  1209               	bcf	9,4	;volatile
   407                           
   408                           ;Main.c: 91:     ANSELHbits.ANS11 = 0;
   409  07B0  1189               	bcf	9,3	;volatile
   410                           
   411                           ;Main.c: 92:     ANSELHbits.ANS10 = 0;
   412  07B1  1109               	bcf	9,2	;volatile
   413                           
   414                           ;Main.c: 93:     ANSELHbits.ANS8 = 0;
   415  07B2  1009               	bcf	9,0	;volatile
   416                           
   417                           ;Main.c: 94:     ANSELHbits.ANS9 = 0;
   418  07B3  1089               	bcf	9,1	;volatile
   419                           
   420                           ;Main.c: 95:     ANSELbits.ANS4 = 0;
   421  07B4  1208               	bcf	8,4	;volatile
   422                           
   423                           ;Main.c: 97:     ANS13 = 0;
   424  07B5  1289               	bcf	9,5	;volatile
   425                           
   426                           ;Main.c: 98:     TRISB5 = 0;
   427  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   428  07B7  1286               	bcf	6,5	;volatile
   429                           
   430                           ;Main.c: 99:     RB5 = 0;
   431  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   432  07B9  1286               	bcf	6,5	;volatile
   433  07BA  0008               	return
   434  07BB                     __end_of_Pines_Init:
   435                           
   436                           	psect	text2
   437  078F                     __ptext2:	
   438 ;; *************** function _MEF_Init *****************
   439 ;; Defined at:
   440 ;;		line 55 in file "Main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		status,2
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : B00/0
   452 ;;		Unchanged: B00/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _MEF_Init
   469  078F                     _MEF_Init:
   470                           
   471                           ;Main.c: 57:     Estado_Actual = ESTADO_MENU;
   472                           
   473                           ;incstack = 0
   474                           ; Regs used in _MEF_Init: [status,2]
   475  078F  01F4               	clrf	_Estado_Actual
   476  0790  0008               	return
   477  0791                     __end_of_MEF_Init:
   478                           
   479                           	psect	text3
   480  07D7                     __ptext3:	
   481 ;; *************** function _MEF_Actualizacion *****************
   482 ;; Defined at:
   483 ;;		line 62 in file "Main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          2       0       0       0       0
   500 ;;      Totals:         2       0       0       0       0
   501 ;;Total ram usage:        2 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    1
   504 ;; This function calls:
   505 ;;		_Antirrebote
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _MEF_Actualizacion
   513  07D7                     _MEF_Actualizacion:
   514                           
   515                           ;Main.c: 64:     switch(Estado_Actual)
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   519  07D7  2FED               	goto	l664
   520  07D8                     l57:	
   521                           ;Main.c: 65:     {;Main.c: 66:         case ESTADO_MENU:
   522                           
   523                           
   524                           ;Main.c: 67:         {;Main.c: 71:             if(PORTBbits.RB1) Estado_Actual = ESTADO_
      +                          MODO_PULV,Antirrebote();
   525  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   526  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   527  07DA  1C86               	btfss	6,1	;volatile
   528  07DB  2FE7               	goto	l58
   529  07DC  01F4               	clrf	_Estado_Actual
   530  07DD  0AF4               	incf	_Estado_Actual,f
   531  07DE  2FE3               	goto	l652
   532  07DF                     l654:
   533  07DF  3005               	movlw	5
   534  07E0                     L1:
   535  07E0  00FF               	movwf	127
   536  07E1  087F               	movf	127,w
   537  07E2  00F4               	movwf	_Estado_Actual
   538  07E3                     l652:
   539  07E3  120A  118A  2791   	fcall	_Antirrebote
   540  07E6  0008               	return
   541  07E7                     l58:	
   542                           ;Main.c: 72:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FUGA,Antirre
      +                          bote();
   543                           
   544  07E7  1886               	btfsc	6,1	;volatile
   545  07E8  2FDF               	goto	l654
   546                           
   547                           ;Main.c: 73:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FLUJO,Antirr
      +                          ebote();
   548  07E9  1C86               	btfss	6,1	;volatile
   549  07EA  0008               	return
   550  07EB  3006               	movlw	6
   551  07EC  2FE0               	goto	L1
   552  07ED                     l664:	
   553                           ;Main.c: 74:         break;
   554                           
   555  07ED  0874               	movf	_Estado_Actual,w
   556  07EE  00F2               	movwf	??_MEF_Actualizacion
   557  07EF  01F3               	clrf	??_MEF_Actualizacion+1
   558                           
   559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   560                           ; Switch size 1, requested type "simple"
   561                           ; Number of cases is 1, Range of values is 0 to 0
   562                           ; switch strategies available:
   563                           ; Name         Instructions Cycles
   564                           ; simple_byte            4     3 (average)
   565                           ; direct_byte           11     8 (fixed)
   566                           ; jumptable            260     6 (fixed)
   567                           ;	Chosen strategy is simple_byte
   568  07F0  0873               	movf	??_MEF_Actualizacion+1,w
   569  07F1  3A00               	xorlw	0	; case 0
   570  07F2  1903               	skipnz
   571  07F3  2FF5               	goto	l704
   572  07F4  2FFA               	goto	l64
   573  07F5                     l704:
   574                           
   575                           ; Switch size 1, requested type "simple"
   576                           ; Number of cases is 1, Range of values is 0 to 0
   577                           ; switch strategies available:
   578                           ; Name         Instructions Cycles
   579                           ; simple_byte            4     3 (average)
   580                           ; direct_byte           11     8 (fixed)
   581                           ; jumptable            260     6 (fixed)
   582                           ;	Chosen strategy is simple_byte
   583  07F5  0872               	movf	??_MEF_Actualizacion,w
   584  07F6  3A00               	xorlw	0	; case 0
   585  07F7  1903               	skipnz
   586  07F8  2FD8               	goto	l57
   587  07F9  2FFA               	goto	l64
   588  07FA                     l64:
   589  07FA  0008               	return
   590  07FB                     __end_of_MEF_Actualizacion:
   591                           
   592                           	psect	text4
   593  0791                     __ptext4:	
   594 ;; *************** function _Antirrebote *****************
   595 ;; Defined at:
   596 ;;		line 104 in file "Main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 300/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          2       0       0       0       0
   613 ;;      Totals:         2       0       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_MEF_Actualizacion
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _Antirrebote
   625  0791                     _Antirrebote:
   626  0791                     l604:	
   627                           ;incstack = 0
   628                           ; Regs used in _Antirrebote: [wreg]
   629                           
   630                           
   631                           ;Main.c: 106:     _delay((unsigned long)((10)*(20000000/4000.0)));
   632  0791  3041               	movlw	65
   633  0792  00F1               	movwf	??_Antirrebote+1
   634  0793  30EE               	movlw	238
   635  0794  00F0               	movwf	??_Antirrebote
   636  0795                     u87:
   637  0795  0BF0               	decfsz	??_Antirrebote,f
   638  0796  2F95               	goto	u87
   639  0797  0BF1               	decfsz	??_Antirrebote+1,f
   640  0798  2F95               	goto	u87
   641  0799  0000               	nop
   642                           
   643                           ;Main.c: 107:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3
      +                          ) _delay((unsigned long)((10)*(20000000/4000.0)));
   644  079A  1283               	bcf	3,5	;RP0=0, select bank0
   645  079B  1303               	bcf	3,6	;RP1=0, select bank0
   646  079C  1C06               	btfss	6,0	;volatile
   647  079D  1886               	btfsc	6,1	;volatile
   648  079E  2F91               	goto	l604
   649  079F  1906               	btfsc	6,2	;volatile
   650  07A0  2F91               	goto	l604
   651  07A1  1D86               	btfss	6,3	;volatile
   652  07A2  0008               	return
   653  07A3  2F91               	goto	l604
   654  07A4                     __end_of_Antirrebote:
   655  007E                     btemp	set	126	;btemp
   656  007E                     wtemp0	set	126
   657                           
   658                           	psect	config
   659                           
   660                           ;Config register CONFIG1 @ 0x2007
   661                           ;	Oscillator Selection bits
   662                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   663                           ;	Watchdog Timer Enable bit
   664                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   665                           ;	Power-up Timer Enable bit
   666                           ;	PWRTE = ON, PWRT enabled
   667                           ;	RE3/MCLR pin function select bit
   668                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   669                           ;	Code Protection bit
   670                           ;	CP = OFF, Program memory code protection is disabled
   671                           ;	Data Code Protection bit
   672                           ;	CPD = OFF, Data memory code protection is disabled
   673                           ;	Brown Out Reset Selection bits
   674                           ;	BOREN = OFF, BOR disabled
   675                           ;	Internal External Switchover bit
   676                           ;	IESO = ON, Internal/External Switchover mode is enabled
   677                           ;	Fail-Safe Clock Monitor Enabled bit
   678                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   679                           ;	Low Voltage Programming Enable bit
   680                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   681                           ;	In-Circuit Debugger Mode bit
   682                           ;	DEBUG = 0x1, unprogrammed default
   683  2007                     	org	8199
   684  2007  2CE2               	dw	11490
   685                           
   686                           ;Config register CONFIG2 @ 0x2008
   687                           ;	Brown-out Reset Selection bit
   688                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   689                           ;	Flash Program Memory Self Write Enable bits
   690                           ;	WRT = OFF, Write protection off
   691  2008                     	org	8200
   692  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_Antirrebote

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0       0
                                              2 COMMON     2     2      0
                        _Antirrebote
 ---------------------------------------------------------------------------------
 (2) _Antirrebote                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MEF_Actualizacion
     _Antirrebote
   _MEF_Init
   _Pines_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 16 14:46:15 2020

                        l64 07FA                          l57 07D8                          l58 07E7  
                        u87 0795                         l604 0791                         l704 07F5  
                       l652 07E3                         l654 07DF                         l664 07ED  
                       l682 07D1                         _RB5 0035           _MEF_Actualizacion 07D7  
        ?_MEF_Actualizacion 0070                        _main 07BB                        btemp 007E  
       ??_MEF_Actualizacion 0072                        start 0000               _Estado_Actual 0074  
       __end_of_Antirrebote 07A4            __end_of_MEF_Init 0791                       ?_main 0070  
                     _ANS13 0C4D   __end_of_MEF_Actualizacion 07FB                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _TRISB 0086  
                     _TRISC 0087                       status 0003                       wtemp0 007E  
           __initialization 07FB                __end_of_main 07D7                      ??_main 0074  
                _Pines_Init 07A4                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TRISB5 0435                 _Antirrebote 0791  __size_of_MEF_Actualizacion 0024  
   __end_of__initialization 07FC                   ?_MEF_Init 0070              __pcstackCOMMON 0070  
               ?_Pines_Init 0070                  ??_MEF_Init 0070                  __pmaintext 07BB  
                 _ANSELbits 0188         __size_of_Pines_Init 0017                     __ptext1 07A4  
                   __ptext2 078F                     __ptext3 07D7                     __ptext4 0791  
      end_of_initialization 07FC                ?_Antirrebote 0070                   _PORTBbits 0006  
                 _TRISAbits 0085           __size_of_MEF_Init 0002         start_initialization 07FB  
              ??_Pines_Init 0070          __end_of_Pines_Init 07BB                 __pbssCOMMON 0074  
                 ___latbits 0002        __size_of_Antirrebote 0013                    _MEF_Init 078F  
                _ANSELHbits 0189               __size_of_main 001C                  _WDTCONbits 0105  
             ??_Antirrebote 0070  
