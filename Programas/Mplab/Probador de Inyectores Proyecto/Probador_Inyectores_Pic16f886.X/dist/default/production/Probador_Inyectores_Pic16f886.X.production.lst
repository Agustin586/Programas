

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 16 18:32:01 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 09/04/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F886 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0000                     	;# 
   450  0001                     	;# 
   451  0002                     	;# 
   452  0003                     	;# 
   453  0004                     	;# 
   454  0005                     	;# 
   455  0006                     	;# 
   456  0007                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  000E                     	;# 
   464  000F                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001D                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  0081                     	;# 
   484  0085                     	;# 
   485  0086                     	;# 
   486  0087                     	;# 
   487  0089                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  008F                     	;# 
   492  0090                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0093                     	;# 
   498  0094                     	;# 
   499  0095                     	;# 
   500  0096                     	;# 
   501  0097                     	;# 
   502  0098                     	;# 
   503  0099                     	;# 
   504  009A                     	;# 
   505  009B                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  009F                     	;# 
   510  0105                     	;# 
   511  0107                     	;# 
   512  0108                     	;# 
   513  0109                     	;# 
   514  010C                     	;# 
   515  010C                     	;# 
   516  010D                     	;# 
   517  010E                     	;# 
   518  010F                     	;# 
   519  0185                     	;# 
   520  0187                     	;# 
   521  0188                     	;# 
   522  0189                     	;# 
   523  018C                     	;# 
   524  018D                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  000E                     	;# 
   540  000F                     	;# 
   541  0010                     	;# 
   542  0011                     	;# 
   543  0012                     	;# 
   544  0013                     	;# 
   545  0014                     	;# 
   546  0015                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001B                     	;# 
   555  001C                     	;# 
   556  001D                     	;# 
   557  001E                     	;# 
   558  001F                     	;# 
   559  0081                     	;# 
   560  0085                     	;# 
   561  0086                     	;# 
   562  0087                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  008F                     	;# 
   568  0090                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0093                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  009F                     	;# 
   586  0105                     	;# 
   587  0107                     	;# 
   588  0108                     	;# 
   589  0109                     	;# 
   590  010C                     	;# 
   591  010C                     	;# 
   592  010D                     	;# 
   593  010E                     	;# 
   594  010F                     	;# 
   595  0185                     	;# 
   596  0187                     	;# 
   597  0188                     	;# 
   598  0189                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  058C                     __pidataBANK0:
   604                           
   605                           ;initializer for Pant_Inicio@F1247
   606  058C  3406               	retlw	6
   607  058D  3409               	retlw	9
   608  058E  3409               	retlw	9
   609  058F  3406               	retlw	6
   610  0590  3400               	retlw	0
   611  0591  3400               	retlw	0
   612  0592  3400               	retlw	0
   613  0593  3400               	retlw	0
   614                           
   615                           ;initializer for _Delay100ms
   616  0594  34E8               	retlw	232
   617  0595  3403               	retlw	3
   618  000E                     _TMR1	set	14
   619  0010                     _T1CONbits	set	16
   620  0007                     _PORTCbits	set	7
   621  0006                     _PORTBbits	set	6
   622  0007                     _PORTC	set	7
   623  0006                     _PORTB	set	6
   624  0005                     _PORTA	set	5
   625  0034                     _RB4	set	52
   626  005F                     _GIE	set	95
   627  005E                     _PEIE	set	94
   628  0080                     _TMR1ON	set	128
   629  0060                     _TMR1IF	set	96
   630  0087                     _TRISCbits	set	135
   631  0087                     _TRISC	set	135
   632  0086                     _TRISB	set	134
   633  0085                     _TRISAbits	set	133
   634  0434                     _TRISB4	set	1076
   635  0460                     _TMR1IE	set	1120
   636  0105                     _WDTCONbits	set	261
   637  0188                     _ANSELbits	set	392
   638  0189                     _ANSELHbits	set	393
   639                           
   640                           	psect	strings
   641  0346                     __pstrings:
   642  0346                     stringtab:
   643  0346                     __stringtab:
   644  0346                     stringcode:	
   645                           ;	String table - string pointers are 1 byte each
   646                           
   647  0346                     stringdir:
   648  0346  3003               	movlw	high stringdir
   649  0347  008A               	movwf	10
   650  0348  0804               	movf	4,w
   651  0349  0A84               	incf	4,f
   652  034A  0782               	addwf	2,f
   653  034B                     __stringbase:
   654  034B  3400               	retlw	0
   655  034C                     __end_of__stringtab:
   656  034C                     STR_3:
   657  034C  3420               	retlw	32	;' '
   658  034D  3420               	retlw	32	;' '
   659  034E  3420               	retlw	32	;' '
   660  034F  3444               	retlw	68	;'D'
   661  0350  3445               	retlw	69	;'E'
   662  0351  3420               	retlw	32	;' '
   663  0352  3449               	retlw	73	;'I'
   664  0353  344E               	retlw	78	;'N'
   665  0354  3459               	retlw	89	;'Y'
   666  0355  3445               	retlw	69	;'E'
   667  0356  3443               	retlw	67	;'C'
   668  0357  3454               	retlw	84	;'T'
   669  0358  344F               	retlw	79	;'O'
   670  0359  3452               	retlw	82	;'R'
   671  035A  3445               	retlw	69	;'E'
   672  035B  3453               	retlw	83	;'S'
   673  035C  3420               	retlw	32	;' '
   674  035D  3420               	retlw	32	;' '
   675  035E  3420               	retlw	32	;' '
   676  035F  3420               	retlw	32	;' '
   677  0360  3400               	retlw	0
   678  0361                     STR_2:
   679  0361  3450               	retlw	80	;'P'
   680  0362  3452               	retlw	82	;'R'
   681  0363  344F               	retlw	79	;'O'
   682  0364  3442               	retlw	66	;'B'
   683  0365  3441               	retlw	65	;'A'
   684  0366  3444               	retlw	68	;'D'
   685  0367  344F               	retlw	79	;'O'
   686  0368  3452               	retlw	82	;'R'
   687  0369  3420               	retlw	32	;' '
   688  036A  3441               	retlw	65	;'A'
   689  036B  3455               	retlw	85	;'U'
   690  036C  3454               	retlw	84	;'T'
   691  036D  344F               	retlw	79	;'O'
   692  036E  344D               	retlw	77	;'M'
   693  036F  344F               	retlw	79	;'O'
   694  0370  3454               	retlw	84	;'T'
   695  0371  3452               	retlw	82	;'R'
   696  0372  3449               	retlw	73	;'I'
   697  0373  345A               	retlw	90	;'Z'
   698  0374  3420               	retlw	32	;' '
   699  0375  3400               	retlw	0
   700  0376                     STR_1:
   701  0376  343D               	retlw	61	;'='
   702  0377  343D               	retlw	61	;'='
   703  0378  343D               	retlw	61	;'='
   704  0379  343D               	retlw	61	;'='
   705  037A  343D               	retlw	61	;'='
   706  037B  343D               	retlw	61	;'='
   707  037C  343D               	retlw	61	;'='
   708  037D  343D               	retlw	61	;'='
   709  037E  343D               	retlw	61	;'='
   710  037F  343D               	retlw	61	;'='
   711  0380  343D               	retlw	61	;'='
   712  0381  343D               	retlw	61	;'='
   713  0382  343D               	retlw	61	;'='
   714  0383  343D               	retlw	61	;'='
   715  0384  343D               	retlw	61	;'='
   716  0385  343D               	retlw	61	;'='
   717  0386  343D               	retlw	61	;'='
   718  0387  343D               	retlw	61	;'='
   719  0388  343D               	retlw	61	;'='
   720  0389  343D               	retlw	61	;'='
   721  038A  3400               	retlw	0
   722  038B                     STR_17:
   723  038B  344C               	retlw	76	;'L'
   724  038C  3449               	retlw	73	;'I'
   725  038D  344D               	retlw	77	;'M'
   726  038E  3450               	retlw	80	;'P'
   727  038F  342E               	retlw	46	;'.'
   728  0390  3420               	retlw	32	;' '
   729  0391  3455               	retlw	85	;'U'
   730  0392  344C               	retlw	76	;'L'
   731  0393  3454               	retlw	84	;'T'
   732  0394  3452               	retlw	82	;'R'
   733  0395  3441               	retlw	65	;'A'
   734  0396  3453               	retlw	83	;'S'
   735  0397  344F               	retlw	79	;'O'
   736  0398  344E               	retlw	78	;'N'
   737  0399  3449               	retlw	73	;'I'
   738  039A  3444               	retlw	68	;'D'
   739  039B  344F               	retlw	79	;'O'
   740  039C  3400               	retlw	0
   741  039D                     STR_14:
   742  039D  3450               	retlw	80	;'P'
   743  039E  3455               	retlw	85	;'U'
   744  039F  344C               	retlw	76	;'L'
   745  03A0  3456               	retlw	86	;'V'
   746  03A1  3445               	retlw	69	;'E'
   747  03A2  3452               	retlw	82	;'R'
   748  03A3  3449               	retlw	73	;'I'
   749  03A4  345A               	retlw	90	;'Z'
   750  03A5  3441               	retlw	65	;'A'
   751  03A6  3443               	retlw	67	;'C'
   752  03A7  3449               	retlw	73	;'I'
   753  03A8  344F               	retlw	79	;'O'
   754  03A9  344E               	retlw	78	;'N'
   755  03AA  3400               	retlw	0
   756  03AB                     STR_16:
   757  03AB  3446               	retlw	70	;'F'
   758  03AC  344C               	retlw	76	;'L'
   759  03AD  3455               	retlw	85	;'U'
   760  03AE  344A               	retlw	74	;'J'
   761  03AF  344F               	retlw	79	;'O'
   762  03B0  3400               	retlw	0
   763  03B1                     STR_15:
   764  03B1  3446               	retlw	70	;'F'
   765  03B2  3455               	retlw	85	;'U'
   766  03B3  3447               	retlw	71	;'G'
   767  03B4  3441               	retlw	65	;'A'
   768  03B5  3400               	retlw	0
   769  03B6                     STR_5:
   770  03B6  343E               	retlw	62	;'>'
   771  03B7  3400               	retlw	0
   772  035F                     
   773                           	psect	cinit
   774  000F                     start_initialization:	
   775                           ; #config settings
   776                           
   777  000F                     __initialization:
   778                           
   779                           ; Initialize objects allocated to BANK0
   780  000F  1383               	bcf	3,7	;select IRP bank0
   781  0010  305A               	movlw	low (__pdataBANK0+10)
   782  0011  00FD               	movwf	btemp+-1
   783  0012  3005               	movlw	high __pidataBANK0
   784  0013  00FE               	movwf	btemp
   785  0014  308C               	movlw	low __pidataBANK0
   786  0015  00FF               	movwf	btemp+1
   787  0016  3050               	movlw	low __pdataBANK0
   788  0017  0084               	movwf	4
   789  0018  120A  118A  2572  120A  118A  	fcall	init_ram0
   790                           
   791                           ; Clear objects allocated to BANK0
   792  001D  3020               	movlw	low __pbssBANK0
   793  001E  0084               	movwf	4
   794  001F  3038               	movlw	low (__pbssBANK0+24)
   795  0020  120A  118A  2596   	fcall	clear_ram0
   796                           
   797                           ; Clear objects allocated to COMMON
   798  0023  01FA               	clrf	__pbssCOMMON& (0+127)
   799  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   800  0025                     end_of_initialization:	
   801                           ;End of C runtime variable initialization code
   802                           
   803  0025                     __end_of__initialization:
   804  0025  0183               	clrf	3
   805  0026  120A  118A  2D0B   	ljmp	_main	;jump to C main() function
   806                           
   807                           	psect	bssCOMMON
   808  007A                     __pbssCOMMON:
   809  007A                     _Mostrar:
   810  007A                     	ds	1
   811  007B                     _Modo:
   812  007B                     	ds	1
   813                           
   814                           	psect	bssBANK0
   815  0020                     __pbssBANK0:
   816  0020                     Pant_Inicio@F1249:
   817  0020                     	ds	8
   818  0028                     _Pw_PwmS1:
   819  0028                     	ds	3
   820  002B                     _Per_PwmS1:
   821  002B                     	ds	3
   822  002E                     _PER_T_S1:
   823  002E                     	ds	2
   824  0030                     _P_W_T_S1:
   825  0030                     	ds	2
   826  0032                     _PwmS1:
   827  0032                     	ds	2
   828  0034                     _freqPwmS1:
   829  0034                     	ds	2
   830  0036                     _Estado_Actual:
   831  0036                     	ds	1
   832  0037                     _Act_PwmS1:
   833  0037                     	ds	1
   834                           
   835                           	psect	dataBANK0
   836  0050                     __pdataBANK0:
   837  0050                     Pant_Inicio@F1247:
   838  0050                     	ds	8
   839  0058                     _Delay100ms:
   840  0058                     	ds	2
   841                           
   842                           	psect	inittext
   843  056E                     init_fetch0:	
   844                           ;	Called with low address in FSR and high address in W
   845                           
   846  056E  087E               	movf	126,w
   847  056F  008A               	movwf	10
   848  0570  087F               	movf	127,w
   849  0571  0082               	movwf	2
   850  0572                     init_ram0:	
   851                           ;Called with:
   852                           ;	high address of idata address in btemp 
   853                           ;	low address of idata address in btemp+1 
   854                           ;	low address of data in FSR
   855                           ;	high address + 1 of data in btemp-1
   856                           
   857  0572  256E  120A  118A   	fcall	init_fetch0
   858  0575  0080               	movwf	0
   859  0576  0A84               	incf	4,f
   860  0577  0804               	movf	4,w
   861  0578  067D               	xorwf	125,w
   862  0579  1903               	btfsc	3,2
   863  057A  3400               	retlw	0
   864  057B  0AFF               	incf	127,f
   865  057C  1903               	btfsc	3,2
   866  057D  0AFE               	incf	126,f
   867  057E  2D72               	goto	init_ram0
   868                           
   869                           	psect	clrtext
   870  0596                     clear_ram0:	
   871                           ;	Called with FSR containing the base address, and
   872                           ;	W with the last address+1
   873                           
   874  0596  0064               	clrwdt	;clear the watchdog before getting into this loop
   875  0597                     clrloop0:
   876  0597  0180               	clrf	0	;clear RAM location pointed to by FSR
   877  0598  0A84               	incf	4,f	;increment pointer
   878  0599  0604               	xorwf	4,w	;XOR with final address
   879  059A  1903               	btfsc	3,2	;have we reached the end yet?
   880  059B  3400               	retlw	0	;all done for this memory range, return
   881  059C  0604               	xorwf	4,w	;XOR again to restore value
   882  059D  2D97               	goto	clrloop0	;do the next byte
   883                           
   884                           	psect	cstackCOMMON
   885  0070                     __pcstackCOMMON:
   886  0070                     ?_Pines_Init:
   887  0070                     ?_MEF_Init:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_LCD_init:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_Pwm_init:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_MEF_Actualizacion:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_Task_Ready:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ??_Task_Ready:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_Pant_Inicio:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_Select_Modo:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_Pant_Menu:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_Pant_Selector:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_LCD_command:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_main:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Antirrebote:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_ISR:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ??_ISR:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_LCD_date:	
   933                           ; 1 bytes @ 0x0
   934                           
   935                           
   936                           ; 1 bytes @ 0x0
   937  0070                     	ds	2
   938  0072                     ??_Pines_Init:
   939  0072                     ??_MEF_Init:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0072                     ??_Pwm_init:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     ??_LCD_command:	
   946                           ; 1 bytes @ 0x2
   947                           
   948  0072                     ??_Antirrebote:	
   949                           ; 1 bytes @ 0x2
   950                           
   951  0072                     ??_LCD_date:	
   952                           ; 1 bytes @ 0x2
   953                           
   954                           
   955                           ; 1 bytes @ 0x2
   956  0072                     	ds	2
   957  0074                     LCD_command@cmd:
   958  0074                     LCD_date@date:	
   959                           ; 1 bytes @ 0x4
   960                           
   961                           
   962                           ; 1 bytes @ 0x4
   963  0074                     	ds	1
   964  0075                     ??_LCD_init:
   965  0075                     ?_LCD_character:	
   966                           ; 1 bytes @ 0x5
   967                           
   968  0075                     ?_LCD_array:	
   969                           ; 1 bytes @ 0x5
   970                           
   971  0075                     LCD_character@caracter:	
   972                           ; 1 bytes @ 0x5
   973                           
   974  0075                     LCD_array@x:	
   975                           ; 1 bytes @ 0x5
   976                           
   977                           
   978                           ; 2 bytes @ 0x5
   979  0075                     	ds	1
   980  0076                     ??_LCD_character:
   981                           
   982                           ; 1 bytes @ 0x6
   983  0076                     	ds	1
   984  0077                     LCD_init@i:
   985  0077                     LCD_character@adress:	
   986                           ; 1 bytes @ 0x7
   987                           
   988  0077                     LCD_array@y:	
   989                           ; 1 bytes @ 0x7
   990                           
   991                           
   992                           ; 2 bytes @ 0x7
   993  0077                     	ds	1
   994  0078                     LCD_character@i:
   995                           
   996                           ; 1 bytes @ 0x8
   997  0078                     	ds	1
   998  0079                     LCD_array@date:
   999                           
  1000                           ; 1 bytes @ 0x9
  1001  0079                     	ds	1
  1002  007A                     ??_Select_Modo:
  1003  007A                     ??_Pant_Menu:	
  1004                           ; 1 bytes @ 0xA
  1005                           
  1006  007A                     ??_Pant_Selector:	
  1007                           ; 1 bytes @ 0xA
  1008                           
  1009  007A                     ??_main:	
  1010                           ; 1 bytes @ 0xA
  1011                           
  1012                           
  1013                           	psect	cstackBANK0
  1014  0038                     __pcstackBANK0:	
  1015                           ; 1 bytes @ 0xA
  1016                           
  1017  0038                     ??_LCD_array:
  1018                           
  1019                           ; 1 bytes @ 0x0
  1020  0038                     	ds	2
  1021  003A                     ??_Pant_Inicio:
  1022                           
  1023                           ; 1 bytes @ 0x2
  1024  003A                     	ds	4
  1025  003E                     Pant_Inicio@caracter1:
  1026                           
  1027                           ; 8 bytes @ 0x6
  1028  003E                     	ds	8
  1029  0046                     Pant_Inicio@caracter:
  1030                           
  1031                           ; 8 bytes @ 0xE
  1032  0046                     	ds	8
  1033  004E                     ??_MEF_Actualizacion:
  1034                           
  1035                           ; 1 bytes @ 0x16
  1036  004E                     	ds	2
  1037                           
  1038                           	psect	maintext
  1039  050B                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 28 in file "Main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : B00/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels required when called:    7
  1065 ;; This function calls:
  1066 ;;		_LCD_init
  1067 ;;		_MEF_Actualizacion
  1068 ;;		_MEF_Init
  1069 ;;		_Pines_Init
  1070 ;;		_Pwm_init
  1071 ;; This function is called by:
  1072 ;;		Startup code after reset
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _main
  1078  050B                     _main:
  1079                           
  1080                           ;Main.c: 31:     Pines_Init();
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1084  050B  120A  118A  2545  120A  118A  	fcall	_Pines_Init
  1085                           
  1086                           ;Main.c: 32:     MEF_Init();
  1087  0510  120A  118A  259E  120A  118A  	fcall	_MEF_Init
  1088                           
  1089                           ;Main.c: 33:     LCD_init();
  1090  0515  120A  118A  22D0  120A  118A  	fcall	_LCD_init
  1091                           
  1092                           ;Main.c: 34:     Pwm_init();
  1093  051A  120A  118A  252B  120A  118A  	fcall	_Pwm_init
  1094                           
  1095                           ;Main.c: 36:     TMR1IE=1,TMR1IF=1;
  1096  051F  1683               	bsf	3,5	;RP0=1, select bank1
  1097  0520  1303               	bcf	3,6	;RP1=0, select bank1
  1098  0521  140C               	bsf	12,0	;volatile
  1099  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0524  140C               	bsf	12,0	;volatile
  1102  0525                     l2175:
  1103                           
  1104                           ;Main.c: 39:     {;Main.c: 40:         MEF_Actualizacion();
  1105  0525  120A  118A  2459  120A  118A  	fcall	_MEF_Actualizacion
  1106  052A  2D25               	goto	l2175
  1107  052B                     __end_of_main:
  1108                           
  1109                           	psect	text1
  1110  052B                     __ptext1:	
  1111 ;; *************** function _Pwm_init *****************
  1112 ;; Defined at:
  1113 ;;		line 5 in file "Pwm_Soft.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0
  1130 ;;      Totals:         0       0       0       0       0
  1131 ;;Total ram usage:        0 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    2
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _Pwm_init
  1143  052B                     _Pwm_init:
  1144                           
  1145                           ;Pwm_Soft.c: 7:     ANSELHbits.ANS11 = 0;
  1146                           
  1147                           ;incstack = 0
  1148                           ; Regs used in _Pwm_init: [wreg+status,2+status,0]
  1149  052B  1683               	bsf	3,5	;RP0=1, select bank3
  1150  052C  1703               	bsf	3,6	;RP1=1, select bank3
  1151  052D  1189               	bcf	9,3	;volatile
  1152                           
  1153                           ;Pwm_Soft.c: 10:     T1CONbits.TMR1GE = 0;
  1154  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1155  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0530  1310               	bcf	16,6	;volatile
  1157                           
  1158                           ;Pwm_Soft.c: 11:     T1CONbits.T1SYNC = 1;
  1159  0531  1510               	bsf	16,2	;volatile
  1160                           
  1161                           ;Pwm_Soft.c: 12:     T1CONbits.TMR1CS = 0;
  1162  0532  1090               	bcf	16,1	;volatile
  1163                           
  1164                           ;Pwm_Soft.c: 13:     T1CONbits.T1CKPS = 0b01;
  1165  0533  0810               	movf	16,w	;volatile
  1166  0534  39CF               	andlw	-49
  1167  0535  3810               	iorlw	16
  1168  0536  0090               	movwf	16	;volatile
  1169                           
  1170                           ;Pwm_Soft.c: 14:     T1CONbits.TMR1ON = 1;
  1171  0537  1410               	bsf	16,0	;volatile
  1172                           
  1173                           ;Pwm_Soft.c: 16:     TMR1 = 65285;
  1174  0538  30FF               	movlw	255
  1175  0539  008F               	movwf	15	;volatile
  1176  053A  3005               	movlw	5
  1177  053B  008E               	movwf	14	;volatile
  1178                           
  1179                           ;Pwm_Soft.c: 19:     PEIE = 1;
  1180  053C  170B               	bsf	11,6	;volatile
  1181                           
  1182                           ;Pwm_Soft.c: 20:     GIE = 1;
  1183  053D  178B               	bsf	11,7	;volatile
  1184                           
  1185                           ;Pwm_Soft.c: 21:     TMR1IE = 0;
  1186  053E  1683               	bsf	3,5	;RP0=1, select bank1
  1187  053F  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0540  100C               	bcf	12,0	;volatile
  1189                           
  1190                           ;Pwm_Soft.c: 22:     TMR1IF = 1;
  1191  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0543  140C               	bsf	12,0	;volatile
  1194  0544  0008               	return
  1195  0545                     __end_of_Pwm_init:
  1196                           
  1197                           	psect	text2
  1198  0545                     __ptext2:	
  1199 ;; *************** function _Pines_Init *****************
  1200 ;; Defined at:
  1201 ;;		line 46 in file "Main.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    2
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _Pines_Init
  1231  0545                     _Pines_Init:
  1232                           
  1233                           ;Main.c: 49:     TRISAbits.TRISA5 = 0;
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _Pines_Init: [wreg+status,2]
  1237  0545  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0546  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0547  1285               	bcf	5,5	;volatile
  1240                           
  1241                           ;Main.c: 50:     PORTA = 0;
  1242  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1244  054A  0185               	clrf	5	;volatile
  1245                           
  1246                           ;Main.c: 51:     PORTB = 0;
  1247  054B  0186               	clrf	6	;volatile
  1248                           
  1249                           ;Main.c: 52:     PORTC = 0;
  1250  054C  0187               	clrf	7	;volatile
  1251                           
  1252                           ;Main.c: 53:     TRISB = 0xFF;
  1253  054D  30FF               	movlw	255
  1254  054E  1683               	bsf	3,5	;RP0=1, select bank1
  1255  054F  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0550  0086               	movwf	6	;volatile
  1257                           
  1258                           ;Main.c: 54:     TRISC = 0x00;
  1259  0551  0187               	clrf	7	;volatile
  1260                           
  1261                           ;Main.c: 55:     ANSELHbits.ANS12 = 0;
  1262  0552  1683               	bsf	3,5	;RP0=1, select bank3
  1263  0553  1703               	bsf	3,6	;RP1=1, select bank3
  1264  0554  1209               	bcf	9,4	;volatile
  1265                           
  1266                           ;Main.c: 56:     ANSELHbits.ANS11 = 0;
  1267  0555  1189               	bcf	9,3	;volatile
  1268                           
  1269                           ;Main.c: 57:     ANSELHbits.ANS10 = 0;
  1270  0556  1109               	bcf	9,2	;volatile
  1271                           
  1272                           ;Main.c: 58:     ANSELHbits.ANS8 = 0;
  1273  0557  1009               	bcf	9,0	;volatile
  1274                           
  1275                           ;Main.c: 59:     ANSELHbits.ANS9 = 0;
  1276  0558  1089               	bcf	9,1	;volatile
  1277                           
  1278                           ;Main.c: 60:     ANSELbits.ANS4 = 0;
  1279  0559  1208               	bcf	8,4	;volatile
  1280  055A  0008               	return
  1281  055B                     __end_of_Pines_Init:
  1282                           
  1283                           	psect	text3
  1284  059E                     __ptext3:	
  1285 ;; *************** function _MEF_Init *****************
  1286 ;; Defined at:
  1287 ;;		line 23 in file "MEF.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		status,2
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    2
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           
  1316                           ;psect for function _MEF_Init
  1317  059E                     _MEF_Init:
  1318                           
  1319                           ;MEF.c: 25:     Estado_Actual = ESTADO_INICIO;
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _MEF_Init: [status,2]
  1323  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1324  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1325  05A0  01B6               	clrf	_Estado_Actual
  1326  05A1  0008               	return
  1327  05A2                     __end_of_MEF_Init:
  1328                           
  1329                           	psect	text4
  1330  0459                     __ptext4:	
  1331 ;; *************** function _MEF_Actualizacion *****************
  1332 ;; Defined at:
  1333 ;;		line 30 in file "MEF.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0
  1349 ;;      Temps:          0       2       0       0       0
  1350 ;;      Totals:         0       2       0       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    6
  1354 ;; This function calls:
  1355 ;;		_Antirrebote
  1356 ;;		_Pant_Inicio
  1357 ;;		_Select_Modo
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _MEF_Actualizacion
  1365  0459                     _MEF_Actualizacion:
  1366                           
  1367                           ;MEF.c: 32:     switch(Estado_Actual)
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1371  0459  2C83               	goto	l2157
  1372  045A                     l2131:
  1373                           
  1374                           ;MEF.c: 35:         {;MEF.c: 36:             Pant_Inicio();
  1375  045A  120A  118A  219B   	fcall	_Pant_Inicio
  1376                           
  1377                           ;MEF.c: 37:             WDTCONbits.SWDTEN = 1;
  1378  045D  1283               	bcf	3,5	;RP0=0, select bank2
  1379  045E  1703               	bsf	3,6	;RP1=1, select bank2
  1380  045F  1405               	bsf	5,0	;volatile
  1381                           
  1382                           ;MEF.c: 38:             WDTCONbits.WDTPS = 0b1010;
  1383  0460  0805               	movf	5,w	;volatile
  1384  0461  39E1               	andlw	-31
  1385  0462  3814               	iorlw	20
  1386  0463  0085               	movwf	5	;volatile
  1387  0464  0064               	clrwdt	;# 
  1388                           
  1389                           ;MEF.c: 41:             Estado_Actual = ESTADO_MENU;
  1390  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0467  01B6               	clrf	_Estado_Actual
  1393  0468  0AB6               	incf	_Estado_Actual,f
  1394                           
  1395                           ;MEF.c: 42:         break;
  1396  0469  0008               	return
  1397  046A                     l2139:
  1398                           
  1399                           ;MEF.c: 45:         {;MEF.c: 47:             Select_Modo();
  1400  046A  120A  118A  2496  120A  118A  	fcall	_Select_Modo
  1401                           
  1402                           ;MEF.c: 50:             if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_PULV,Antirrebote()
      +                          ;
  1403  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0471  1C86               	btfss	6,1	;volatile
  1406  0472  2C7D               	goto	l125
  1407  0473  3002               	movlw	2
  1408  0474  2C76               	goto	L1
  1409  0475                     l2147:
  1410  0475  3006               	movlw	6
  1411  0476                     L1:
  1412  0476  00FF               	movwf	127
  1413  0477  087F               	movf	127,w
  1414  0478  00B6               	movwf	_Estado_Actual
  1415  0479  120A  118A  255B   	fcall	_Antirrebote
  1416  047C  0008               	return
  1417  047D                     l125:	
  1418                           ;MEF.c: 51:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FUGA,Antirreb
      +                          ote();
  1419                           
  1420  047D  1886               	btfsc	6,1	;volatile
  1421  047E  2C75               	goto	l2147
  1422                           
  1423                           ;MEF.c: 52:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FLUJO,Antirre
      +                          bote();
  1424  047F  1C86               	btfss	6,1	;volatile
  1425  0480  0008               	return
  1426  0481  3007               	movlw	7
  1427  0482  2C76               	goto	L1
  1428  0483                     l2157:	
  1429                           ;MEF.c: 53:         break;
  1430                           
  1431  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0485  0836               	movf	_Estado_Actual,w
  1434  0486  00CE               	movwf	??_MEF_Actualizacion
  1435  0487  01CF               	clrf	??_MEF_Actualizacion+1
  1436                           
  1437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1438                           ; Switch size 1, requested type "simple"
  1439                           ; Number of cases is 1, Range of values is 0 to 0
  1440                           ; switch strategies available:
  1441                           ; Name         Instructions Cycles
  1442                           ; simple_byte            4     3 (average)
  1443                           ; direct_byte           11     8 (fixed)
  1444                           ; jumptable            260     6 (fixed)
  1445                           ;	Chosen strategy is simple_byte
  1446  0488  084F               	movf	??_MEF_Actualizacion+1,w
  1447  0489  3A00               	xorlw	0	; case 0
  1448  048A  1903               	skipnz
  1449  048B  2C8D               	goto	l2217
  1450  048C  2C95               	goto	l130
  1451  048D                     l2217:
  1452                           
  1453                           ; Switch size 1, requested type "simple"
  1454                           ; Number of cases is 2, Range of values is 0 to 1
  1455                           ; switch strategies available:
  1456                           ; Name         Instructions Cycles
  1457                           ; simple_byte            7     4 (average)
  1458                           ; direct_byte           14     8 (fixed)
  1459                           ; jumptable            260     6 (fixed)
  1460                           ;	Chosen strategy is simple_byte
  1461  048D  084E               	movf	??_MEF_Actualizacion,w
  1462  048E  3A00               	xorlw	0	; case 0
  1463  048F  1903               	skipnz
  1464  0490  2C5A               	goto	l2131
  1465  0491  3A01               	xorlw	1	; case 1
  1466  0492  1903               	skipnz
  1467  0493  2C6A               	goto	l2139
  1468  0494  2C95               	goto	l130
  1469  0495                     l130:
  1470  0495  0008               	return
  1471  0496                     __end_of_MEF_Actualizacion:
  1472                           
  1473                           	psect	text5
  1474  0496                     __ptext5:	
  1475 ;; *************** function _Select_Modo *****************
  1476 ;; Defined at:
  1477 ;;		line 12 in file "Menu_Modo.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    5
  1498 ;; This function calls:
  1499 ;;		_Antirrebote
  1500 ;;		_Pant_Menu
  1501 ;;		_Pant_Selector
  1502 ;; This function is called by:
  1503 ;;		_MEF_Actualizacion
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _Select_Modo
  1509  0496                     _Select_Modo:
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _Select_Modo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1513  0496  0064               	clrwdt	;# 
  1514                           
  1515                           ;Menu_Modo.c: 16:     if(Mostrar) Pant_Menu(),Mostrar=0;
  1516  0497  087A               	movf	_Mostrar,w
  1517  0498  1903               	btfsc	3,2
  1518  0499  2CA0               	goto	l2113
  1519  049A  120A  118A  2416  120A  118A  	fcall	_Pant_Menu
  1520  049F  01FA               	clrf	_Mostrar
  1521  04A0                     l2113:
  1522                           
  1523                           ;Menu_Modo.c: 19:     if(PORTBbits.RB3 || Modo==0)
  1524  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1525  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1526  04A2  1986               	btfsc	6,3	;volatile
  1527  04A3  2CA7               	goto	l2117
  1528  04A4  087B               	movf	_Modo,w
  1529  04A5  1D03               	btfss	3,2
  1530  04A6  0008               	return
  1531  04A7                     l2117:
  1532                           
  1533                           ;Menu_Modo.c: 20:     {;Menu_Modo.c: 21:         Modo+=1;
  1534  04A7  3001               	movlw	1
  1535  04A8  00FF               	movwf	127
  1536  04A9  087F               	movf	127,w
  1537  04AA  07FB               	addwf	_Modo,f
  1538                           
  1539                           ;Menu_Modo.c: 22:         if(Modo>=5||Modo<1) Modo=1;
  1540  04AB  3005               	movlw	5
  1541  04AC  027B               	subwf	_Modo,w
  1542  04AD  1803               	skipnc
  1543  04AE  2CB2               	goto	l165
  1544  04AF  087B               	movf	_Modo,w
  1545  04B0  1D03               	btfss	3,2
  1546  04B1  2CB4               	goto	l2123
  1547  04B2                     l165:
  1548  04B2  01FB               	clrf	_Modo
  1549  04B3  0AFB               	incf	_Modo,f
  1550  04B4                     l2123:
  1551                           
  1552                           ;Menu_Modo.c: 23:         Pant_Selector(),Antirrebote();
  1553  04B4  120A  118A  223D  120A  118A  	fcall	_Pant_Selector
  1554  04B9  120A  118A  255B   	fcall	_Antirrebote
  1555  04BC  0008               	return
  1556  04BD                     __end_of_Select_Modo:
  1557                           
  1558                           	psect	text6
  1559  023D                     __ptext6:	
  1560 ;; *************** function _Pant_Selector *****************
  1561 ;; Defined at:
  1562 ;;		line 42 in file "Display_Lcd.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    4
  1583 ;; This function calls:
  1584 ;;		_LCD_array
  1585 ;; This function is called by:
  1586 ;;		_Select_Modo
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _Pant_Selector
  1592  023D                     _Pant_Selector:
  1593                           
  1594                           ;Display_Lcd.c: 44:     if(Modo == 1) LCD_array(4,1," "),LCD_array(1,1,">");
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in _Pant_Selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1598  023D  037B               	decf	_Modo,w
  1599  023E  1D03               	btfss	3,2
  1600  023F  2A61               	goto	l2065
  1601  0240  3004               	movlw	4
  1602  0241  00F5               	movwf	LCD_array@x
  1603  0242  3000               	movlw	0
  1604  0243  00F6               	movwf	LCD_array@x+1
  1605  0244  3001               	movlw	1
  1606  0245  00F7               	movwf	LCD_array@y
  1607  0246  3000               	movlw	0
  1608  0247  00F8               	movwf	LCD_array@y+1
  1609  0248  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1610  0249  00FF               	movwf	127
  1611  024A  087F               	movf	127,w
  1612  024B  00F9               	movwf	LCD_array@date
  1613  024C  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1614  0251  3001               	movlw	1
  1615  0252  00F5               	movwf	LCD_array@x
  1616  0253  3000               	movlw	0
  1617  0254  00F6               	movwf	LCD_array@x+1
  1618  0255  3001               	movlw	1
  1619  0256  00F7               	movwf	LCD_array@y
  1620  0257  3000               	movlw	0
  1621  0258  00F8               	movwf	LCD_array@y+1
  1622  0259  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1623  025A  00FF               	movwf	127
  1624  025B  087F               	movf	127,w
  1625  025C  00F9               	movwf	LCD_array@date
  1626  025D  120A  118A  23B8   	fcall	_LCD_array
  1627  0260  0008               	return
  1628  0261                     l2065:
  1629  0261  3002               	movlw	2
  1630  0262  067B               	xorwf	_Modo,w
  1631  0263  1D03               	btfss	3,2
  1632  0264  2A86               	goto	l2069
  1633  0265  3001               	movlw	1
  1634  0266  00F5               	movwf	LCD_array@x
  1635  0267  3000               	movlw	0
  1636  0268  00F6               	movwf	LCD_array@x+1
  1637  0269  3001               	movlw	1
  1638  026A  00F7               	movwf	LCD_array@y
  1639  026B  3000               	movlw	0
  1640  026C  00F8               	movwf	LCD_array@y+1
  1641  026D  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1642  026E  00FF               	movwf	127
  1643  026F  087F               	movf	127,w
  1644  0270  00F9               	movwf	LCD_array@date
  1645  0271  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1646  0276  3002               	movlw	2
  1647  0277  00F5               	movwf	LCD_array@x
  1648  0278  3000               	movlw	0
  1649  0279  00F6               	movwf	LCD_array@x+1
  1650  027A  3001               	movlw	1
  1651  027B  00F7               	movwf	LCD_array@y
  1652  027C  3000               	movlw	0
  1653  027D  00F8               	movwf	LCD_array@y+1
  1654  027E  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1655  027F  00FF               	movwf	127
  1656  0280  087F               	movf	127,w
  1657  0281  00F9               	movwf	LCD_array@date
  1658  0282  120A  118A  23B8   	fcall	_LCD_array
  1659  0285  0008               	return
  1660  0286                     l2069:
  1661  0286  3003               	movlw	3
  1662  0287  067B               	xorwf	_Modo,w
  1663  0288  1D03               	btfss	3,2
  1664  0289  2AAB               	goto	l2073
  1665  028A  3002               	movlw	2
  1666  028B  00F5               	movwf	LCD_array@x
  1667  028C  3000               	movlw	0
  1668  028D  00F6               	movwf	LCD_array@x+1
  1669  028E  3001               	movlw	1
  1670  028F  00F7               	movwf	LCD_array@y
  1671  0290  3000               	movlw	0
  1672  0291  00F8               	movwf	LCD_array@y+1
  1673  0292  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1674  0293  00FF               	movwf	127
  1675  0294  087F               	movf	127,w
  1676  0295  00F9               	movwf	LCD_array@date
  1677  0296  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1678  029B  3003               	movlw	3
  1679  029C  00F5               	movwf	LCD_array@x
  1680  029D  3000               	movlw	0
  1681  029E  00F6               	movwf	LCD_array@x+1
  1682  029F  3001               	movlw	1
  1683  02A0  00F7               	movwf	LCD_array@y
  1684  02A1  3000               	movlw	0
  1685  02A2  00F8               	movwf	LCD_array@y+1
  1686  02A3  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1687  02A4  00FF               	movwf	127
  1688  02A5  087F               	movf	127,w
  1689  02A6  00F9               	movwf	LCD_array@date
  1690  02A7  120A  118A  23B8   	fcall	_LCD_array
  1691  02AA  0008               	return
  1692  02AB                     l2073:
  1693  02AB  3004               	movlw	4
  1694  02AC  067B               	xorwf	_Modo,w
  1695  02AD  1D03               	btfss	3,2
  1696  02AE  0008               	return
  1697  02AF  3003               	movlw	3
  1698  02B0  00F5               	movwf	LCD_array@x
  1699  02B1  3000               	movlw	0
  1700  02B2  00F6               	movwf	LCD_array@x+1
  1701  02B3  3001               	movlw	1
  1702  02B4  00F7               	movwf	LCD_array@y
  1703  02B5  3000               	movlw	0
  1704  02B6  00F8               	movwf	LCD_array@y+1
  1705  02B7  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1706  02B8  00FF               	movwf	127
  1707  02B9  087F               	movf	127,w
  1708  02BA  00F9               	movwf	LCD_array@date
  1709  02BB  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1710  02C0  3004               	movlw	4
  1711  02C1  00F5               	movwf	LCD_array@x
  1712  02C2  3000               	movlw	0
  1713  02C3  00F6               	movwf	LCD_array@x+1
  1714  02C4  3001               	movlw	1
  1715  02C5  00F7               	movwf	LCD_array@y
  1716  02C6  3000               	movlw	0
  1717  02C7  00F8               	movwf	LCD_array@y+1
  1718  02C8  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1719  02C9  00FF               	movwf	127
  1720  02CA  087F               	movf	127,w
  1721  02CB  00F9               	movwf	LCD_array@date
  1722  02CC  120A  118A  23B8   	fcall	_LCD_array
  1723  02CF  0008               	return
  1724  02D0                     __end_of_Pant_Selector:
  1725                           
  1726                           	psect	text7
  1727  0416                     __ptext7:	
  1728 ;; *************** function _Pant_Menu *****************
  1729 ;; Defined at:
  1730 ;;		line 57 in file "Display_Lcd.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    4
  1751 ;; This function calls:
  1752 ;;		_LCD_array
  1753 ;; This function is called by:
  1754 ;;		_Select_Modo
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _Pant_Menu
  1760  0416                     _Pant_Menu:
  1761                           
  1762                           ;Display_Lcd.c: 59:     LCD_array(1,3,"PULVERIZACION");
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _Pant_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1766  0416  3001               	movlw	1
  1767  0417  00F5               	movwf	LCD_array@x
  1768  0418  3000               	movlw	0
  1769  0419  00F6               	movwf	LCD_array@x+1
  1770  041A  3003               	movlw	3
  1771  041B  00F7               	movwf	LCD_array@y
  1772  041C  3000               	movlw	0
  1773  041D  00F8               	movwf	LCD_array@y+1
  1774  041E  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1775  041F  00FF               	movwf	127
  1776  0420  087F               	movf	127,w
  1777  0421  00F9               	movwf	LCD_array@date
  1778  0422  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1779                           
  1780                           ;Display_Lcd.c: 60:     LCD_array(2,3,"FUGA");
  1781  0427  3002               	movlw	2
  1782  0428  00F5               	movwf	LCD_array@x
  1783  0429  3000               	movlw	0
  1784  042A  00F6               	movwf	LCD_array@x+1
  1785  042B  3003               	movlw	3
  1786  042C  00F7               	movwf	LCD_array@y
  1787  042D  3000               	movlw	0
  1788  042E  00F8               	movwf	LCD_array@y+1
  1789  042F  3066               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1790  0430  00FF               	movwf	127
  1791  0431  087F               	movf	127,w
  1792  0432  00F9               	movwf	LCD_array@date
  1793  0433  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1794                           
  1795                           ;Display_Lcd.c: 61:     LCD_array(3,3,"FLUJO");
  1796  0438  3003               	movlw	3
  1797  0439  00F5               	movwf	LCD_array@x
  1798  043A  3000               	movlw	0
  1799  043B  00F6               	movwf	LCD_array@x+1
  1800  043C  3003               	movlw	3
  1801  043D  00F7               	movwf	LCD_array@y
  1802  043E  3000               	movlw	0
  1803  043F  00F8               	movwf	LCD_array@y+1
  1804  0440  3060               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1805  0441  00FF               	movwf	127
  1806  0442  087F               	movf	127,w
  1807  0443  00F9               	movwf	LCD_array@date
  1808  0444  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  1809                           
  1810                           ;Display_Lcd.c: 62:     LCD_array(4,3,"LIMP. ULTRASONIDO");
  1811  0449  3004               	movlw	4
  1812  044A  00F5               	movwf	LCD_array@x
  1813  044B  3000               	movlw	0
  1814  044C  00F6               	movwf	LCD_array@x+1
  1815  044D  3003               	movlw	3
  1816  044E  00F7               	movwf	LCD_array@y
  1817  044F  3000               	movlw	0
  1818  0450  00F8               	movwf	LCD_array@y+1
  1819  0451  3040               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1820  0452  00FF               	movwf	127
  1821  0453  087F               	movf	127,w
  1822  0454  00F9               	movwf	LCD_array@date
  1823  0455  120A  118A  23B8   	fcall	_LCD_array
  1824  0458  0008               	return
  1825  0459                     __end_of_Pant_Menu:
  1826                           
  1827                           	psect	text8
  1828  055B                     __ptext8:	
  1829 ;; *************** function _Antirrebote *****************
  1830 ;; Defined at:
  1831 ;;		line 65 in file "Main.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0
  1847 ;;      Temps:          2       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    2
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_MEF_Actualizacion
  1856 ;;		_Select_Modo
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _Antirrebote
  1862  055B                     _Antirrebote:
  1863  055B                     l1445:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _Antirrebote: [wreg]
  1866                           
  1867                           
  1868                           ;Main.c: 67:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1869  055B  3041               	movlw	65
  1870  055C  00F3               	movwf	??_Antirrebote+1
  1871  055D  30EE               	movlw	238
  1872  055E  00F2               	movwf	??_Antirrebote
  1873  055F                     u1707:
  1874  055F  0BF2               	decfsz	??_Antirrebote,f
  1875  0560  2D5F               	goto	u1707
  1876  0561  0BF3               	decfsz	??_Antirrebote+1,f
  1877  0562  2D5F               	goto	u1707
  1878  0563  0000               	nop
  1879                           
  1880                           ;Main.c: 68:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  1881  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0566  1C06               	btfss	6,0	;volatile
  1884  0567  1886               	btfsc	6,1	;volatile
  1885  0568  2D5B               	goto	l1445
  1886  0569  1906               	btfsc	6,2	;volatile
  1887  056A  2D5B               	goto	l1445
  1888  056B  1D86               	btfss	6,3	;volatile
  1889  056C  0008               	return
  1890  056D  2D5B               	goto	l1445
  1891  056E                     __end_of_Antirrebote:
  1892                           
  1893                           	psect	text9
  1894  019B                     __ptext9:	
  1895 ;; *************** function _Pant_Inicio *****************
  1896 ;; Defined at:
  1897 ;;		line 6 in file "Display_Lcd.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  caracter        8   14[BANK0 ] unsigned char [8]
  1902 ;;  caracter1       8    6[BANK0 ] unsigned char [8]
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0      16       0       0       0
  1914 ;;      Temps:          0       4       0       0       0
  1915 ;;      Totals:         0      20       0       0       0
  1916 ;;Total ram usage:       20 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    4
  1919 ;; This function calls:
  1920 ;;		_LCD_array
  1921 ;;		_LCD_character
  1922 ;;		_LCD_command
  1923 ;; This function is called by:
  1924 ;;		_MEF_Actualizacion
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _Pant_Inicio
  1930  019B                     _Pant_Inicio:
  1931                           
  1932                           ;Display_Lcd.c: 9:     char caracter1[8] =
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1936  019B  303E               	movlw	Pant_Inicio@caracter1& (0+255)
  1937  019C  0084               	movwf	4
  1938  019D  3050               	movlw	low Pant_Inicio@F1247
  1939  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1940  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1941  01A0  00BA               	movwf	??_Pant_Inicio
  1942  01A1  0804               	movf	4,w
  1943  01A2  00BB               	movwf	??_Pant_Inicio+1
  1944  01A3  3008               	movlw	8
  1945  01A4  00BC               	movwf	??_Pant_Inicio+2
  1946  01A5                     u1600:
  1947  01A5  083A               	movf	??_Pant_Inicio,w
  1948  01A6  0084               	movwf	4
  1949  01A7  1383               	bcf	3,7	;select IRP bank0
  1950  01A8  0800               	movf	0,w
  1951  01A9  00BD               	movwf	??_Pant_Inicio+3
  1952  01AA  0ABA               	incf	??_Pant_Inicio,f
  1953  01AB  083B               	movf	??_Pant_Inicio+1,w
  1954  01AC  0084               	movwf	4
  1955  01AD  083D               	movf	??_Pant_Inicio+3,w
  1956  01AE  0080               	movwf	0
  1957  01AF  0ABB               	incf	??_Pant_Inicio+1,f
  1958  01B0  0BBC               	decfsz	??_Pant_Inicio+2,f
  1959  01B1  29A5               	goto	u1600
  1960                           
  1961                           ;Display_Lcd.c: 20:     LCD_character(0x01,caracter1);
  1962  01B2  303E               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  1963  01B3  00FF               	movwf	127
  1964  01B4  087F               	movf	127,w
  1965  01B5  00F5               	movwf	LCD_character@caracter
  1966  01B6  3001               	movlw	1
  1967  01B7  120A  118A  24BD  120A  118A  	fcall	_LCD_character
  1968                           
  1969                           ;Display_Lcd.c: 23:     char caracter[8] = {0,0,0,0,0,0,0,0};
  1970  01BC  3046               	movlw	Pant_Inicio@caracter& (0+255)
  1971  01BD  0084               	movwf	4
  1972  01BE  3008               	movlw	8
  1973  01BF  00FF               	movwf	127
  1974  01C0                     u1610:
  1975  01C0  1383               	bcf	3,7	;select IRP bank0
  1976  01C1  0180               	clrf	0
  1977  01C2  0A84               	incf	4,f
  1978  01C3  0BFF               	decfsz	127,f
  1979  01C4  29C0               	goto	u1610
  1980                           
  1981                           ;Display_Lcd.c: 24:     LCD_character(0x00,caracter);
  1982  01C5  3046               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  1983  01C6  00FF               	movwf	127
  1984  01C7  087F               	movf	127,w
  1985  01C8  00F5               	movwf	LCD_character@caracter
  1986  01C9  3000               	movlw	0
  1987  01CA  120A  118A  24BD  120A  118A  	fcall	_LCD_character
  1988                           
  1989                           ;Display_Lcd.c: 27:     LCD_command(0x01);
  1990  01CF  3001               	movlw	1
  1991  01D0  120A  118A  2029  120A  118A  	fcall	_LCD_command
  1992                           
  1993                           ;Display_Lcd.c: 28:     LCD_array(1,1,"====================");
  1994  01D5  3001               	movlw	1
  1995  01D6  00F5               	movwf	LCD_array@x
  1996  01D7  3000               	movlw	0
  1997  01D8  00F6               	movwf	LCD_array@x+1
  1998  01D9  3001               	movlw	1
  1999  01DA  00F7               	movwf	LCD_array@y
  2000  01DB  3000               	movlw	0
  2001  01DC  00F8               	movwf	LCD_array@y+1
  2002  01DD  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2003  01DE  00FF               	movwf	127
  2004  01DF  087F               	movf	127,w
  2005  01E0  00F9               	movwf	LCD_array@date
  2006  01E1  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  2007                           
  2008                           ;Display_Lcd.c: 29:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  2009  01E6  3002               	movlw	2
  2010  01E7  00F5               	movwf	LCD_array@x
  2011  01E8  3000               	movlw	0
  2012  01E9  00F6               	movwf	LCD_array@x+1
  2013  01EA  3001               	movlw	1
  2014  01EB  00F7               	movwf	LCD_array@y
  2015  01EC  3000               	movlw	0
  2016  01ED  00F8               	movwf	LCD_array@y+1
  2017  01EE  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2018  01EF  00FF               	movwf	127
  2019  01F0  087F               	movf	127,w
  2020  01F1  00F9               	movwf	LCD_array@date
  2021  01F2  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  2022                           
  2023                           ;Display_Lcd.c: 30:     LCD_array(3,1,"   DE INYECTORES    ");
  2024  01F7  3003               	movlw	3
  2025  01F8  00F5               	movwf	LCD_array@x
  2026  01F9  3000               	movlw	0
  2027  01FA  00F6               	movwf	LCD_array@x+1
  2028  01FB  3001               	movlw	1
  2029  01FC  00F7               	movwf	LCD_array@y
  2030  01FD  3000               	movlw	0
  2031  01FE  00F8               	movwf	LCD_array@y+1
  2032  01FF  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2033  0200  00FF               	movwf	127
  2034  0201  087F               	movf	127,w
  2035  0202  00F9               	movwf	LCD_array@date
  2036  0203  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  2037                           
  2038                           ;Display_Lcd.c: 31:     LCD_array(4,1,"====================");
  2039  0208  3004               	movlw	4
  2040  0209  00F5               	movwf	LCD_array@x
  2041  020A  3000               	movlw	0
  2042  020B  00F6               	movwf	LCD_array@x+1
  2043  020C  3001               	movlw	1
  2044  020D  00F7               	movwf	LCD_array@y
  2045  020E  3000               	movlw	0
  2046  020F  00F8               	movwf	LCD_array@y+1
  2047  0210  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2048  0211  00FF               	movwf	127
  2049  0212  087F               	movf	127,w
  2050  0213  00F9               	movwf	LCD_array@date
  2051  0214  120A  118A  23B8  120A  118A  	fcall	_LCD_array
  2052                           
  2053                           ;Display_Lcd.c: 32:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  2054  0219  3033               	movlw	51
  2055  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2056  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2057  021C  00BC               	movwf	??_Pant_Inicio+2
  2058  021D  30BB               	movlw	187
  2059  021E  00BB               	movwf	??_Pant_Inicio+1
  2060  021F  30DF               	movlw	223
  2061  0220  00BA               	movwf	??_Pant_Inicio
  2062  0221                     u1717:
  2063  0221  0BBA               	decfsz	??_Pant_Inicio,f
  2064  0222  2A21               	goto	u1717
  2065  0223  0BBB               	decfsz	??_Pant_Inicio+1,f
  2066  0224  2A21               	goto	u1717
  2067  0225  0BBC               	decfsz	??_Pant_Inicio+2,f
  2068  0226  2A21               	goto	u1717
  2069                           
  2070                           ;Display_Lcd.c: 35:     LCD_command(0x01);
  2071  0227  3001               	movlw	1
  2072  0228  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2073                           
  2074                           ;Display_Lcd.c: 37:     LCD_array(1,1,">");
  2075  022D  3001               	movlw	1
  2076  022E  00F5               	movwf	LCD_array@x
  2077  022F  3000               	movlw	0
  2078  0230  00F6               	movwf	LCD_array@x+1
  2079  0231  3001               	movlw	1
  2080  0232  00F7               	movwf	LCD_array@y
  2081  0233  3000               	movlw	0
  2082  0234  00F8               	movwf	LCD_array@y+1
  2083  0235  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2084  0236  00FF               	movwf	127
  2085  0237  087F               	movf	127,w
  2086  0238  00F9               	movwf	LCD_array@date
  2087  0239  120A  118A  23B8   	fcall	_LCD_array
  2088  023C  0008               	return
  2089  023D                     __end_of_Pant_Inicio:
  2090                           
  2091                           	psect	text10
  2092  04BD                     __ptext10:	
  2093 ;; *************** function _LCD_character *****************
  2094 ;; Defined at:
  2095 ;;		line 197 in file "Lcd.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  adress          1    wreg     unsigned char 
  2098 ;;  caracter        1    5[COMMON] PTR unsigned char 
  2099 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  adress          1    7[COMMON] unsigned char 
  2102 ;;  i               1    8[COMMON] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         1       0       0       0       0
  2113 ;;      Locals:         2       0       0       0       0
  2114 ;;      Temps:          1       0       0       0       0
  2115 ;;      Totals:         4       0       0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		_LCD_command
  2121 ;;		_LCD_date
  2122 ;; This function is called by:
  2123 ;;		_Pant_Inicio
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _LCD_character
  2129  04BD                     _LCD_character:
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2133                           ;LCD_character@adress stored from wreg
  2134  04BD  00F7               	movwf	LCD_character@adress
  2135                           
  2136                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  2137  04BE  0877               	movf	LCD_character@adress,w
  2138  04BF  00F6               	movwf	??_LCD_character
  2139  04C0  3002               	movlw	2
  2140  04C1                     u655:
  2141  04C1  1003               	clrc
  2142  04C2  0DF6               	rlf	??_LCD_character,f
  2143  04C3  3EFF               	addlw	-1
  2144  04C4  1D03               	skipz
  2145  04C5  2CC1               	goto	u655
  2146  04C6  1003               	clrc
  2147  04C7  0D76               	rlf	??_LCD_character,w
  2148  04C8  3E40               	addlw	64
  2149  04C9  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2150                           
  2151                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  2152  04CE  01F8               	clrf	LCD_character@i
  2153  04CF                     l1487:
  2154                           
  2155                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  2156  04CF  0878               	movf	LCD_character@i,w
  2157  04D0  0775               	addwf	LCD_character@caracter,w
  2158  04D1  00F6               	movwf	??_LCD_character
  2159  04D2  0876               	movf	??_LCD_character,w
  2160  04D3  0084               	movwf	4
  2161  04D4  1383               	bcf	3,7	;select IRP bank0
  2162  04D5  0800               	movf	0,w
  2163  04D6  120A  118A  20E3  120A  118A  	fcall	_LCD_date
  2164                           
  2165                           ;Lcd.c: 203:     }
  2166  04DB  3001               	movlw	1
  2167  04DC  00FF               	movwf	127
  2168  04DD  087F               	movf	127,w
  2169  04DE  07F8               	addwf	LCD_character@i,f
  2170  04DF  3008               	movlw	8
  2171  04E0  0278               	subwf	LCD_character@i,w
  2172  04E1  1803               	btfsc	3,0
  2173  04E2  0008               	return
  2174  04E3  2CCF               	goto	l1487
  2175  04E4                     __end_of_LCD_character:
  2176                           
  2177                           	psect	text11
  2178  03B8                     __ptext11:	
  2179 ;; *************** function _LCD_array *****************
  2180 ;; Defined at:
  2181 ;;		line 137 in file "Lcd.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  x               2    5[COMMON] int 
  2184 ;;  y               2    7[COMMON] int 
  2185 ;;  date            1    9[COMMON] PTR unsigned char 
  2186 ;;		 -> STR_17(18), STR_16(6), STR_15(5), STR_14(14), 
  2187 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  2188 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2189 ;;		 -> STR_5(2), STR_4(21), STR_3(21), STR_2(21), 
  2190 ;;		 -> STR_1(21), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         5       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0
  2204 ;;      Temps:          0       2       0       0       0
  2205 ;;      Totals:         5       2       0       0       0
  2206 ;;Total ram usage:        7 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    3
  2209 ;; This function calls:
  2210 ;;		_LCD_command
  2211 ;;		_LCD_date
  2212 ;; This function is called by:
  2213 ;;		_Pant_Inicio
  2214 ;;		_Pant_Selector
  2215 ;;		_Pant_Menu
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _LCD_array
  2221  03B8                     _LCD_array:
  2222                           
  2223                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2227  03B8  2BDD               	goto	l2043
  2228  03B9                     l2033:
  2229  03B9  0877               	movf	LCD_array@y,w
  2230  03BA  3EFF               	addlw	255
  2231  03BB  3880               	iorlw	128
  2232  03BC  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2233                           
  2234                           ;Lcd.c: 143:         break;
  2235  03C1  2C0B               	goto	l2051
  2236  03C2                     l2035:
  2237  03C2  0877               	movf	LCD_array@y,w
  2238  03C3  3E3F               	addlw	63
  2239  03C4  3880               	iorlw	128
  2240  03C5  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2241                           
  2242                           ;Lcd.c: 145:         break;
  2243  03CA  2C0B               	goto	l2051
  2244  03CB                     l2037:
  2245  03CB  0877               	movf	LCD_array@y,w
  2246  03CC  3E13               	addlw	19
  2247  03CD  3880               	iorlw	128
  2248  03CE  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2249                           
  2250                           ;Lcd.c: 147:         break;
  2251  03D3  2C0B               	goto	l2051
  2252  03D4                     l2039:
  2253  03D4  0877               	movf	LCD_array@y,w
  2254  03D5  3E53               	addlw	83
  2255  03D6  3880               	iorlw	128
  2256  03D7  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2257                           
  2258                           ;Lcd.c: 149:         break;
  2259  03DC  2C0B               	goto	l2051
  2260  03DD                     l2043:
  2261                           
  2262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2263                           ; Switch size 1, requested type "simple"
  2264                           ; Number of cases is 1, Range of values is 0 to 0
  2265                           ; switch strategies available:
  2266                           ; Name         Instructions Cycles
  2267                           ; simple_byte            4     3 (average)
  2268                           ; direct_byte           11     8 (fixed)
  2269                           ; jumptable            260     6 (fixed)
  2270                           ;	Chosen strategy is simple_byte
  2271  03DD  0876               	movf	LCD_array@x+1,w
  2272  03DE  3A00               	xorlw	0	; case 0
  2273  03DF  1903               	skipnz
  2274  03E0  2BE2               	goto	l2219
  2275  03E1  2C0B               	goto	l2051
  2276  03E2                     l2219:
  2277                           
  2278                           ; Switch size 1, requested type "simple"
  2279                           ; Number of cases is 4, Range of values is 1 to 4
  2280                           ; switch strategies available:
  2281                           ; Name         Instructions Cycles
  2282                           ; simple_byte           13     7 (average)
  2283                           ; direct_byte           23    11 (fixed)
  2284                           ; jumptable            263     9 (fixed)
  2285                           ;	Chosen strategy is simple_byte
  2286  03E2  0875               	movf	LCD_array@x,w
  2287  03E3  3A01               	xorlw	1	; case 1
  2288  03E4  1903               	skipnz
  2289  03E5  2BB9               	goto	l2033
  2290  03E6  3A03               	xorlw	3	; case 2
  2291  03E7  1903               	skipnz
  2292  03E8  2BC2               	goto	l2035
  2293  03E9  3A01               	xorlw	1	; case 3
  2294  03EA  1903               	skipnz
  2295  03EB  2BCB               	goto	l2037
  2296  03EC  3A07               	xorlw	7	; case 4
  2297  03ED  1903               	skipnz
  2298  03EE  2BD4               	goto	l2039
  2299  03EF  2C0B               	goto	l2051
  2300  03F0                     l2045:
  2301                           
  2302                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  2303  03F0  0879               	movf	LCD_array@date,w
  2304  03F1  0084               	movwf	4
  2305  03F2  120A  118A  2346  120A  118A  	fcall	stringdir
  2306  03F7  120A  118A  20E3  120A  118A  	fcall	_LCD_date
  2307                           
  2308                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  2309  03FC  3007               	movlw	7
  2310  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2311  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2312  03FF  00B9               	movwf	??_LCD_array+1
  2313  0400  307C               	movlw	124
  2314  0401  00B8               	movwf	??_LCD_array
  2315  0402                     u1727:
  2316  0402  0BB8               	decfsz	??_LCD_array,f
  2317  0403  2C02               	goto	u1727
  2318  0404  0BB9               	decfsz	??_LCD_array+1,f
  2319  0405  2C02               	goto	u1727
  2320  0406  0000               	nop
  2321                           
  2322                           ;Lcd.c: 157:         date++;
  2323  0407  3001               	movlw	1
  2324  0408  00FF               	movwf	127
  2325  0409  087F               	movf	127,w
  2326  040A  07F9               	addwf	LCD_array@date,f
  2327  040B                     l2051:
  2328                           
  2329                           ;Lcd.c: 153:     while(*date)
  2330  040B  0879               	movf	LCD_array@date,w
  2331  040C  0084               	movwf	4
  2332  040D  120A  118A  2346  120A  118A  	fcall	stringdir
  2333  0412  3A00               	xorlw	0
  2334  0413  1903               	btfsc	3,2
  2335  0414  0008               	return
  2336  0415  2BF0               	goto	l2045
  2337  0416                     __end_of_LCD_array:
  2338                           
  2339                           	psect	text12
  2340  00E3                     __ptext12:	
  2341 ;; *************** function _LCD_date *****************
  2342 ;; Defined at:
  2343 ;;		line 88 in file "Lcd.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  date            1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  date            1    4[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0
  2360 ;;      Totals:         3       0       0       0       0
  2361 ;;Total ram usage:        3 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_LCD_array
  2368 ;;		_LCD_character
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _LCD_date
  2374  00E3                     _LCD_date:
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  2378                           ;LCD_date@date stored from wreg
  2379  00E3  00F4               	movwf	LCD_date@date
  2380                           
  2381                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2382  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2383  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2384  00E6  1207               	bcf	7,4	;volatile
  2385  00E7  1287               	bcf	7,5	;volatile
  2386  00E8  1307               	bcf	7,6	;volatile
  2387  00E9  1387               	bcf	7,7	;volatile
  2388                           
  2389                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  2390  00EA  0874               	movf	LCD_date@date,w
  2391  00EB  00F2               	movwf	??_LCD_date
  2392  00EC  3004               	movlw	4
  2393  00ED                     u505:
  2394  00ED  1003               	clrc
  2395  00EE  0CF2               	rrf	??_LCD_date,f
  2396  00EF  3EFF               	addlw	-1
  2397  00F0  1D03               	skipz
  2398  00F1  28ED               	goto	u505
  2399  00F2  0872               	movf	??_LCD_date,w
  2400  00F3  3901               	andlw	1
  2401  00F4  00F3               	movwf	??_LCD_date+1
  2402  00F5  0EF3               	swapf	??_LCD_date+1,f
  2403  00F6  0807               	movf	7,w	;volatile
  2404  00F7  0673               	xorwf	??_LCD_date+1,w
  2405  00F8  39EF               	andlw	-17
  2406  00F9  0673               	xorwf	??_LCD_date+1,w
  2407  00FA  0087               	movwf	7	;volatile
  2408                           
  2409                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  2410  00FB  0874               	movf	LCD_date@date,w
  2411  00FC  00F2               	movwf	??_LCD_date
  2412  00FD  3005               	movlw	5
  2413  00FE                     u515:
  2414  00FE  1003               	clrc
  2415  00FF  0CF2               	rrf	??_LCD_date,f
  2416  0100  3EFF               	addlw	-1
  2417  0101  1D03               	skipz
  2418  0102  28FE               	goto	u515
  2419  0103  0872               	movf	??_LCD_date,w
  2420  0104  3901               	andlw	1
  2421  0105  00F3               	movwf	??_LCD_date+1
  2422  0106  0EF3               	swapf	??_LCD_date+1,f
  2423  0107  0DF3               	rlf	??_LCD_date+1,f
  2424  0108  0807               	movf	7,w	;volatile
  2425  0109  0673               	xorwf	??_LCD_date+1,w
  2426  010A  39DF               	andlw	-33
  2427  010B  0673               	xorwf	??_LCD_date+1,w
  2428  010C  0087               	movwf	7	;volatile
  2429                           
  2430                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  2431  010D  0874               	movf	LCD_date@date,w
  2432  010E  00F2               	movwf	??_LCD_date
  2433  010F  3006               	movlw	6
  2434  0110                     u525:
  2435  0110  1003               	clrc
  2436  0111  0CF2               	rrf	??_LCD_date,f
  2437  0112  3EFF               	addlw	-1
  2438  0113  1D03               	skipz
  2439  0114  2910               	goto	u525
  2440  0115  0872               	movf	??_LCD_date,w
  2441  0116  3901               	andlw	1
  2442  0117  00F3               	movwf	??_LCD_date+1
  2443  0118  0EF3               	swapf	??_LCD_date+1,f
  2444  0119  0DF3               	rlf	??_LCD_date+1,f
  2445  011A  0DF3               	rlf	??_LCD_date+1,f
  2446  011B  0807               	movf	7,w	;volatile
  2447  011C  0673               	xorwf	??_LCD_date+1,w
  2448  011D  39BF               	andlw	-65
  2449  011E  0673               	xorwf	??_LCD_date+1,w
  2450  011F  0087               	movwf	7	;volatile
  2451                           
  2452                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  2453  0120  0874               	movf	LCD_date@date,w
  2454  0121  00F2               	movwf	??_LCD_date
  2455  0122  3007               	movlw	7
  2456  0123                     u535:
  2457  0123  1003               	clrc
  2458  0124  0CF2               	rrf	??_LCD_date,f
  2459  0125  3EFF               	addlw	-1
  2460  0126  1D03               	skipz
  2461  0127  2923               	goto	u535
  2462  0128  0872               	movf	??_LCD_date,w
  2463  0129  3901               	andlw	1
  2464  012A  00F3               	movwf	??_LCD_date+1
  2465  012B  0CF3               	rrf	??_LCD_date+1,f
  2466  012C  0CF3               	rrf	??_LCD_date+1,f
  2467  012D  0807               	movf	7,w	;volatile
  2468  012E  0673               	xorwf	??_LCD_date+1,w
  2469  012F  397F               	andlw	-129
  2470  0130  0673               	xorwf	??_LCD_date+1,w
  2471  0131  0087               	movwf	7	;volatile
  2472                           
  2473                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  2474  0132  1487               	bsf	7,1	;volatile
  2475                           
  2476                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  2477  0133  1187               	bcf	7,3	;volatile
  2478                           
  2479                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  2480  0134  1587               	bsf	7,3	;volatile
  2481                           
  2482                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2483  0135  3018               	movlw	24
  2484  0136  00F2               	movwf	??_LCD_date
  2485  0137                     u1737:
  2486  0137  0BF2               	decfsz	??_LCD_date,f
  2487  0138  2937               	goto	u1737
  2488  0139  293A               	nop2
  2489                           
  2490                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  2491  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2492  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2493  013C  1187               	bcf	7,3	;volatile
  2494                           
  2495                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2496  013D  3018               	movlw	24
  2497  013E  00F2               	movwf	??_LCD_date
  2498  013F                     u1747:
  2499  013F  0BF2               	decfsz	??_LCD_date,f
  2500  0140  293F               	goto	u1747
  2501  0141  2942               	nop2
  2502                           
  2503                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2504  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0144  1207               	bcf	7,4	;volatile
  2507  0145  1287               	bcf	7,5	;volatile
  2508  0146  1307               	bcf	7,6	;volatile
  2509  0147  1387               	bcf	7,7	;volatile
  2510                           
  2511                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  2512  0148  0874               	movf	LCD_date@date,w
  2513  0149  3901               	andlw	1
  2514  014A  00F2               	movwf	??_LCD_date
  2515  014B  0EF2               	swapf	??_LCD_date,f
  2516  014C  0807               	movf	7,w	;volatile
  2517  014D  0672               	xorwf	??_LCD_date,w
  2518  014E  39EF               	andlw	-17
  2519  014F  0672               	xorwf	??_LCD_date,w
  2520  0150  0087               	movwf	7	;volatile
  2521                           
  2522                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  2523  0151  0874               	movf	LCD_date@date,w
  2524  0152  00F2               	movwf	??_LCD_date
  2525  0153  1003               	clrc
  2526  0154  0C72               	rrf	??_LCD_date,w
  2527  0155  3901               	andlw	1
  2528  0156  00F3               	movwf	??_LCD_date+1
  2529  0157  0EF3               	swapf	??_LCD_date+1,f
  2530  0158  0DF3               	rlf	??_LCD_date+1,f
  2531  0159  0807               	movf	7,w	;volatile
  2532  015A  0673               	xorwf	??_LCD_date+1,w
  2533  015B  39DF               	andlw	-33
  2534  015C  0673               	xorwf	??_LCD_date+1,w
  2535  015D  0087               	movwf	7	;volatile
  2536                           
  2537                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  2538  015E  0874               	movf	LCD_date@date,w
  2539  015F  00F2               	movwf	??_LCD_date
  2540  0160  3002               	movlw	2
  2541  0161                     u545:
  2542  0161  1003               	clrc
  2543  0162  0CF2               	rrf	??_LCD_date,f
  2544  0163  3EFF               	addlw	-1
  2545  0164  1D03               	skipz
  2546  0165  2961               	goto	u545
  2547  0166  0872               	movf	??_LCD_date,w
  2548  0167  3901               	andlw	1
  2549  0168  00F3               	movwf	??_LCD_date+1
  2550  0169  0EF3               	swapf	??_LCD_date+1,f
  2551  016A  0DF3               	rlf	??_LCD_date+1,f
  2552  016B  0DF3               	rlf	??_LCD_date+1,f
  2553  016C  0807               	movf	7,w	;volatile
  2554  016D  0673               	xorwf	??_LCD_date+1,w
  2555  016E  39BF               	andlw	-65
  2556  016F  0673               	xorwf	??_LCD_date+1,w
  2557  0170  0087               	movwf	7	;volatile
  2558                           
  2559                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  2560  0171  0874               	movf	LCD_date@date,w
  2561  0172  00F2               	movwf	??_LCD_date
  2562  0173  3003               	movlw	3
  2563  0174                     u555:
  2564  0174  1003               	clrc
  2565  0175  0CF2               	rrf	??_LCD_date,f
  2566  0176  3EFF               	addlw	-1
  2567  0177  1D03               	skipz
  2568  0178  2974               	goto	u555
  2569  0179  0872               	movf	??_LCD_date,w
  2570  017A  3901               	andlw	1
  2571  017B  00F3               	movwf	??_LCD_date+1
  2572  017C  0CF3               	rrf	??_LCD_date+1,f
  2573  017D  0CF3               	rrf	??_LCD_date+1,f
  2574  017E  0807               	movf	7,w	;volatile
  2575  017F  0673               	xorwf	??_LCD_date+1,w
  2576  0180  397F               	andlw	-129
  2577  0181  0673               	xorwf	??_LCD_date+1,w
  2578  0182  0087               	movwf	7	;volatile
  2579                           
  2580                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  2581  0183  1487               	bsf	7,1	;volatile
  2582                           
  2583                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  2584  0184  1187               	bcf	7,3	;volatile
  2585                           
  2586                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  2587  0185  1587               	bsf	7,3	;volatile
  2588                           
  2589                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  2590  0186  3053               	movlw	83
  2591  0187  00F2               	movwf	??_LCD_date
  2592  0188                     u1757:
  2593  0188  0BF2               	decfsz	??_LCD_date,f
  2594  0189  2988               	goto	u1757
  2595                           
  2596                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  2597  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2598  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2599  018C  1187               	bcf	7,3	;volatile
  2600                           
  2601                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  2602  018D  3053               	movlw	83
  2603  018E  00F2               	movwf	??_LCD_date
  2604  018F                     u1767:
  2605  018F  0BF2               	decfsz	??_LCD_date,f
  2606  0190  298F               	goto	u1767
  2607                           
  2608                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2609  0191  3014               	movlw	20
  2610  0192  00F3               	movwf	??_LCD_date+1
  2611  0193  3079               	movlw	121
  2612  0194  00F2               	movwf	??_LCD_date
  2613  0195                     u1777:
  2614  0195  0BF2               	decfsz	??_LCD_date,f
  2615  0196  2995               	goto	u1777
  2616  0197  0BF3               	decfsz	??_LCD_date+1,f
  2617  0198  2995               	goto	u1777
  2618  0199  299A               	nop2
  2619  019A  0008               	return
  2620  019B                     __end_of_LCD_date:
  2621                           
  2622                           	psect	text13
  2623  02D0                     __ptext13:	
  2624 ;; *************** function _LCD_init *****************
  2625 ;; Defined at:
  2626 ;;		line 4 in file "Lcd.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  i               1    7[COMMON] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         1       0       0       0       0
  2642 ;;      Temps:          2       0       0       0       0
  2643 ;;      Totals:         3       0       0       0       0
  2644 ;;Total ram usage:        3 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    3
  2647 ;; This function calls:
  2648 ;;		_LCD_command
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _LCD_init
  2656  02D0                     _LCD_init:
  2657                           
  2658                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2662  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2663  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2664  02D2  1207               	bcf	7,4	;volatile
  2665  02D3  1287               	bcf	7,5	;volatile
  2666  02D4  1307               	bcf	7,6	;volatile
  2667  02D5  1387               	bcf	7,7	;volatile
  2668                           
  2669                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  2670  02D6  1087               	bcf	7,1	;volatile
  2671  02D7  1187               	bcf	7,3	;volatile
  2672                           
  2673                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  2674  02D8  1107               	bcf	7,2	;volatile
  2675  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2676  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2677  02DB  1107               	bcf	7,2	;volatile
  2678                           
  2679                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2680  02DC  30C3               	movlw	195
  2681  02DD  00F6               	movwf	??_LCD_init+1
  2682  02DE  30CD               	movlw	205
  2683  02DF  00F5               	movwf	??_LCD_init
  2684  02E0                     u1787:
  2685  02E0  0BF5               	decfsz	??_LCD_init,f
  2686  02E1  2AE0               	goto	u1787
  2687  02E2  0BF6               	decfsz	??_LCD_init+1,f
  2688  02E3  2AE0               	goto	u1787
  2689                           
  2690                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  2691  02E4  01F7               	clrf	LCD_init@i
  2692  02E5                     l1557:
  2693                           
  2694                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  2695  02E5  3003               	movlw	3
  2696  02E6  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2697                           
  2698                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  2699  02EB  302E               	movlw	46
  2700  02EC  00F6               	movwf	??_LCD_init+1
  2701  02ED  3073               	movlw	115
  2702  02EE  00F5               	movwf	??_LCD_init
  2703  02EF                     u1797:
  2704  02EF  0BF5               	decfsz	??_LCD_init,f
  2705  02F0  2AEF               	goto	u1797
  2706  02F1  0BF6               	decfsz	??_LCD_init+1,f
  2707  02F2  2AEF               	goto	u1797
  2708                           
  2709                           ;Lcd.c: 18:     }
  2710  02F3  3001               	movlw	1
  2711  02F4  00FF               	movwf	127
  2712  02F5  087F               	movf	127,w
  2713  02F6  07F7               	addwf	LCD_init@i,f
  2714  02F7  3003               	movlw	3
  2715  02F8  0277               	subwf	LCD_init@i,w
  2716  02F9  1C03               	skipc
  2717  02FA  2AE5               	goto	l1557
  2718                           
  2719                           ;Lcd.c: 21:  LCD_command(0x33);
  2720  02FB  3033               	movlw	51
  2721  02FC  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2722                           
  2723                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2724  0301  30A6               	movlw	166
  2725  0302  00F5               	movwf	??_LCD_init
  2726  0303                     u1807:
  2727  0303  0BF5               	decfsz	??_LCD_init,f
  2728  0304  2B03               	goto	u1807
  2729  0305  0000               	nop
  2730                           
  2731                           ;Lcd.c: 23:     LCD_command(0x32);
  2732  0306  3032               	movlw	50
  2733  0307  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2734                           
  2735                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2736  030C  3021               	movlw	33
  2737  030D  00F6               	movwf	??_LCD_init+1
  2738  030E  3076               	movlw	118
  2739  030F  00F5               	movwf	??_LCD_init
  2740  0310                     u1817:
  2741  0310  0BF5               	decfsz	??_LCD_init,f
  2742  0311  2B10               	goto	u1817
  2743  0312  0BF6               	decfsz	??_LCD_init+1,f
  2744  0313  2B10               	goto	u1817
  2745  0314  0000               	nop
  2746                           
  2747                           ;Lcd.c: 25:  LCD_command(0x28);
  2748  0315  3028               	movlw	40
  2749  0316  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2750                           
  2751                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2752  031B  30A6               	movlw	166
  2753  031C  00F5               	movwf	??_LCD_init
  2754  031D                     u1827:
  2755  031D  0BF5               	decfsz	??_LCD_init,f
  2756  031E  2B1D               	goto	u1827
  2757  031F  0000               	nop
  2758                           
  2759                           ;Lcd.c: 27:  LCD_command(0x0C);
  2760  0320  300C               	movlw	12
  2761  0321  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2762                           
  2763                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2764  0326  30A6               	movlw	166
  2765  0327  00F5               	movwf	??_LCD_init
  2766  0328                     u1837:
  2767  0328  0BF5               	decfsz	??_LCD_init,f
  2768  0329  2B28               	goto	u1837
  2769  032A  0000               	nop
  2770                           
  2771                           ;Lcd.c: 29:  LCD_command(0x06);
  2772  032B  3006               	movlw	6
  2773  032C  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2774                           
  2775                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2776  0331  30A6               	movlw	166
  2777  0332  00F5               	movwf	??_LCD_init
  2778  0333                     u1847:
  2779  0333  0BF5               	decfsz	??_LCD_init,f
  2780  0334  2B33               	goto	u1847
  2781  0335  0000               	nop
  2782                           
  2783                           ;Lcd.c: 31:     LCD_command(0x01);
  2784  0336  3001               	movlw	1
  2785  0337  120A  118A  2029  120A  118A  	fcall	_LCD_command
  2786                           
  2787                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2788  033C  3041               	movlw	65
  2789  033D  00F6               	movwf	??_LCD_init+1
  2790  033E  30EE               	movlw	238
  2791  033F  00F5               	movwf	??_LCD_init
  2792  0340                     u1857:
  2793  0340  0BF5               	decfsz	??_LCD_init,f
  2794  0341  2B40               	goto	u1857
  2795  0342  0BF6               	decfsz	??_LCD_init+1,f
  2796  0343  2B40               	goto	u1857
  2797  0344  0000               	nop
  2798  0345  0008               	return
  2799  0346                     __end_of_LCD_init:
  2800                           
  2801                           	psect	text14
  2802  0029                     __ptext14:	
  2803 ;; *************** function _LCD_command *****************
  2804 ;; Defined at:
  2805 ;;		line 39 in file "Lcd.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  cmd             1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  cmd             1    4[COMMON] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         1       0       0       0       0
  2821 ;;      Temps:          2       0       0       0       0
  2822 ;;      Totals:         3       0       0       0       0
  2823 ;;Total ram usage:        3 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_Pant_Inicio
  2830 ;;		_LCD_init
  2831 ;;		_LCD_array
  2832 ;;		_LCD_character
  2833 ;;		_LCD_xy
  2834 ;;		_LCD_shift
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function _LCD_command
  2840  0029                     _LCD_command:
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  2844                           ;LCD_command@cmd stored from wreg
  2845  0029  00F4               	movwf	LCD_command@cmd
  2846                           
  2847                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2848  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2849  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2850  002C  1207               	bcf	7,4	;volatile
  2851  002D  1287               	bcf	7,5	;volatile
  2852  002E  1307               	bcf	7,6	;volatile
  2853  002F  1387               	bcf	7,7	;volatile
  2854                           
  2855                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  2856  0030  0874               	movf	LCD_command@cmd,w
  2857  0031  00F2               	movwf	??_LCD_command
  2858  0032  3004               	movlw	4
  2859  0033                     u445:
  2860  0033  1003               	clrc
  2861  0034  0CF2               	rrf	??_LCD_command,f
  2862  0035  3EFF               	addlw	-1
  2863  0036  1D03               	skipz
  2864  0037  2833               	goto	u445
  2865  0038  0872               	movf	??_LCD_command,w
  2866  0039  3901               	andlw	1
  2867  003A  00F3               	movwf	??_LCD_command+1
  2868  003B  0EF3               	swapf	??_LCD_command+1,f
  2869  003C  0807               	movf	7,w	;volatile
  2870  003D  0673               	xorwf	??_LCD_command+1,w
  2871  003E  39EF               	andlw	-17
  2872  003F  0673               	xorwf	??_LCD_command+1,w
  2873  0040  0087               	movwf	7	;volatile
  2874                           
  2875                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  2876  0041  0874               	movf	LCD_command@cmd,w
  2877  0042  00F2               	movwf	??_LCD_command
  2878  0043  3005               	movlw	5
  2879  0044                     u455:
  2880  0044  1003               	clrc
  2881  0045  0CF2               	rrf	??_LCD_command,f
  2882  0046  3EFF               	addlw	-1
  2883  0047  1D03               	skipz
  2884  0048  2844               	goto	u455
  2885  0049  0872               	movf	??_LCD_command,w
  2886  004A  3901               	andlw	1
  2887  004B  00F3               	movwf	??_LCD_command+1
  2888  004C  0EF3               	swapf	??_LCD_command+1,f
  2889  004D  0DF3               	rlf	??_LCD_command+1,f
  2890  004E  0807               	movf	7,w	;volatile
  2891  004F  0673               	xorwf	??_LCD_command+1,w
  2892  0050  39DF               	andlw	-33
  2893  0051  0673               	xorwf	??_LCD_command+1,w
  2894  0052  0087               	movwf	7	;volatile
  2895                           
  2896                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  2897  0053  0874               	movf	LCD_command@cmd,w
  2898  0054  00F2               	movwf	??_LCD_command
  2899  0055  3006               	movlw	6
  2900  0056                     u465:
  2901  0056  1003               	clrc
  2902  0057  0CF2               	rrf	??_LCD_command,f
  2903  0058  3EFF               	addlw	-1
  2904  0059  1D03               	skipz
  2905  005A  2856               	goto	u465
  2906  005B  0872               	movf	??_LCD_command,w
  2907  005C  3901               	andlw	1
  2908  005D  00F3               	movwf	??_LCD_command+1
  2909  005E  0EF3               	swapf	??_LCD_command+1,f
  2910  005F  0DF3               	rlf	??_LCD_command+1,f
  2911  0060  0DF3               	rlf	??_LCD_command+1,f
  2912  0061  0807               	movf	7,w	;volatile
  2913  0062  0673               	xorwf	??_LCD_command+1,w
  2914  0063  39BF               	andlw	-65
  2915  0064  0673               	xorwf	??_LCD_command+1,w
  2916  0065  0087               	movwf	7	;volatile
  2917                           
  2918                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  2919  0066  0874               	movf	LCD_command@cmd,w
  2920  0067  00F2               	movwf	??_LCD_command
  2921  0068  3007               	movlw	7
  2922  0069                     u475:
  2923  0069  1003               	clrc
  2924  006A  0CF2               	rrf	??_LCD_command,f
  2925  006B  3EFF               	addlw	-1
  2926  006C  1D03               	skipz
  2927  006D  2869               	goto	u475
  2928  006E  0872               	movf	??_LCD_command,w
  2929  006F  3901               	andlw	1
  2930  0070  00F3               	movwf	??_LCD_command+1
  2931  0071  0CF3               	rrf	??_LCD_command+1,f
  2932  0072  0CF3               	rrf	??_LCD_command+1,f
  2933  0073  0807               	movf	7,w	;volatile
  2934  0074  0673               	xorwf	??_LCD_command+1,w
  2935  0075  397F               	andlw	-129
  2936  0076  0673               	xorwf	??_LCD_command+1,w
  2937  0077  0087               	movwf	7	;volatile
  2938                           
  2939                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  2940  0078  1087               	bcf	7,1	;volatile
  2941                           
  2942                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  2943  0079  1187               	bcf	7,3	;volatile
  2944                           
  2945                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  2946  007A  1587               	bsf	7,3	;volatile
  2947                           
  2948                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2949  007B  3018               	movlw	24
  2950  007C  00F2               	movwf	??_LCD_command
  2951  007D                     u1867:
  2952  007D  0BF2               	decfsz	??_LCD_command,f
  2953  007E  287D               	goto	u1867
  2954  007F  2880               	nop2
  2955                           
  2956                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  2957  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0082  1187               	bcf	7,3	;volatile
  2960                           
  2961                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2962  0083  3018               	movlw	24
  2963  0084  00F2               	movwf	??_LCD_command
  2964  0085                     u1877:
  2965  0085  0BF2               	decfsz	??_LCD_command,f
  2966  0086  2885               	goto	u1877
  2967  0087  2888               	nop2
  2968                           
  2969                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2970  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2972  008A  1207               	bcf	7,4	;volatile
  2973  008B  1287               	bcf	7,5	;volatile
  2974  008C  1307               	bcf	7,6	;volatile
  2975  008D  1387               	bcf	7,7	;volatile
  2976                           
  2977                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  2978  008E  0874               	movf	LCD_command@cmd,w
  2979  008F  3901               	andlw	1
  2980  0090  00F2               	movwf	??_LCD_command
  2981  0091  0EF2               	swapf	??_LCD_command,f
  2982  0092  0807               	movf	7,w	;volatile
  2983  0093  0672               	xorwf	??_LCD_command,w
  2984  0094  39EF               	andlw	-17
  2985  0095  0672               	xorwf	??_LCD_command,w
  2986  0096  0087               	movwf	7	;volatile
  2987                           
  2988                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  2989  0097  0874               	movf	LCD_command@cmd,w
  2990  0098  00F2               	movwf	??_LCD_command
  2991  0099  1003               	clrc
  2992  009A  0C72               	rrf	??_LCD_command,w
  2993  009B  3901               	andlw	1
  2994  009C  00F3               	movwf	??_LCD_command+1
  2995  009D  0EF3               	swapf	??_LCD_command+1,f
  2996  009E  0DF3               	rlf	??_LCD_command+1,f
  2997  009F  0807               	movf	7,w	;volatile
  2998  00A0  0673               	xorwf	??_LCD_command+1,w
  2999  00A1  39DF               	andlw	-33
  3000  00A2  0673               	xorwf	??_LCD_command+1,w
  3001  00A3  0087               	movwf	7	;volatile
  3002                           
  3003                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  3004  00A4  0874               	movf	LCD_command@cmd,w
  3005  00A5  00F2               	movwf	??_LCD_command
  3006  00A6  3002               	movlw	2
  3007  00A7                     u485:
  3008  00A7  1003               	clrc
  3009  00A8  0CF2               	rrf	??_LCD_command,f
  3010  00A9  3EFF               	addlw	-1
  3011  00AA  1D03               	skipz
  3012  00AB  28A7               	goto	u485
  3013  00AC  0872               	movf	??_LCD_command,w
  3014  00AD  3901               	andlw	1
  3015  00AE  00F3               	movwf	??_LCD_command+1
  3016  00AF  0EF3               	swapf	??_LCD_command+1,f
  3017  00B0  0DF3               	rlf	??_LCD_command+1,f
  3018  00B1  0DF3               	rlf	??_LCD_command+1,f
  3019  00B2  0807               	movf	7,w	;volatile
  3020  00B3  0673               	xorwf	??_LCD_command+1,w
  3021  00B4  39BF               	andlw	-65
  3022  00B5  0673               	xorwf	??_LCD_command+1,w
  3023  00B6  0087               	movwf	7	;volatile
  3024                           
  3025                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
  3026  00B7  0874               	movf	LCD_command@cmd,w
  3027  00B8  00F2               	movwf	??_LCD_command
  3028  00B9  3003               	movlw	3
  3029  00BA                     u495:
  3030  00BA  1003               	clrc
  3031  00BB  0CF2               	rrf	??_LCD_command,f
  3032  00BC  3EFF               	addlw	-1
  3033  00BD  1D03               	skipz
  3034  00BE  28BA               	goto	u495
  3035  00BF  0872               	movf	??_LCD_command,w
  3036  00C0  3901               	andlw	1
  3037  00C1  00F3               	movwf	??_LCD_command+1
  3038  00C2  0CF3               	rrf	??_LCD_command+1,f
  3039  00C3  0CF3               	rrf	??_LCD_command+1,f
  3040  00C4  0807               	movf	7,w	;volatile
  3041  00C5  0673               	xorwf	??_LCD_command+1,w
  3042  00C6  397F               	andlw	-129
  3043  00C7  0673               	xorwf	??_LCD_command+1,w
  3044  00C8  0087               	movwf	7	;volatile
  3045                           
  3046                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
  3047  00C9  1087               	bcf	7,1	;volatile
  3048                           
  3049                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
  3050  00CA  1187               	bcf	7,3	;volatile
  3051                           
  3052                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
  3053  00CB  1587               	bsf	7,3	;volatile
  3054                           
  3055                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3056  00CC  3018               	movlw	24
  3057  00CD  00F2               	movwf	??_LCD_command
  3058  00CE                     u1887:
  3059  00CE  0BF2               	decfsz	??_LCD_command,f
  3060  00CF  28CE               	goto	u1887
  3061  00D0  28D1               	nop2
  3062                           
  3063                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
  3064  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3065  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3066  00D3  1187               	bcf	7,3	;volatile
  3067                           
  3068                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3069  00D4  3018               	movlw	24
  3070  00D5  00F2               	movwf	??_LCD_command
  3071  00D6                     u1897:
  3072  00D6  0BF2               	decfsz	??_LCD_command,f
  3073  00D7  28D6               	goto	u1897
  3074  00D8  28D9               	nop2
  3075                           
  3076                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3077  00D9  3014               	movlw	20
  3078  00DA  00F3               	movwf	??_LCD_command+1
  3079  00DB  3079               	movlw	121
  3080  00DC  00F2               	movwf	??_LCD_command
  3081  00DD                     u1907:
  3082  00DD  0BF2               	decfsz	??_LCD_command,f
  3083  00DE  28DD               	goto	u1907
  3084  00DF  0BF3               	decfsz	??_LCD_command+1,f
  3085  00E0  28DD               	goto	u1907
  3086  00E1  28E2               	nop2
  3087  00E2  0008               	return
  3088  00E3                     __end_of_LCD_command:
  3089                           
  3090                           	psect	text15
  3091  04E4                     __ptext15:	
  3092 ;; *************** function _ISR *****************
  3093 ;; Defined at:
  3094 ;;		line 73 in file "Main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0
  3110 ;;      Temps:          2       0       0       0       0
  3111 ;;      Totals:         2       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		_Task_Ready
  3117 ;; This function is called by:
  3118 ;;		Interrupt level 1
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _ISR
  3124  04E4                     _ISR:
  3125                           
  3126                           ;Main.c: 76:     if(TMR1IF == 1)
  3127  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3128  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3129  04E6  1C0C               	btfss	12,0	;volatile
  3130  04E7  2CFB               	goto	i1l1767
  3131                           
  3132                           ;Main.c: 77:     {;Main.c: 78:         if(Delay100ms!= 0 && !Mostrar) Delay100ms--;
  3133  04E8  0858               	movf	_Delay100ms,w	;volatile
  3134  04E9  0459               	iorwf	_Delay100ms+1,w	;volatile
  3135  04EA  1903               	btfsc	3,2
  3136  04EB  2CF5               	goto	i1l1761
  3137  04EC  087A               	movf	_Mostrar,w
  3138  04ED  1D03               	btfss	3,2
  3139  04EE  2CF5               	goto	i1l1761
  3140  04EF  3001               	movlw	1
  3141  04F0  02D8               	subwf	_Delay100ms,f	;volatile
  3142  04F1  3000               	movlw	0
  3143  04F2  1C03               	skipc
  3144  04F3  03D9               	decf	_Delay100ms+1,f	;volatile
  3145  04F4  02D9               	subwf	_Delay100ms+1,f	;volatile
  3146  04F5                     i1l1761:
  3147                           
  3148                           ;Main.c: 80:         TMR1 = 65285;
  3149  04F5  30FF               	movlw	255
  3150  04F6  008F               	movwf	15	;volatile
  3151  04F7  3005               	movlw	5
  3152  04F8  008E               	movwf	14	;volatile
  3153                           
  3154                           ;Main.c: 81:         TMR1ON = 1;
  3155  04F9  1410               	bsf	16,0	;volatile
  3156                           
  3157                           ;Main.c: 82:         TMR1IF = 0;
  3158  04FA  100C               	bcf	12,0	;volatile
  3159  04FB                     i1l1767:
  3160                           
  3161                           ;Main.c: 85:     if(!Delay100ms) Task_Ready();
  3162  04FB  0858               	movf	_Delay100ms,w	;volatile
  3163  04FC  0459               	iorwf	_Delay100ms+1,w	;volatile
  3164  04FD  1D03               	btfss	3,2
  3165  04FE  2D04               	goto	i1l85
  3166  04FF  120A  118A  257F  120A  118A  	fcall	_Task_Ready
  3167  0504                     i1l85:
  3168  0504  0871               	movf	??_ISR+1,w
  3169  0505  008A               	movwf	10
  3170  0506  0E70               	swapf	??_ISR^(0+4294967168),w
  3171  0507  0083               	movwf	3
  3172  0508  0EFE               	swapf	126,f
  3173  0509  0E7E               	swapf	126,w
  3174  050A  0009               	retfie
  3175  050B                     __end_of_ISR:
  3176                           
  3177                           	psect	intentry
  3178  0004                     __pintentry:	
  3179                           ;incstack = 0
  3180                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3181                           
  3182  0004                     interrupt_function:
  3183  007E                     saved_w	set	btemp
  3184  0004  00FE               	movwf	btemp
  3185  0005  0E03               	swapf	3,w
  3186  0006  00F0               	movwf	??_ISR
  3187  0007  080A               	movf	10,w
  3188  0008  00F1               	movwf	??_ISR+1
  3189  0009  120A  118A  2CE4   	ljmp	_ISR
  3190                           
  3191                           	psect	text16
  3192  057F                     __ptext16:	
  3193 ;; *************** function _Task_Ready *****************
  3194 ;; Defined at:
  3195 ;;		line 90 in file "Main.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0
  3212 ;;      Totals:         0       0       0       0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_ISR
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _Task_Ready
  3224  057F                     _Task_Ready:
  3225                           
  3226                           ;Main.c: 92:     if(!Delay100ms)
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _Task_Ready: [wreg+status,2+status,0]
  3230  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0581  0858               	movf	_Delay100ms,w	;volatile
  3233  0582  0459               	iorwf	_Delay100ms+1,w	;volatile
  3234  0583  1D03               	btfss	3,2
  3235  0584  0008               	return
  3236                           
  3237                           ;Main.c: 93:     {;Main.c: 94:         Mostrar = 1;
  3238  0585  01FA               	clrf	_Mostrar
  3239  0586  0AFA               	incf	_Mostrar,f
  3240                           
  3241                           ;Main.c: 95:         Delay100ms = 1000;
  3242  0587  30E8               	movlw	232
  3243  0588  00D8               	movwf	_Delay100ms	;volatile
  3244  0589  3003               	movlw	3
  3245  058A  00D9               	movwf	_Delay100ms+1	;volatile
  3246  058B  0008               	return
  3247  058C                     __end_of_Task_Ready:
  3248  007E                     btemp	set	126	;btemp
  3249  007E                     wtemp0	set	126
  3250                           
  3251                           	psect	config
  3252                           
  3253                           ;Config register CONFIG1 @ 0x2007
  3254                           ;	Oscillator Selection bits
  3255                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3256                           ;	Watchdog Timer Enable bit
  3257                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3258                           ;	Power-up Timer Enable bit
  3259                           ;	PWRTE = ON, PWRT enabled
  3260                           ;	RE3/MCLR pin function select bit
  3261                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3262                           ;	Code Protection bit
  3263                           ;	CP = OFF, Program memory code protection is disabled
  3264                           ;	Data Code Protection bit
  3265                           ;	CPD = OFF, Data memory code protection is disabled
  3266                           ;	Brown Out Reset Selection bits
  3267                           ;	BOREN = OFF, BOR disabled
  3268                           ;	Internal External Switchover bit
  3269                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3270                           ;	Fail-Safe Clock Monitor Enabled bit
  3271                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3272                           ;	Low Voltage Programming Enable bit
  3273                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3274                           ;	In-Circuit Debugger Mode bit
  3275                           ;	DEBUG = 0x1, unprogrammed default
  3276  2007                     	org	8199
  3277  2007  2CE2               	dw	11490
  3278                           
  3279                           ;Config register CONFIG2 @ 0x2008
  3280                           ;	Brown-out Reset Selection bit
  3281                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3282                           ;	Flash Program Memory Self Write Enable bits
  3283                           ;	WRT = OFF, Write protection off
  3284  2008                     	org	8200
  3285  2008  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        10
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(1) Largest target is 21
		 -> STR_17(CODE[18]), STR_16(CODE[6]), STR_15(CODE[5]), STR_14(CODE[14]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_Pant_Inicio
    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14561
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
                           _Pwm_init
 ---------------------------------------------------------------------------------
 (1) _Pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0   14339
                                             22 BANK0      2     2      0
                        _Antirrebote
                        _Pant_Inicio
                        _Select_Modo
 ---------------------------------------------------------------------------------
 (2) _Select_Modo                                          0     0      0    8998
                        _Antirrebote
                          _Pant_Menu
                      _Pant_Selector
 ---------------------------------------------------------------------------------
 (3) _Pant_Selector                                        0     0      0    4499
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Pant_Menu                                            0     0      0    4499
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Antirrebote                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0    5341
                                              2 BANK0     20    20      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     592
                                              5 COMMON     4     3      1
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (4) _LCD_array                                            7     2      5    4499
                                              5 COMMON     5     0      5
                                              0 BANK0      2     2      0
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (5) _LCD_date                                             3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     222
                                              5 COMMON     3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (5) _LCD_command                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                         _Task_Ready
 ---------------------------------------------------------------------------------
 (7) _Task_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
     _Select_Modo
       _Antirrebote
       _Pant_Menu
         _LCD_array
           _LCD_command
           _LCD_date
       _Pant_Selector
         _LCD_array
           _LCD_command
           _LCD_date
   _MEF_Init
   _Pines_Init
   _Pwm_init

 _ISR (ROOT)
   _Task_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 16 18:32:01 2020

                         pc 0002                          fsr 0004                         l130 0495  
                       l125 047D                         l165 04B2                         _GIE 005F  
                       _RB4 0034                         u505 00ED                         u515 00FE  
                       _ISR 04E4                         u445 0033                         u525 0110  
                       u455 0044                         u535 0123                         u465 0056  
                       u545 0161                         u475 0069                         u555 0174  
                       u485 00A7                         u495 00BA                         u655 04C1  
                       fsr0 0004                         indf 0000           _MEF_Actualizacion 0459  
                _Delay100ms 0058                        ?_ISR 0070          ?_MEF_Actualizacion 0070  
                      l2033 03B9                        l2113 04A0                        l2035 03C2  
                      l2051 040B                        l2043 03DD                        l2123 04B4  
                      l2131 045A                        l2045 03F0                        l2037 03CB  
                      l2117 04A7                        l2039 03D4                        l2073 02AB  
                      l2065 0261                        l2217 048D                        l2219 03E2  
                      l2147 0475                        l2139 046A                        l1445 055B  
                      l2069 0286                        l2157 0483                        l2175 0525  
                      l1557 02E5                        l1487 04CF                        STR_1 0376  
                      STR_2 0361                        STR_3 034C                        STR_4 0376  
                      STR_5 03B6                        STR_6 035F                        STR_7 03B6  
                      STR_8 035F                        STR_9 03B6                ?_LCD_command 0070  
                      u1600 01A5                        u1610 01C0                        u1707 055F  
                      u1717 0221                        u1807 0303                        u1727 0402  
                      u1817 0310                        u1737 0137                        u1907 00DD  
                      u1827 031D                        u1747 013F                        u1837 0328  
                      u1757 0188                        u1847 0333                        u1767 018F  
                      u1857 0340                        u1777 0195                        u1867 007D  
                      u1787 02E0                        _PEIE 005E                        u1877 0085  
                      u1797 02EF                        u1887 00CE                        u1897 00D6  
                      i1l85 0504                        _TMR1 000E                        _Modo 007B  
                      _main 050B                        btemp 007E         ??_MEF_Actualizacion 004E  
                      start 000C          __size_of_LCD_array 005E               _Estado_Actual 0036  
                     ??_ISR 0070         __end_of_Antirrebote 056E            __end_of_LCD_date 019B  
          __end_of_LCD_init 0346            __end_of_MEF_Init 05A2                       ?_main 0070  
                     STR_10 035F                       STR_11 03B6                       STR_12 035F  
                     STR_13 03B6                       STR_14 039D                       STR_15 03B1  
                     STR_16 03AB                       STR_17 038B               _LCD_character 04BD  
 __end_of_MEF_Actualizacion 0496                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _TRISB 0086                       _TRISC 0087  
             ??_Pant_Inicio 003A                       _PwmS1 0032      __size_of_Pant_Selector 0093  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 000F                __end_of_main 052B              ?_LCD_character 0075  
                    ??_main 007A               ??_Select_Modo 007A           __end_of_LCD_array 0416  
          __end_of_Pwm_init 0545                  _Pines_Init 0545                      i1l1761 04F5  
                    i1l1767 04FB         __end_of_Pant_Inicio 023D                      _TMR1IE 0460  
                    _TMR1IF 0060                  _Task_Ready 057F                      _TMR1ON 0080  
                    _TRISB4 0434            Pant_Inicio@F1247 0050            Pant_Inicio@F1249 0020  
        __size_of_Pant_Menu 0043                 _Antirrebote 055B               _Pant_Selector 023D  
              LCD_date@date 0074  __size_of_MEF_Actualizacion 003D                      saved_w 007E  
       __end_of_Select_Modo 04BD     __end_of__initialization 0025        __size_of_LCD_command 00BA  
                 ?_LCD_date 0070                   ?_LCD_init 0070                   ?_MEF_Init 0070  
            ?_Pant_Selector 0070              __pcstackCOMMON 0070                __pidataBANK0 058C  
           ??_LCD_character 0076                   LCD_init@i 0077           __end_of_Pant_Menu 0459  
               _Pant_Inicio 019B                 ?_Pines_Init 0070                  __pbssBANK0 0020  
               ?_Task_Ready 0070                  ??_LCD_date 0072                  ??_LCD_init 0075  
                ??_MEF_Init 0072                  __pmaintext 050B                   ?_Pwm_init 0070  
                __pintentry 0004                 _Select_Modo 0496                  __stringtab 0346  
           ??_Pant_Selector 007A                     _Mostrar 007A                  ??_Pwm_init 0072  
                 _ANSELbits 0188         __size_of_Pines_Init 0016                     __ptext1 052B  
                   __ptext2 0545                     __ptext3 059E                     __ptext4 0459  
                   __ptext5 0496                     __ptext6 023D                     __ptext7 0416  
                   __ptext8 055B                     __ptext9 019B         __size_of_Task_Ready 000D  
      Pant_Inicio@caracter1 003E                __size_of_ISR 0027                   _T1CONbits 0010  
                   clrloop0 0597        end_of_initialization 0025                   _LCD_array 03B8  
              ?_Antirrebote 0070                   _PORTBbits 0006                   _PORTCbits 0007  
             LCD_array@date 0079                   _TRISAbits 0085                   _TRISCbits 0087  
                 _Act_PwmS1 0037                  ?_LCD_array 0075           __size_of_LCD_date 00B8  
         __size_of_LCD_init 0076           __size_of_MEF_Init 0004                  LCD_array@x 0075  
                LCD_array@y 0077         start_initialization 000F                ?_Pant_Inicio 0070  
               __end_of_ISR 050B                   _Pant_Menu 0416               ??_LCD_command 0072  
                 _Per_PwmS1 002B                ??_Pines_Init 0072                ??_Task_Ready 0070  
                init_fetch0 056E                 __pdataBANK0 0050           __size_of_Pwm_init 001A  
     __end_of_LCD_character 04E4          __end_of_Pines_Init 055B          __end_of_Task_Ready 058C  
              ?_Select_Modo 0070                 __pbssCOMMON 007A                   ___latbits 0002  
             __pcstackBANK0 0038                  ?_Pant_Menu 0070                 ??_LCD_array 0038  
       __end_of_LCD_command 00E3        __size_of_Antirrebote 0013                   __pstrings 0346  
                 _freqPwmS1 0034         Pant_Inicio@caracter 0046           interrupt_function 0004  
       LCD_character@adress 0077                    _LCD_date 00E3                    _LCD_init 02D0  
                  _MEF_Init 059E                   clear_ram0 0596       __end_of_Pant_Selector 02D0  
                  _PER_T_S1 002E                 __stringbase 034B                    _P_W_T_S1 0030  
      __size_of_Pant_Inicio 00A2                 ??_Pant_Menu 007A                 _LCD_command 0029  
                  _Pw_PwmS1 0028                    _Pwm_init 052B          __end_of__stringtab 034C  
                _ANSELHbits 0189                    __ptext10 04BD                    __ptext11 03B8  
                  __ptext12 00E3                    __ptext13 02D0                    __ptext14 0029  
                  __ptext15 04E4                    __ptext16 057F        __size_of_Select_Modo 0027  
             __size_of_main 0020       LCD_character@caracter 0075              LCD_character@i 0078  
                  init_ram0 0572                    intlevel1 0000                   stringcode 0346  
                  stringdir 0346                    stringtab 0346                  _WDTCONbits 0105  
    __size_of_LCD_character 0027               ??_Antirrebote 0072              LCD_command@cmd 0074  
