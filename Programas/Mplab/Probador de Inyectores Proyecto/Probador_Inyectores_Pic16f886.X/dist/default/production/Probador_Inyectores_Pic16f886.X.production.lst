

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Dec 17 17:06:33 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 09/04/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F886 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  000E                     	;# 
   544  000F                     	;# 
   545  0010                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0013                     	;# 
   549  0014                     	;# 
   550  0015                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0017                     	;# 
   554  0018                     	;# 
   555  0019                     	;# 
   556  001A                     	;# 
   557  001B                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001D                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  0081                     	;# 
   564  0085                     	;# 
   565  0086                     	;# 
   566  0087                     	;# 
   567  0089                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  008F                     	;# 
   572  0090                     	;# 
   573  0091                     	;# 
   574  0092                     	;# 
   575  0093                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  0105                     	;# 
   591  0107                     	;# 
   592  0108                     	;# 
   593  0109                     	;# 
   594  010C                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  0185                     	;# 
   600  0187                     	;# 
   601  0188                     	;# 
   602  0189                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605                           
   606                           	psect	idataCOMMON
   607  06F0                     __pidataCOMMON:
   608                           
   609                           ;initializer for _Delay100ms
   610  06F0  34E8               	retlw	232
   611  06F1  3403               	retlw	3
   612                           
   613                           	psect	idataBANK0
   614  06D9                     __pidataBANK0:
   615                           
   616                           ;initializer for Pant_Inicio@F1248
   617  06D9  3406               	retlw	6
   618  06DA  3409               	retlw	9
   619  06DB  3409               	retlw	9
   620  06DC  3406               	retlw	6
   621  06DD  3400               	retlw	0
   622  06DE  3400               	retlw	0
   623  06DF  3400               	retlw	0
   624  06E0  3400               	retlw	0
   625                           
   626                           ;initializer for _Tempo_WDT
   627  06E1  3488               	retlw	136
   628  06E2  3413               	retlw	19
   629  000E                     _TMR1	set	14
   630  0010                     _T1CONbits	set	16
   631  0007                     _PORTCbits	set	7
   632  0006                     _PORTBbits	set	6
   633  0007                     _PORTC	set	7
   634  0006                     _PORTB	set	6
   635  0005                     _PORTA	set	5
   636  0034                     _RB4	set	52
   637  005F                     _GIE	set	95
   638  005E                     _PEIE	set	94
   639  0080                     _TMR1ON	set	128
   640  0060                     _TMR1IF	set	96
   641  0087                     _TRISCbits	set	135
   642  0087                     _TRISC	set	135
   643  0086                     _TRISB	set	134
   644  0085                     _TRISAbits	set	133
   645  0434                     _TRISB4	set	1076
   646  0460                     _TMR1IE	set	1120
   647  0105                     _WDTCONbits	set	261
   648  0188                     _ANSELbits	set	392
   649  0189                     _ANSELHbits	set	393
   650                           
   651                           	psect	strings
   652  0300                     __pstrings:
   653  0300                     stringtab:
   654  0300                     __stringtab:
   655  0300                     stringcode:	
   656                           ;	String table - string pointers are 1 byte each
   657                           
   658  0300                     stringdir:
   659  0300  3003               	movlw	high stringdir
   660  0301  008A               	movwf	10
   661  0302  0804               	movf	4,w
   662  0303  0A84               	incf	4,f
   663  0304  0782               	addwf	2,f
   664  0305                     __stringbase:
   665  0305  3400               	retlw	0
   666  0306                     __end_of__stringtab:
   667  0306                     STR_3:
   668  0306  3420               	retlw	32	;' '
   669  0307  3420               	retlw	32	;' '
   670  0308  3420               	retlw	32	;' '
   671  0309  3444               	retlw	68	;'D'
   672  030A  3445               	retlw	69	;'E'
   673  030B  3420               	retlw	32	;' '
   674  030C  3449               	retlw	73	;'I'
   675  030D  344E               	retlw	78	;'N'
   676  030E  3459               	retlw	89	;'Y'
   677  030F  3445               	retlw	69	;'E'
   678  0310  3443               	retlw	67	;'C'
   679  0311  3454               	retlw	84	;'T'
   680  0312  344F               	retlw	79	;'O'
   681  0313  3452               	retlw	82	;'R'
   682  0314  3445               	retlw	69	;'E'
   683  0315  3453               	retlw	83	;'S'
   684  0316  3420               	retlw	32	;' '
   685  0317  3420               	retlw	32	;' '
   686  0318  3420               	retlw	32	;' '
   687  0319  3420               	retlw	32	;' '
   688  031A  3400               	retlw	0
   689  031B                     STR_2:
   690  031B  3450               	retlw	80	;'P'
   691  031C  3452               	retlw	82	;'R'
   692  031D  344F               	retlw	79	;'O'
   693  031E  3442               	retlw	66	;'B'
   694  031F  3441               	retlw	65	;'A'
   695  0320  3444               	retlw	68	;'D'
   696  0321  344F               	retlw	79	;'O'
   697  0322  3452               	retlw	82	;'R'
   698  0323  3420               	retlw	32	;' '
   699  0324  3441               	retlw	65	;'A'
   700  0325  3455               	retlw	85	;'U'
   701  0326  3454               	retlw	84	;'T'
   702  0327  344F               	retlw	79	;'O'
   703  0328  344D               	retlw	77	;'M'
   704  0329  344F               	retlw	79	;'O'
   705  032A  3454               	retlw	84	;'T'
   706  032B  3452               	retlw	82	;'R'
   707  032C  3449               	retlw	73	;'I'
   708  032D  345A               	retlw	90	;'Z'
   709  032E  3420               	retlw	32	;' '
   710  032F  3400               	retlw	0
   711  0330                     STR_1:
   712  0330  343D               	retlw	61	;'='
   713  0331  343D               	retlw	61	;'='
   714  0332  343D               	retlw	61	;'='
   715  0333  343D               	retlw	61	;'='
   716  0334  343D               	retlw	61	;'='
   717  0335  343D               	retlw	61	;'='
   718  0336  343D               	retlw	61	;'='
   719  0337  343D               	retlw	61	;'='
   720  0338  343D               	retlw	61	;'='
   721  0339  343D               	retlw	61	;'='
   722  033A  343D               	retlw	61	;'='
   723  033B  343D               	retlw	61	;'='
   724  033C  343D               	retlw	61	;'='
   725  033D  343D               	retlw	61	;'='
   726  033E  343D               	retlw	61	;'='
   727  033F  343D               	retlw	61	;'='
   728  0340  343D               	retlw	61	;'='
   729  0341  343D               	retlw	61	;'='
   730  0342  343D               	retlw	61	;'='
   731  0343  343D               	retlw	61	;'='
   732  0344  3400               	retlw	0
   733  0345                     STR_17:
   734  0345  344C               	retlw	76	;'L'
   735  0346  3449               	retlw	73	;'I'
   736  0347  344D               	retlw	77	;'M'
   737  0348  3450               	retlw	80	;'P'
   738  0349  342E               	retlw	46	;'.'
   739  034A  3420               	retlw	32	;' '
   740  034B  3455               	retlw	85	;'U'
   741  034C  344C               	retlw	76	;'L'
   742  034D  3454               	retlw	84	;'T'
   743  034E  3452               	retlw	82	;'R'
   744  034F  3441               	retlw	65	;'A'
   745  0350  3453               	retlw	83	;'S'
   746  0351  344F               	retlw	79	;'O'
   747  0352  344E               	retlw	78	;'N'
   748  0353  3449               	retlw	73	;'I'
   749  0354  3444               	retlw	68	;'D'
   750  0355  344F               	retlw	79	;'O'
   751  0356  3400               	retlw	0
   752  0357                     STR_14:
   753  0357  3450               	retlw	80	;'P'
   754  0358  3455               	retlw	85	;'U'
   755  0359  344C               	retlw	76	;'L'
   756  035A  3456               	retlw	86	;'V'
   757  035B  3445               	retlw	69	;'E'
   758  035C  3452               	retlw	82	;'R'
   759  035D  3449               	retlw	73	;'I'
   760  035E  345A               	retlw	90	;'Z'
   761  035F  3441               	retlw	65	;'A'
   762  0360  3443               	retlw	67	;'C'
   763  0361  3449               	retlw	73	;'I'
   764  0362  344F               	retlw	79	;'O'
   765  0363  344E               	retlw	78	;'N'
   766  0364  3400               	retlw	0
   767  0365                     STR_22:
   768  0365  3454               	retlw	84	;'T'
   769  0366  3445               	retlw	69	;'E'
   770  0367  344D               	retlw	77	;'M'
   771  0368  3450               	retlw	80	;'P'
   772  0369  3445               	retlw	69	;'E'
   773  036A  3452               	retlw	82	;'R'
   774  036B  3441               	retlw	65	;'A'
   775  036C  3454               	retlw	84	;'T'
   776  036D  3455               	retlw	85	;'U'
   777  036E  3452               	retlw	82	;'R'
   778  036F  3441               	retlw	65	;'A'
   779  0370  343A               	retlw	58	;':'
   780  0371  3400               	retlw	0
   781  0372                     STR_20:
   782  0372  3454               	retlw	84	;'T'
   783  0373  3449               	retlw	73	;'I'
   784  0374  3445               	retlw	69	;'E'
   785  0375  344D               	retlw	77	;'M'
   786  0376  3450               	retlw	80	;'P'
   787  0377  344F               	retlw	79	;'O'
   788  0378  343A               	retlw	58	;':'
   789  0379  3400               	retlw	0
   790  037A                     STR_16:
   791  037A  3446               	retlw	70	;'F'
   792  037B  344C               	retlw	76	;'L'
   793  037C  3455               	retlw	85	;'U'
   794  037D  344A               	retlw	74	;'J'
   795  037E  344F               	retlw	79	;'O'
   796  037F  3400               	retlw	0
   797  0380                     STR_18:
   798  0380  3452               	retlw	82	;'R'
   799  0381  3450               	retlw	80	;'P'
   800  0382  344D               	retlw	77	;'M'
   801  0383  343A               	retlw	58	;':'
   802  0384  3400               	retlw	0
   803  0385                     STR_19:
   804  0385  3450               	retlw	80	;'P'
   805  0386  3457               	retlw	87	;'W'
   806  0387  344D               	retlw	77	;'M'
   807  0388  343A               	retlw	58	;':'
   808  0389  3400               	retlw	0
   809  038A                     STR_15:
   810  038A  3446               	retlw	70	;'F'
   811  038B  3455               	retlw	85	;'U'
   812  038C  3447               	retlw	71	;'G'
   813  038D  3441               	retlw	65	;'A'
   814  038E  3400               	retlw	0
   815  038F                     STR_5:
   816  038F  343E               	retlw	62	;'>'
   817  0390  3400               	retlw	0
   818  0391                     STR_23:
   819  0391  3443               	retlw	67	;'C'
   820  0392  3400               	retlw	0
   821  0319                     
   822                           	psect	cinit
   823  000F                     start_initialization:	
   824                           ; #config settings
   825                           
   826  000F                     __initialization:
   827                           
   828                           ; Initialize objects allocated to BANK0
   829  000F  1383               	bcf	3,7	;select IRP bank0
   830  0010  305D               	movlw	low (__pdataBANK0+10)
   831  0011  00FD               	movwf	btemp+-1
   832  0012  3006               	movlw	high __pidataBANK0
   833  0013  00FE               	movwf	btemp
   834  0014  30D9               	movlw	low __pidataBANK0
   835  0015  00FF               	movwf	btemp+1
   836  0016  3053               	movlw	low __pdataBANK0
   837  0017  0084               	movwf	4
   838  0018  120A  118A  26CC  120A  118A  	fcall	init_ram0
   839                           
   840                           ; Initialize objects allocated to COMMON
   841  001D  120A  118A  26F0  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   842  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   843  0023  120A  118A  26F1  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   844  0028  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   845                           
   846                           ; Clear objects allocated to BANK0
   847  0029  3020               	movlw	low __pbssBANK0
   848  002A  0084               	movwf	4
   849  002B  303B               	movlw	low (__pbssBANK0+27)
   850  002C  120A  118A  26E3   	fcall	clear_ram0
   851  002F                     end_of_initialization:	
   852                           ;End of C runtime variable initialization code
   853                           
   854  002F                     __end_of__initialization:
   855  002F  0183               	clrf	3
   856  0030  120A  118A  2E2D   	ljmp	_main	;jump to C main() function
   857                           
   858                           	psect	dataCOMMON
   859  007A                     __pdataCOMMON:
   860  007A                     _Delay100ms:
   861  007A                     	ds	2
   862                           
   863                           	psect	bssBANK0
   864  0020                     __pbssBANK0:
   865  0020                     Pant_Inicio@F1250:
   866  0020                     	ds	8
   867  0028                     _Pw_PwmS1:
   868  0028                     	ds	3
   869  002B                     _Per_PwmS1:
   870  002B                     	ds	3
   871  002E                     _PER_T_S1:
   872  002E                     	ds	2
   873  0030                     _P_W_T_S1:
   874  0030                     	ds	2
   875  0032                     _PwmS1:
   876  0032                     	ds	2
   877  0034                     _freqPwmS1:
   878  0034                     	ds	2
   879  0036                     _Subestado_Actual:
   880  0036                     	ds	1
   881  0037                     _Estado_Actual:
   882  0037                     	ds	1
   883  0038                     _Mostrar:
   884  0038                     	ds	1
   885  0039                     _Modo:
   886  0039                     	ds	1
   887  003A                     _Act_PwmS1:
   888  003A                     	ds	1
   889                           
   890                           	psect	dataBANK0
   891  0053                     __pdataBANK0:
   892  0053                     Pant_Inicio@F1248:
   893  0053                     	ds	8
   894  005B                     _Tempo_WDT:
   895  005B                     	ds	2
   896                           
   897                           	psect	inittext
   898  06C8                     init_fetch0:	
   899                           ;	Called with low address in FSR and high address in W
   900                           
   901  06C8  087E               	movf	126,w
   902  06C9  008A               	movwf	10
   903  06CA  087F               	movf	127,w
   904  06CB  0082               	movwf	2
   905  06CC                     init_ram0:	
   906                           ;Called with:
   907                           ;	high address of idata address in btemp 
   908                           ;	low address of idata address in btemp+1 
   909                           ;	low address of data in FSR
   910                           ;	high address + 1 of data in btemp-1
   911                           
   912  06CC  26C8  120A  118A   	fcall	init_fetch0
   913  06CF  0080               	movwf	0
   914  06D0  0A84               	incf	4,f
   915  06D1  0804               	movf	4,w
   916  06D2  067D               	xorwf	125,w
   917  06D3  1903               	btfsc	3,2
   918  06D4  3400               	retlw	0
   919  06D5  0AFF               	incf	127,f
   920  06D6  1903               	btfsc	3,2
   921  06D7  0AFE               	incf	126,f
   922  06D8  2ECC               	goto	init_ram0
   923                           
   924                           	psect	clrtext
   925  06E3                     clear_ram0:	
   926                           ;	Called with FSR containing the base address, and
   927                           ;	W with the last address+1
   928                           
   929  06E3  0064               	clrwdt	;clear the watchdog before getting into this loop
   930  06E4                     clrloop0:
   931  06E4  0180               	clrf	0	;clear RAM location pointed to by FSR
   932  06E5  0A84               	incf	4,f	;increment pointer
   933  06E6  0604               	xorwf	4,w	;XOR with final address
   934  06E7  1903               	btfsc	3,2	;have we reached the end yet?
   935  06E8  3400               	retlw	0	;all done for this memory range, return
   936  06E9  0604               	xorwf	4,w	;XOR again to restore value
   937  06EA  2EE4               	goto	clrloop0	;do the next byte
   938                           
   939                           	psect	cstackCOMMON
   940  0070                     __pcstackCOMMON:
   941  0070                     ?_Pines_Init:
   942  0070                     ?_MEF_Init:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_LCD_init:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Pwm_init:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_MEF_Actualizacion:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_Task_Ready:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ??_Task_Ready:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_Pant_Inicio:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_Select_Modo:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_MEF_Subest_Actualizacion:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_Pant_Modos:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_Pant_Menu:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_Pant_Selector:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_LCD_command:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_LCD_date:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_main:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_Antirrebote:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_ISR:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ??_ISR:	
   994                           ; 1 bytes @ 0x0
   995                           
   996                           
   997                           ; 1 bytes @ 0x0
   998  0070                     	ds	2
   999  0072                     ??_Pines_Init:
  1000  0072                     ??_MEF_Init:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0072                     ??_Pwm_init:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006  0072                     ??_LCD_command:	
  1007                           ; 1 bytes @ 0x2
  1008                           
  1009  0072                     ??_LCD_date:	
  1010                           ; 1 bytes @ 0x2
  1011                           
  1012  0072                     ??_Antirrebote:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x2
  1017  0072                     	ds	2
  1018  0074                     LCD_command@cmd:
  1019  0074                     LCD_date@date:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x4
  1024  0074                     	ds	1
  1025  0075                     ??_LCD_init:
  1026  0075                     ?_LCD_character:	
  1027                           ; 1 bytes @ 0x5
  1028                           
  1029  0075                     ?_LCD_array:	
  1030                           ; 1 bytes @ 0x5
  1031                           
  1032  0075                     ?_LCD_xy:	
  1033                           ; 1 bytes @ 0x5
  1034                           
  1035  0075                     LCD_character@caracter:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038  0075                     LCD_array@x:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041  0075                     LCD_xy@x:	
  1042                           ; 2 bytes @ 0x5
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x5
  1046  0075                     	ds	1
  1047  0076                     ??_LCD_character:
  1048                           
  1049                           ; 1 bytes @ 0x6
  1050  0076                     	ds	1
  1051  0077                     LCD_init@i:
  1052  0077                     LCD_character@adress:	
  1053                           ; 1 bytes @ 0x7
  1054                           
  1055  0077                     LCD_array@y:	
  1056                           ; 1 bytes @ 0x7
  1057                           
  1058  0077                     LCD_xy@y:	
  1059                           ; 2 bytes @ 0x7
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x7
  1063  0077                     	ds	1
  1064  0078                     LCD_character@i:
  1065                           
  1066                           ; 1 bytes @ 0x8
  1067  0078                     	ds	1
  1068  0079                     ??_LCD_xy:
  1069  0079                     LCD_array@date:	
  1070                           ; 1 bytes @ 0x9
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x9
  1074  0079                     	ds	1
  1075  007A                     ??_Select_Modo:
  1076  007A                     ??_Pant_Modos:	
  1077                           ; 1 bytes @ 0xA
  1078                           
  1079  007A                     ??_Pant_Menu:	
  1080                           ; 1 bytes @ 0xA
  1081                           
  1082  007A                     ??_Pant_Selector:	
  1083                           ; 1 bytes @ 0xA
  1084                           
  1085  007A                     ??_main:	
  1086                           ; 1 bytes @ 0xA
  1087                           
  1088                           
  1089                           	psect	cstackBANK0
  1090  003B                     __pcstackBANK0:	
  1091                           ; 1 bytes @ 0xA
  1092                           
  1093  003B                     ??_LCD_array:
  1094                           
  1095                           ; 1 bytes @ 0x0
  1096  003B                     	ds	2
  1097  003D                     ??_Pant_Inicio:
  1098  003D                     ??_MEF_Subest_Actualizacion:	
  1099                           ; 1 bytes @ 0x2
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x2
  1103  003D                     	ds	4
  1104  0041                     Pant_Inicio@caracter1:
  1105                           
  1106                           ; 8 bytes @ 0x6
  1107  0041                     	ds	8
  1108  0049                     Pant_Inicio@caracter:
  1109                           
  1110                           ; 8 bytes @ 0xE
  1111  0049                     	ds	8
  1112  0051                     ??_MEF_Actualizacion:
  1113                           
  1114                           ; 1 bytes @ 0x16
  1115  0051                     	ds	2
  1116                           
  1117                           	psect	maintext
  1118  062D                     __pmaintext:	
  1119 ;;
  1120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1121 ;;
  1122 ;; *************** function _main *****************
  1123 ;; Defined at:
  1124 ;;		line 29 in file "Main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : B00/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels required when called:    7
  1144 ;; This function calls:
  1145 ;;		_LCD_init
  1146 ;;		_MEF_Actualizacion
  1147 ;;		_MEF_Init
  1148 ;;		_Pines_Init
  1149 ;;		_Pwm_init
  1150 ;; This function is called by:
  1151 ;;		Startup code after reset
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _main
  1157  062D                     _main:
  1158                           
  1159                           ;Main.c: 32:     Pines_Init();
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1163  062D  120A  118A  269F  120A  118A  	fcall	_Pines_Init
  1164                           
  1165                           ;Main.c: 33:     MEF_Init();
  1166  0632  120A  118A  26EB  120A  118A  	fcall	_MEF_Init
  1167                           
  1168                           ;Main.c: 34:     LCD_init();
  1169  0637  120A  118A  240B  120A  118A  	fcall	_LCD_init
  1170                           
  1171                           ;Main.c: 35:     Pwm_init();
  1172  063C  120A  118A  266B  120A  118A  	fcall	_Pwm_init
  1173                           
  1174                           ;Main.c: 37:     TMR1IE=1,TMR1IF=1;
  1175  0641  1683               	bsf	3,5	;RP0=1, select bank1
  1176  0642  1303               	bcf	3,6	;RP1=0, select bank1
  1177  0643  140C               	bsf	12,0	;volatile
  1178  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0646  140C               	bsf	12,0	;volatile
  1181  0647                     l2397:
  1182                           
  1183                           ;Main.c: 40:     {;Main.c: 41:         MEF_Actualizacion();
  1184  0647  120A  118A  24DF  120A  118A  	fcall	_MEF_Actualizacion
  1185  064C  2E47               	goto	l2397
  1186  064D                     __end_of_main:
  1187                           
  1188                           	psect	text1
  1189  066B                     __ptext1:	
  1190 ;; *************** function _Pwm_init *****************
  1191 ;; Defined at:
  1192 ;;		line 5 in file "Pwm_Soft.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _Pwm_init
  1222  066B                     _Pwm_init:
  1223                           
  1224                           ;Pwm_Soft.c: 7:     ANSELHbits.ANS11 = 0;
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in _Pwm_init: [wreg+status,2+status,0]
  1228  066B  1683               	bsf	3,5	;RP0=1, select bank3
  1229  066C  1703               	bsf	3,6	;RP1=1, select bank3
  1230  066D  1189               	bcf	9,3	;volatile
  1231                           
  1232                           ;Pwm_Soft.c: 10:     T1CONbits.TMR1GE = 0;
  1233  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0670  1310               	bcf	16,6	;volatile
  1236                           
  1237                           ;Pwm_Soft.c: 11:     T1CONbits.T1SYNC = 1;
  1238  0671  1510               	bsf	16,2	;volatile
  1239                           
  1240                           ;Pwm_Soft.c: 12:     T1CONbits.TMR1CS = 0;
  1241  0672  1090               	bcf	16,1	;volatile
  1242                           
  1243                           ;Pwm_Soft.c: 13:     T1CONbits.T1CKPS = 0b01;
  1244  0673  0810               	movf	16,w	;volatile
  1245  0674  39CF               	andlw	-49
  1246  0675  3810               	iorlw	16
  1247  0676  0090               	movwf	16	;volatile
  1248                           
  1249                           ;Pwm_Soft.c: 14:     T1CONbits.TMR1ON = 1;
  1250  0677  1410               	bsf	16,0	;volatile
  1251                           
  1252                           ;Pwm_Soft.c: 16:     TMR1 = 65285;
  1253  0678  30FF               	movlw	255
  1254  0679  008F               	movwf	15	;volatile
  1255  067A  3005               	movlw	5
  1256  067B  008E               	movwf	14	;volatile
  1257                           
  1258                           ;Pwm_Soft.c: 19:     PEIE = 1;
  1259  067C  170B               	bsf	11,6	;volatile
  1260                           
  1261                           ;Pwm_Soft.c: 20:     GIE = 1;
  1262  067D  178B               	bsf	11,7	;volatile
  1263                           
  1264                           ;Pwm_Soft.c: 21:     TMR1IE = 0;
  1265  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1266  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0680  100C               	bcf	12,0	;volatile
  1268                           
  1269                           ;Pwm_Soft.c: 22:     TMR1IF = 1;
  1270  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0683  140C               	bsf	12,0	;volatile
  1273  0684  0008               	return
  1274  0685                     __end_of_Pwm_init:
  1275                           
  1276                           	psect	text2
  1277  069F                     __ptext2:	
  1278 ;; *************** function _Pines_Init *****************
  1279 ;; Defined at:
  1280 ;;		line 47 in file "Main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    2
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _Pines_Init
  1310  069F                     _Pines_Init:
  1311                           
  1312                           ;Main.c: 50:     TRISAbits.TRISA5 = 0;
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _Pines_Init: [wreg+status,2]
  1316  069F  1683               	bsf	3,5	;RP0=1, select bank1
  1317  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  1318  06A1  1285               	bcf	5,5	;volatile
  1319                           
  1320                           ;Main.c: 51:     PORTA = 0;
  1321  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1322  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1323  06A4  0185               	clrf	5	;volatile
  1324                           
  1325                           ;Main.c: 52:     PORTB = 0;
  1326  06A5  0186               	clrf	6	;volatile
  1327                           
  1328                           ;Main.c: 53:     PORTC = 0;
  1329  06A6  0187               	clrf	7	;volatile
  1330                           
  1331                           ;Main.c: 54:     TRISB = 0xFF;
  1332  06A7  30FF               	movlw	255
  1333  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1334  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1335  06AA  0086               	movwf	6	;volatile
  1336                           
  1337                           ;Main.c: 55:     TRISC = 0x00;
  1338  06AB  0187               	clrf	7	;volatile
  1339                           
  1340                           ;Main.c: 56:     ANSELHbits.ANS12 = 0;
  1341  06AC  1683               	bsf	3,5	;RP0=1, select bank3
  1342  06AD  1703               	bsf	3,6	;RP1=1, select bank3
  1343  06AE  1209               	bcf	9,4	;volatile
  1344                           
  1345                           ;Main.c: 57:     ANSELHbits.ANS11 = 0;
  1346  06AF  1189               	bcf	9,3	;volatile
  1347                           
  1348                           ;Main.c: 58:     ANSELHbits.ANS10 = 0;
  1349  06B0  1109               	bcf	9,2	;volatile
  1350                           
  1351                           ;Main.c: 59:     ANSELHbits.ANS8 = 0;
  1352  06B1  1009               	bcf	9,0	;volatile
  1353                           
  1354                           ;Main.c: 60:     ANSELHbits.ANS9 = 0;
  1355  06B2  1089               	bcf	9,1	;volatile
  1356                           
  1357                           ;Main.c: 61:     ANSELbits.ANS4 = 0;
  1358  06B3  1208               	bcf	8,4	;volatile
  1359  06B4  0008               	return
  1360  06B5                     __end_of_Pines_Init:
  1361                           
  1362                           	psect	text3
  1363  06EB                     __ptext3:	
  1364 ;; *************** function _MEF_Init *****************
  1365 ;; Defined at:
  1366 ;;		line 32 in file "MEF.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		status,2
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _MEF_Init
  1396  06EB                     _MEF_Init:
  1397                           
  1398                           ;MEF.c: 34:     Estado_Actual = ESTADO_INICIO;
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _MEF_Init: [status,2]
  1402  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1403  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1404  06ED  01B7               	clrf	_Estado_Actual
  1405                           
  1406                           ;MEF.c: 35:     Subestado_Actual = SUBEST_DISPLAY;
  1407  06EE  01B6               	clrf	_Subestado_Actual
  1408  06EF  0008               	return
  1409  06F0                     __end_of_MEF_Init:
  1410                           
  1411                           	psect	text4
  1412  04DF                     __ptext4:	
  1413 ;; *************** function _MEF_Actualizacion *****************
  1414 ;; Defined at:
  1415 ;;		line 40 in file "MEF.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       2       0       0       0
  1432 ;;      Totals:         0       2       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    6
  1436 ;; This function calls:
  1437 ;;		_Antirrebote
  1438 ;;		_MEF_Subest_Actualizacion
  1439 ;;		_Pant_Inicio
  1440 ;;		_Select_Modo
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _MEF_Actualizacion
  1448  04DF                     _MEF_Actualizacion:
  1449                           
  1450                           ;MEF.c: 42:     switch(Estado_Actual)
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1454  04DF  2D18               	goto	l2379
  1455  04E0                     l2345:
  1456                           
  1457                           ;MEF.c: 45:         {;MEF.c: 46:             Pant_Inicio();
  1458  04E0  120A  118A  21A5   	fcall	_Pant_Inicio
  1459                           
  1460                           ;MEF.c: 47:             WDTCONbits.SWDTEN = 1;
  1461  04E3  1283               	bcf	3,5	;RP0=0, select bank2
  1462  04E4  1703               	bsf	3,6	;RP1=1, select bank2
  1463  04E5  1405               	bsf	5,0	;volatile
  1464                           
  1465                           ;MEF.c: 48:             WDTCONbits.WDTPS = 0b1010;
  1466  04E6  0805               	movf	5,w	;volatile
  1467  04E7  39E1               	andlw	-31
  1468  04E8  3814               	iorlw	20
  1469  04E9  0085               	movwf	5	;volatile
  1470  04EA  0064               	clrwdt	;# 
  1471                           
  1472                           ;MEF.c: 51:             Estado_Actual = ESTADO_MENU;
  1473  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1474  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1475  04ED  01B7               	clrf	_Estado_Actual
  1476  04EE  0AB7               	incf	_Estado_Actual,f
  1477                           
  1478                           ;MEF.c: 52:         break;
  1479  04EF  0008               	return
  1480  04F0                     l2353:
  1481                           
  1482                           ;MEF.c: 55:         {;MEF.c: 56:             Select_Modo();
  1483  04F0  120A  118A  25DD  120A  118A  	fcall	_Select_Modo
  1484                           
  1485                           ;MEF.c: 58:             if(PORTBbits.RB1 && Modo==1) Estado_Actual = ESTADO_MODO_PULV,An
      +                          tirrebote();
  1486  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1487  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1488  04F7  1C86               	btfss	6,1	;volatile
  1489  04F8  2D0A               	goto	l139
  1490  04F9  0339               	decf	_Modo,w
  1491  04FA  1D03               	btfss	3,2
  1492  04FB  2D0A               	goto	l139
  1493  04FC  3002               	movlw	2
  1494  04FD  2D03               	goto	L1
  1495  04FE                     l2363:
  1496  04FE  3002               	movlw	2
  1497  04FF  0639               	xorwf	_Modo,w
  1498  0500  1D03               	btfss	3,2
  1499  0501  2D0C               	goto	l141
  1500  0502  3003               	movlw	3
  1501  0503                     L1:
  1502  0503  00FF               	movwf	127
  1503  0504  087F               	movf	127,w
  1504  0505  00B7               	movwf	_Estado_Actual
  1505  0506  120A  118A  26B5   	fcall	_Antirrebote
  1506  0509  0008               	return
  1507  050A                     l139:	
  1508                           ;MEF.c: 59:             else if(PORTBbits.RB1 && Modo==2) Estado_Actual = ESTADO_MODO_FU
      +                          GA,Antirrebote();
  1509                           
  1510  050A  1886               	btfsc	6,1	;volatile
  1511  050B  2CFE               	goto	l2363
  1512  050C                     l141:	
  1513                           ;MEF.c: 60:             else if(PORTBbits.RB1 && Modo==3) Estado_Actual = ESTADO_MODO_FL
      +                          UJO,Antirrebote();
  1514                           
  1515  050C  1C86               	btfss	6,1	;volatile
  1516  050D  0008               	return
  1517  050E  3003               	movlw	3
  1518  050F  0639               	xorwf	_Modo,w
  1519  0510  1D03               	btfss	3,2
  1520  0511  0008               	return
  1521  0512  3004               	movlw	4
  1522  0513  2D03               	goto	L1
  1523  0514                     l2375:	
  1524                           ;MEF.c: 61:         break;
  1525                           
  1526                           
  1527                           ;MEF.c: 64:         {;MEF.c: 65:             MEF_Subest_Actualizacion();
  1528  0514  120A  118A  264D   	fcall	_MEF_Subest_Actualizacion
  1529                           
  1530                           ;MEF.c: 68:         break;
  1531  0517  0008               	return
  1532  0518                     l2379:
  1533  0518  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0519  1303               	bcf	3,6	;RP1=0, select bank0
  1535  051A  0837               	movf	_Estado_Actual,w
  1536  051B  00D1               	movwf	??_MEF_Actualizacion
  1537  051C  01D2               	clrf	??_MEF_Actualizacion+1
  1538                           
  1539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 1, Range of values is 0 to 0
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte            4     3 (average)
  1545                           ; direct_byte           11     8 (fixed)
  1546                           ; jumptable            260     6 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548  051D  0852               	movf	??_MEF_Actualizacion+1,w
  1549  051E  3A00               	xorlw	0	; case 0
  1550  051F  1903               	skipnz
  1551  0520  2D22               	goto	l2479
  1552  0521  2D33               	goto	l147
  1553  0522                     l2479:
  1554                           
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 5, Range of values is 0 to 4
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte           16     9 (average)
  1560                           ; direct_byte           23     8 (fixed)
  1561                           ; jumptable            260     6 (fixed)
  1562                           ;	Chosen strategy is simple_byte
  1563  0522  0851               	movf	??_MEF_Actualizacion,w
  1564  0523  3A00               	xorlw	0	; case 0
  1565  0524  1903               	skipnz
  1566  0525  2CE0               	goto	l2345
  1567  0526  3A01               	xorlw	1	; case 1
  1568  0527  1903               	skipnz
  1569  0528  2CF0               	goto	l2353
  1570  0529  3A03               	xorlw	3	; case 2
  1571  052A  1903               	skipnz
  1572  052B  2D14               	goto	l2375
  1573  052C  3A01               	xorlw	1	; case 3
  1574  052D  1903               	skipnz
  1575  052E  2D33               	goto	l147
  1576  052F  3A07               	xorlw	7	; case 4
  1577  0530  1903               	skipnz
  1578  0531  2D33               	goto	l147
  1579  0532  2D33               	goto	l147
  1580  0533                     l147:
  1581  0533  0008               	return
  1582  0534                     __end_of_MEF_Actualizacion:
  1583                           
  1584                           	psect	text5
  1585  05DD                     __ptext5:	
  1586 ;; *************** function _Select_Modo *****************
  1587 ;; Defined at:
  1588 ;;		line 12 in file "Menu_Modo.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0
  1605 ;;      Totals:         0       0       0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    5
  1609 ;; This function calls:
  1610 ;;		_Antirrebote
  1611 ;;		_Pant_Menu
  1612 ;;		_Pant_Selector
  1613 ;; This function is called by:
  1614 ;;		_MEF_Actualizacion
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _Select_Modo
  1620  05DD                     _Select_Modo:
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _Select_Modo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1624  05DD  0064               	clrwdt	;# 
  1625                           
  1626                           ;Menu_Modo.c: 16:     if(Mostrar) Pant_Menu(),Mostrar=0;
  1627  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1628  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1629  05E0  0838               	movf	_Mostrar,w
  1630  05E1  1903               	btfsc	3,2
  1631  05E2  2DEB               	goto	l2315
  1632  05E3  120A  118A  2534  120A  118A  	fcall	_Pant_Menu
  1633  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1634  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1635  05EA  01B8               	clrf	_Mostrar
  1636  05EB                     l2315:
  1637                           
  1638                           ;Menu_Modo.c: 19:     if(PORTBbits.RB3 || Modo==0)
  1639  05EB  1986               	btfsc	6,3	;volatile
  1640  05EC  2DF0               	goto	l2319
  1641  05ED  0839               	movf	_Modo,w
  1642  05EE  1D03               	btfss	3,2
  1643  05EF  0008               	return
  1644  05F0                     l2319:
  1645                           
  1646                           ;Menu_Modo.c: 20:     {;Menu_Modo.c: 21:         Modo+=1;
  1647  05F0  3001               	movlw	1
  1648  05F1  00FF               	movwf	127
  1649  05F2  087F               	movf	127,w
  1650  05F3  07B9               	addwf	_Modo,f
  1651                           
  1652                           ;Menu_Modo.c: 22:         if(Modo>=5||Modo<1) Modo=1;
  1653  05F4  3005               	movlw	5
  1654  05F5  0239               	subwf	_Modo,w
  1655  05F6  1803               	skipnc
  1656  05F7  2DFB               	goto	l191
  1657  05F8  0839               	movf	_Modo,w
  1658  05F9  1D03               	btfss	3,2
  1659  05FA  2DFD               	goto	l2325
  1660  05FB                     l191:
  1661  05FB  01B9               	clrf	_Modo
  1662  05FC  0AB9               	incf	_Modo,f
  1663  05FD                     l2325:
  1664                           
  1665                           ;Menu_Modo.c: 23:         Pant_Selector(),Antirrebote();
  1666  05FD  120A  118A  2247  120A  118A  	fcall	_Pant_Selector
  1667  0602  120A  118A  26B5   	fcall	_Antirrebote
  1668  0605  0008               	return
  1669  0606                     __end_of_Select_Modo:
  1670                           
  1671                           	psect	text6
  1672  0247                     __ptext6:	
  1673 ;; *************** function _Pant_Selector *****************
  1674 ;; Defined at:
  1675 ;;		line 42 in file "Display_Lcd.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    4
  1696 ;; This function calls:
  1697 ;;		_LCD_array
  1698 ;; This function is called by:
  1699 ;;		_Select_Modo
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _Pant_Selector
  1705  0247                     _Pant_Selector:
  1706                           
  1707                           ;Display_Lcd.c: 44:     if(Modo == 1) LCD_array(4,1," "),LCD_array(1,1,">");
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _Pant_Selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1711  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0249  0339               	decf	_Modo,w
  1714  024A  1D03               	btfss	3,2
  1715  024B  2A6D               	goto	l2267
  1716  024C  3004               	movlw	4
  1717  024D  00F5               	movwf	LCD_array@x
  1718  024E  3000               	movlw	0
  1719  024F  00F6               	movwf	LCD_array@x+1
  1720  0250  3001               	movlw	1
  1721  0251  00F7               	movwf	LCD_array@y
  1722  0252  3000               	movlw	0
  1723  0253  00F8               	movwf	LCD_array@y+1
  1724  0254  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1725  0255  00FF               	movwf	127
  1726  0256  087F               	movf	127,w
  1727  0257  00F9               	movwf	LCD_array@date
  1728  0258  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1729  025D  3001               	movlw	1
  1730  025E  00F5               	movwf	LCD_array@x
  1731  025F  3000               	movlw	0
  1732  0260  00F6               	movwf	LCD_array@x+1
  1733  0261  3001               	movlw	1
  1734  0262  00F7               	movwf	LCD_array@y
  1735  0263  3000               	movlw	0
  1736  0264  00F8               	movwf	LCD_array@y+1
  1737  0265  308A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1738  0266  00FF               	movwf	127
  1739  0267  087F               	movf	127,w
  1740  0268  00F9               	movwf	LCD_array@date
  1741  0269  120A  118A  2481   	fcall	_LCD_array
  1742  026C  0008               	return
  1743  026D                     l2267:
  1744  026D  3002               	movlw	2
  1745  026E  0639               	xorwf	_Modo,w
  1746  026F  1D03               	btfss	3,2
  1747  0270  2A92               	goto	l2271
  1748  0271  3001               	movlw	1
  1749  0272  00F5               	movwf	LCD_array@x
  1750  0273  3000               	movlw	0
  1751  0274  00F6               	movwf	LCD_array@x+1
  1752  0275  3001               	movlw	1
  1753  0276  00F7               	movwf	LCD_array@y
  1754  0277  3000               	movlw	0
  1755  0278  00F8               	movwf	LCD_array@y+1
  1756  0279  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1757  027A  00FF               	movwf	127
  1758  027B  087F               	movf	127,w
  1759  027C  00F9               	movwf	LCD_array@date
  1760  027D  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1761  0282  3002               	movlw	2
  1762  0283  00F5               	movwf	LCD_array@x
  1763  0284  3000               	movlw	0
  1764  0285  00F6               	movwf	LCD_array@x+1
  1765  0286  3001               	movlw	1
  1766  0287  00F7               	movwf	LCD_array@y
  1767  0288  3000               	movlw	0
  1768  0289  00F8               	movwf	LCD_array@y+1
  1769  028A  308A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1770  028B  00FF               	movwf	127
  1771  028C  087F               	movf	127,w
  1772  028D  00F9               	movwf	LCD_array@date
  1773  028E  120A  118A  2481   	fcall	_LCD_array
  1774  0291  0008               	return
  1775  0292                     l2271:
  1776  0292  3003               	movlw	3
  1777  0293  0639               	xorwf	_Modo,w
  1778  0294  1D03               	btfss	3,2
  1779  0295  2AB7               	goto	l2275
  1780  0296  3002               	movlw	2
  1781  0297  00F5               	movwf	LCD_array@x
  1782  0298  3000               	movlw	0
  1783  0299  00F6               	movwf	LCD_array@x+1
  1784  029A  3001               	movlw	1
  1785  029B  00F7               	movwf	LCD_array@y
  1786  029C  3000               	movlw	0
  1787  029D  00F8               	movwf	LCD_array@y+1
  1788  029E  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1789  029F  00FF               	movwf	127
  1790  02A0  087F               	movf	127,w
  1791  02A1  00F9               	movwf	LCD_array@date
  1792  02A2  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1793  02A7  3003               	movlw	3
  1794  02A8  00F5               	movwf	LCD_array@x
  1795  02A9  3000               	movlw	0
  1796  02AA  00F6               	movwf	LCD_array@x+1
  1797  02AB  3001               	movlw	1
  1798  02AC  00F7               	movwf	LCD_array@y
  1799  02AD  3000               	movlw	0
  1800  02AE  00F8               	movwf	LCD_array@y+1
  1801  02AF  308A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1802  02B0  00FF               	movwf	127
  1803  02B1  087F               	movf	127,w
  1804  02B2  00F9               	movwf	LCD_array@date
  1805  02B3  120A  118A  2481   	fcall	_LCD_array
  1806  02B6  0008               	return
  1807  02B7                     l2275:
  1808  02B7  3004               	movlw	4
  1809  02B8  0639               	xorwf	_Modo,w
  1810  02B9  1D03               	btfss	3,2
  1811  02BA  0008               	return
  1812  02BB  3003               	movlw	3
  1813  02BC  00F5               	movwf	LCD_array@x
  1814  02BD  3000               	movlw	0
  1815  02BE  00F6               	movwf	LCD_array@x+1
  1816  02BF  3001               	movlw	1
  1817  02C0  00F7               	movwf	LCD_array@y
  1818  02C1  3000               	movlw	0
  1819  02C2  00F8               	movwf	LCD_array@y+1
  1820  02C3  3014               	movlw	(low (((STR_3+19)-__stringbase)| (0+32768)))& (0+255)
  1821  02C4  00FF               	movwf	127
  1822  02C5  087F               	movf	127,w
  1823  02C6  00F9               	movwf	LCD_array@date
  1824  02C7  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1825  02CC  3004               	movlw	4
  1826  02CD  00F5               	movwf	LCD_array@x
  1827  02CE  3000               	movlw	0
  1828  02CF  00F6               	movwf	LCD_array@x+1
  1829  02D0  3001               	movlw	1
  1830  02D1  00F7               	movwf	LCD_array@y
  1831  02D2  3000               	movlw	0
  1832  02D3  00F8               	movwf	LCD_array@y+1
  1833  02D4  308A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1834  02D5  00FF               	movwf	127
  1835  02D6  087F               	movf	127,w
  1836  02D7  00F9               	movwf	LCD_array@date
  1837  02D8  120A  118A  2481   	fcall	_LCD_array
  1838  02DB  0008               	return
  1839  02DC                     __end_of_Pant_Selector:
  1840                           
  1841                           	psect	text7
  1842  0534                     __ptext7:	
  1843 ;; *************** function _Pant_Menu *****************
  1844 ;; Defined at:
  1845 ;;		line 52 in file "Display_Lcd.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    4
  1866 ;; This function calls:
  1867 ;;		_LCD_array
  1868 ;; This function is called by:
  1869 ;;		_Select_Modo
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _Pant_Menu
  1875  0534                     _Pant_Menu:
  1876                           
  1877                           ;Display_Lcd.c: 54:     LCD_array(1,3,"PULVERIZACION");
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _Pant_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1881  0534  3001               	movlw	1
  1882  0535  00F5               	movwf	LCD_array@x
  1883  0536  3000               	movlw	0
  1884  0537  00F6               	movwf	LCD_array@x+1
  1885  0538  3003               	movlw	3
  1886  0539  00F7               	movwf	LCD_array@y
  1887  053A  3000               	movlw	0
  1888  053B  00F8               	movwf	LCD_array@y+1
  1889  053C  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1890  053D  00FF               	movwf	127
  1891  053E  087F               	movf	127,w
  1892  053F  00F9               	movwf	LCD_array@date
  1893  0540  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1894                           
  1895                           ;Display_Lcd.c: 55:     LCD_array(2,3,"FUGA");
  1896  0545  3002               	movlw	2
  1897  0546  00F5               	movwf	LCD_array@x
  1898  0547  3000               	movlw	0
  1899  0548  00F6               	movwf	LCD_array@x+1
  1900  0549  3003               	movlw	3
  1901  054A  00F7               	movwf	LCD_array@y
  1902  054B  3000               	movlw	0
  1903  054C  00F8               	movwf	LCD_array@y+1
  1904  054D  3085               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1905  054E  00FF               	movwf	127
  1906  054F  087F               	movf	127,w
  1907  0550  00F9               	movwf	LCD_array@date
  1908  0551  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1909                           
  1910                           ;Display_Lcd.c: 56:     LCD_array(3,3,"FLUJO");
  1911  0556  3003               	movlw	3
  1912  0557  00F5               	movwf	LCD_array@x
  1913  0558  3000               	movlw	0
  1914  0559  00F6               	movwf	LCD_array@x+1
  1915  055A  3003               	movlw	3
  1916  055B  00F7               	movwf	LCD_array@y
  1917  055C  3000               	movlw	0
  1918  055D  00F8               	movwf	LCD_array@y+1
  1919  055E  3075               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1920  055F  00FF               	movwf	127
  1921  0560  087F               	movf	127,w
  1922  0561  00F9               	movwf	LCD_array@date
  1923  0562  120A  118A  2481  120A  118A  	fcall	_LCD_array
  1924                           
  1925                           ;Display_Lcd.c: 57:     LCD_array(4,3,"LIMP. ULTRASONIDO");
  1926  0567  3004               	movlw	4
  1927  0568  00F5               	movwf	LCD_array@x
  1928  0569  3000               	movlw	0
  1929  056A  00F6               	movwf	LCD_array@x+1
  1930  056B  3003               	movlw	3
  1931  056C  00F7               	movwf	LCD_array@y
  1932  056D  3000               	movlw	0
  1933  056E  00F8               	movwf	LCD_array@y+1
  1934  056F  3040               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1935  0570  00FF               	movwf	127
  1936  0571  087F               	movf	127,w
  1937  0572  00F9               	movwf	LCD_array@date
  1938  0573  120A  118A  2481   	fcall	_LCD_array
  1939  0576  0008               	return
  1940  0577                     __end_of_Pant_Menu:
  1941                           
  1942                           	psect	text8
  1943  06B5                     __ptext8:	
  1944 ;; *************** function _Antirrebote *****************
  1945 ;; Defined at:
  1946 ;;		line 66 in file "Main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0
  1963 ;;      Totals:         2       0       0       0       0
  1964 ;;Total ram usage:        2 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    2
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_MEF_Actualizacion
  1971 ;;		_Select_Modo
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _Antirrebote
  1977  06B5                     _Antirrebote:
  1978  06B5                     l1573:	
  1979                           ;incstack = 0
  1980                           ; Regs used in _Antirrebote: [wreg]
  1981                           
  1982                           
  1983                           ;Main.c: 68:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1984  06B5  3041               	movlw	65
  1985  06B6  00F3               	movwf	??_Antirrebote+1
  1986  06B7  30EE               	movlw	238
  1987  06B8  00F2               	movwf	??_Antirrebote
  1988  06B9                     u1857:
  1989  06B9  0BF2               	decfsz	??_Antirrebote,f
  1990  06BA  2EB9               	goto	u1857
  1991  06BB  0BF3               	decfsz	??_Antirrebote+1,f
  1992  06BC  2EB9               	goto	u1857
  1993  06BD  0000               	nop
  1994                           
  1995                           ;Main.c: 69:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  1996  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1997  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1998  06C0  1C06               	btfss	6,0	;volatile
  1999  06C1  1886               	btfsc	6,1	;volatile
  2000  06C2  2EB5               	goto	l1573
  2001  06C3  1906               	btfsc	6,2	;volatile
  2002  06C4  2EB5               	goto	l1573
  2003  06C5  1D86               	btfss	6,3	;volatile
  2004  06C6  0008               	return
  2005  06C7  2EB5               	goto	l1573
  2006  06C8                     __end_of_Antirrebote:
  2007                           
  2008                           	psect	text9
  2009  01A5                     __ptext9:	
  2010 ;; *************** function _Pant_Inicio *****************
  2011 ;; Defined at:
  2012 ;;		line 6 in file "Display_Lcd.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  caracter        8   14[BANK0 ] unsigned char [8]
  2017 ;;  caracter1       8    6[BANK0 ] unsigned char [8]
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         0      16       0       0       0
  2029 ;;      Temps:          0       4       0       0       0
  2030 ;;      Totals:         0      20       0       0       0
  2031 ;;Total ram usage:       20 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    4
  2034 ;; This function calls:
  2035 ;;		_LCD_array
  2036 ;;		_LCD_character
  2037 ;;		_LCD_command
  2038 ;; This function is called by:
  2039 ;;		_MEF_Actualizacion
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _Pant_Inicio
  2045  01A5                     _Pant_Inicio:
  2046                           
  2047                           ;Display_Lcd.c: 9:     char caracter1[8] =
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2051  01A5  3041               	movlw	Pant_Inicio@caracter1& (0+255)
  2052  01A6  0084               	movwf	4
  2053  01A7  3053               	movlw	low Pant_Inicio@F1248
  2054  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2055  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2056  01AA  00BD               	movwf	??_Pant_Inicio
  2057  01AB  0804               	movf	4,w
  2058  01AC  00BE               	movwf	??_Pant_Inicio+1
  2059  01AD  3008               	movlw	8
  2060  01AE  00BF               	movwf	??_Pant_Inicio+2
  2061  01AF                     u1720:
  2062  01AF  083D               	movf	??_Pant_Inicio,w
  2063  01B0  0084               	movwf	4
  2064  01B1  1383               	bcf	3,7	;select IRP bank0
  2065  01B2  0800               	movf	0,w
  2066  01B3  00C0               	movwf	??_Pant_Inicio+3
  2067  01B4  0ABD               	incf	??_Pant_Inicio,f
  2068  01B5  083E               	movf	??_Pant_Inicio+1,w
  2069  01B6  0084               	movwf	4
  2070  01B7  0840               	movf	??_Pant_Inicio+3,w
  2071  01B8  0080               	movwf	0
  2072  01B9  0ABE               	incf	??_Pant_Inicio+1,f
  2073  01BA  0BBF               	decfsz	??_Pant_Inicio+2,f
  2074  01BB  29AF               	goto	u1720
  2075                           
  2076                           ;Display_Lcd.c: 20:     LCD_character(0x01,caracter1);
  2077  01BC  3041               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  2078  01BD  00FF               	movwf	127
  2079  01BE  087F               	movf	127,w
  2080  01BF  00F5               	movwf	LCD_character@caracter
  2081  01C0  3001               	movlw	1
  2082  01C1  120A  118A  2606  120A  118A  	fcall	_LCD_character
  2083                           
  2084                           ;Display_Lcd.c: 23:     char caracter[8] = {0,0,0,0,0,0,0,0};
  2085  01C6  3049               	movlw	Pant_Inicio@caracter& (0+255)
  2086  01C7  0084               	movwf	4
  2087  01C8  3008               	movlw	8
  2088  01C9  00FF               	movwf	127
  2089  01CA                     u1730:
  2090  01CA  1383               	bcf	3,7	;select IRP bank0
  2091  01CB  0180               	clrf	0
  2092  01CC  0A84               	incf	4,f
  2093  01CD  0BFF               	decfsz	127,f
  2094  01CE  29CA               	goto	u1730
  2095                           
  2096                           ;Display_Lcd.c: 24:     LCD_character(0x00,caracter);
  2097  01CF  3049               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  2098  01D0  00FF               	movwf	127
  2099  01D1  087F               	movf	127,w
  2100  01D2  00F5               	movwf	LCD_character@caracter
  2101  01D3  3000               	movlw	0
  2102  01D4  120A  118A  2606  120A  118A  	fcall	_LCD_character
  2103                           
  2104                           ;Display_Lcd.c: 27:     LCD_command(0x01);
  2105  01D9  3001               	movlw	1
  2106  01DA  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2107                           
  2108                           ;Display_Lcd.c: 28:     LCD_array(1,1,"====================");
  2109  01DF  3001               	movlw	1
  2110  01E0  00F5               	movwf	LCD_array@x
  2111  01E1  3000               	movlw	0
  2112  01E2  00F6               	movwf	LCD_array@x+1
  2113  01E3  3001               	movlw	1
  2114  01E4  00F7               	movwf	LCD_array@y
  2115  01E5  3000               	movlw	0
  2116  01E6  00F8               	movwf	LCD_array@y+1
  2117  01E7  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2118  01E8  00FF               	movwf	127
  2119  01E9  087F               	movf	127,w
  2120  01EA  00F9               	movwf	LCD_array@date
  2121  01EB  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2122                           
  2123                           ;Display_Lcd.c: 29:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  2124  01F0  3002               	movlw	2
  2125  01F1  00F5               	movwf	LCD_array@x
  2126  01F2  3000               	movlw	0
  2127  01F3  00F6               	movwf	LCD_array@x+1
  2128  01F4  3001               	movlw	1
  2129  01F5  00F7               	movwf	LCD_array@y
  2130  01F6  3000               	movlw	0
  2131  01F7  00F8               	movwf	LCD_array@y+1
  2132  01F8  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2133  01F9  00FF               	movwf	127
  2134  01FA  087F               	movf	127,w
  2135  01FB  00F9               	movwf	LCD_array@date
  2136  01FC  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2137                           
  2138                           ;Display_Lcd.c: 30:     LCD_array(3,1,"   DE INYECTORES    ");
  2139  0201  3003               	movlw	3
  2140  0202  00F5               	movwf	LCD_array@x
  2141  0203  3000               	movlw	0
  2142  0204  00F6               	movwf	LCD_array@x+1
  2143  0205  3001               	movlw	1
  2144  0206  00F7               	movwf	LCD_array@y
  2145  0207  3000               	movlw	0
  2146  0208  00F8               	movwf	LCD_array@y+1
  2147  0209  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2148  020A  00FF               	movwf	127
  2149  020B  087F               	movf	127,w
  2150  020C  00F9               	movwf	LCD_array@date
  2151  020D  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2152                           
  2153                           ;Display_Lcd.c: 31:     LCD_array(4,1,"====================");
  2154  0212  3004               	movlw	4
  2155  0213  00F5               	movwf	LCD_array@x
  2156  0214  3000               	movlw	0
  2157  0215  00F6               	movwf	LCD_array@x+1
  2158  0216  3001               	movlw	1
  2159  0217  00F7               	movwf	LCD_array@y
  2160  0218  3000               	movlw	0
  2161  0219  00F8               	movwf	LCD_array@y+1
  2162  021A  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2163  021B  00FF               	movwf	127
  2164  021C  087F               	movf	127,w
  2165  021D  00F9               	movwf	LCD_array@date
  2166  021E  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2167                           
  2168                           ;Display_Lcd.c: 32:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  2169  0223  3033               	movlw	51
  2170  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0226  00BF               	movwf	??_Pant_Inicio+2
  2173  0227  30BB               	movlw	187
  2174  0228  00BE               	movwf	??_Pant_Inicio+1
  2175  0229  30DF               	movlw	223
  2176  022A  00BD               	movwf	??_Pant_Inicio
  2177  022B                     u1867:
  2178  022B  0BBD               	decfsz	??_Pant_Inicio,f
  2179  022C  2A2B               	goto	u1867
  2180  022D  0BBE               	decfsz	??_Pant_Inicio+1,f
  2181  022E  2A2B               	goto	u1867
  2182  022F  0BBF               	decfsz	??_Pant_Inicio+2,f
  2183  0230  2A2B               	goto	u1867
  2184                           
  2185                           ;Display_Lcd.c: 35:     LCD_command(0x01);
  2186  0231  3001               	movlw	1
  2187  0232  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2188                           
  2189                           ;Display_Lcd.c: 37:     LCD_array(1,1,">");
  2190  0237  3001               	movlw	1
  2191  0238  00F5               	movwf	LCD_array@x
  2192  0239  3000               	movlw	0
  2193  023A  00F6               	movwf	LCD_array@x+1
  2194  023B  3001               	movlw	1
  2195  023C  00F7               	movwf	LCD_array@y
  2196  023D  3000               	movlw	0
  2197  023E  00F8               	movwf	LCD_array@y+1
  2198  023F  308A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2199  0240  00FF               	movwf	127
  2200  0241  087F               	movf	127,w
  2201  0242  00F9               	movwf	LCD_array@date
  2202  0243  120A  118A  2481   	fcall	_LCD_array
  2203  0246  0008               	return
  2204  0247                     __end_of_Pant_Inicio:
  2205                           
  2206                           	psect	text10
  2207  0606                     __ptext10:	
  2208 ;; *************** function _LCD_character *****************
  2209 ;; Defined at:
  2210 ;;		line 197 in file "Lcd.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  adress          1    wreg     unsigned char 
  2213 ;;  caracter        1    5[COMMON] PTR unsigned char 
  2214 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  adress          1    7[COMMON] unsigned char 
  2217 ;;  i               1    8[COMMON] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         1       0       0       0       0
  2228 ;;      Locals:         2       0       0       0       0
  2229 ;;      Temps:          1       0       0       0       0
  2230 ;;      Totals:         4       0       0       0       0
  2231 ;;Total ram usage:        4 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    3
  2234 ;; This function calls:
  2235 ;;		_LCD_command
  2236 ;;		_LCD_date
  2237 ;; This function is called by:
  2238 ;;		_Pant_Inicio
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _LCD_character
  2244  0606                     _LCD_character:
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2248                           ;LCD_character@adress stored from wreg
  2249  0606  00F7               	movwf	LCD_character@adress
  2250                           
  2251                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  2252  0607  0877               	movf	LCD_character@adress,w
  2253  0608  00F6               	movwf	??_LCD_character
  2254  0609  3002               	movlw	2
  2255  060A                     u715:
  2256  060A  1003               	clrc
  2257  060B  0DF6               	rlf	??_LCD_character,f
  2258  060C  3EFF               	addlw	-1
  2259  060D  1D03               	skipz
  2260  060E  2E0A               	goto	u715
  2261  060F  1003               	clrc
  2262  0610  0D76               	rlf	??_LCD_character,w
  2263  0611  3E40               	addlw	64
  2264  0612  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2265                           
  2266                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  2267  0617  01F8               	clrf	LCD_character@i
  2268  0618                     l1625:
  2269                           
  2270                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  2271  0618  0878               	movf	LCD_character@i,w
  2272  0619  0775               	addwf	LCD_character@caracter,w
  2273  061A  00F6               	movwf	??_LCD_character
  2274  061B  0876               	movf	??_LCD_character,w
  2275  061C  0084               	movwf	4
  2276  061D  1383               	bcf	3,7	;select IRP bank0
  2277  061E  0800               	movf	0,w
  2278  061F  120A  118A  20ED  120A  118A  	fcall	_LCD_date
  2279                           
  2280                           ;Lcd.c: 203:     }
  2281  0624  3001               	movlw	1
  2282  0625  00FF               	movwf	127
  2283  0626  087F               	movf	127,w
  2284  0627  07F8               	addwf	LCD_character@i,f
  2285  0628  3008               	movlw	8
  2286  0629  0278               	subwf	LCD_character@i,w
  2287  062A  1803               	btfsc	3,0
  2288  062B  0008               	return
  2289  062C  2E18               	goto	l1625
  2290  062D                     __end_of_LCD_character:
  2291                           
  2292                           	psect	text11
  2293  064D                     __ptext11:	
  2294 ;; *************** function _MEF_Subest_Actualizacion *****************
  2295 ;; Defined at:
  2296 ;;		line 85 in file "MEF.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0
  2312 ;;      Temps:          0       2       0       0       0
  2313 ;;      Totals:         0       2       0       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    5
  2317 ;; This function calls:
  2318 ;;		_Pant_Modos
  2319 ;; This function is called by:
  2320 ;;		_MEF_Actualizacion
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _MEF_Subest_Actualizacion
  2326  064D                     _MEF_Subest_Actualizacion:
  2327                           
  2328                           ;MEF.c: 87:     switch(Subestado_Actual)
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _MEF_Subest_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  2332  064D  2E52               	goto	l2337
  2333  064E                     l2333:
  2334                           
  2335                           ;MEF.c: 90:         {;MEF.c: 91:             Pant_Modos();
  2336  064E  120A  118A  2393   	fcall	_Pant_Modos
  2337                           
  2338                           ;MEF.c: 94:         break;
  2339  0651  0008               	return
  2340  0652                     l2337:
  2341  0652  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0653  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0654  0836               	movf	_Subestado_Actual,w
  2344  0655  00BD               	movwf	??_MEF_Subest_Actualizacion
  2345  0656  01BE               	clrf	??_MEF_Subest_Actualizacion+1
  2346                           
  2347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2348                           ; Switch size 1, requested type "simple"
  2349                           ; Number of cases is 1, Range of values is 0 to 0
  2350                           ; switch strategies available:
  2351                           ; Name         Instructions Cycles
  2352                           ; simple_byte            4     3 (average)
  2353                           ; direct_byte           11     8 (fixed)
  2354                           ; jumptable            260     6 (fixed)
  2355                           ;	Chosen strategy is simple_byte
  2356  0657  083E               	movf	??_MEF_Subest_Actualizacion+1,w
  2357  0658  3A00               	xorlw	0	; case 0
  2358  0659  1903               	skipnz
  2359  065A  2E5C               	goto	l2481
  2360  065B  2E6A               	goto	l156
  2361  065C                     l2481:
  2362                           
  2363                           ; Switch size 1, requested type "simple"
  2364                           ; Number of cases is 4, Range of values is 0 to 3
  2365                           ; switch strategies available:
  2366                           ; Name         Instructions Cycles
  2367                           ; simple_byte           13     7 (average)
  2368                           ; direct_byte           20     8 (fixed)
  2369                           ; jumptable            260     6 (fixed)
  2370                           ;	Chosen strategy is simple_byte
  2371  065C  083D               	movf	??_MEF_Subest_Actualizacion,w
  2372  065D  3A00               	xorlw	0	; case 0
  2373  065E  1903               	skipnz
  2374  065F  2E4E               	goto	l2333
  2375  0660  3A01               	xorlw	1	; case 1
  2376  0661  1903               	skipnz
  2377  0662  2E6A               	goto	l156
  2378  0663  3A03               	xorlw	3	; case 2
  2379  0664  1903               	skipnz
  2380  0665  2E6A               	goto	l156
  2381  0666  3A01               	xorlw	1	; case 3
  2382  0667  1903               	skipnz
  2383  0668  2E6A               	goto	l156
  2384  0669  2E6A               	goto	l156
  2385  066A                     l156:
  2386  066A  0008               	return
  2387  066B                     __end_of_MEF_Subest_Actualizacion:
  2388                           
  2389                           	psect	text12
  2390  0393                     __ptext12:	
  2391 ;; *************** function _Pant_Modos *****************
  2392 ;; Defined at:
  2393 ;;		line 62 in file "Display_Lcd.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    4
  2414 ;; This function calls:
  2415 ;;		_LCD_array
  2416 ;;		_LCD_date
  2417 ;;		_LCD_xy
  2418 ;; This function is called by:
  2419 ;;		_MEF_Subest_Actualizacion
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _Pant_Modos
  2425  0393                     _Pant_Modos:
  2426                           
  2427                           ;Display_Lcd.c: 64:     LCD_array(1,1,"RPM:");
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _Pant_Modos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2431  0393  3001               	movlw	1
  2432  0394  00F5               	movwf	LCD_array@x
  2433  0395  3000               	movlw	0
  2434  0396  00F6               	movwf	LCD_array@x+1
  2435  0397  3001               	movlw	1
  2436  0398  00F7               	movwf	LCD_array@y
  2437  0399  3000               	movlw	0
  2438  039A  00F8               	movwf	LCD_array@y+1
  2439  039B  307B               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2440  039C  00FF               	movwf	127
  2441  039D  087F               	movf	127,w
  2442  039E  00F9               	movwf	LCD_array@date
  2443  039F  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2444                           
  2445                           ;Display_Lcd.c: 65:     LCD_array(2,1,"PWM:");
  2446  03A4  3002               	movlw	2
  2447  03A5  00F5               	movwf	LCD_array@x
  2448  03A6  3000               	movlw	0
  2449  03A7  00F6               	movwf	LCD_array@x+1
  2450  03A8  3001               	movlw	1
  2451  03A9  00F7               	movwf	LCD_array@y
  2452  03AA  3000               	movlw	0
  2453  03AB  00F8               	movwf	LCD_array@y+1
  2454  03AC  3080               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2455  03AD  00FF               	movwf	127
  2456  03AE  087F               	movf	127,w
  2457  03AF  00F9               	movwf	LCD_array@date
  2458  03B0  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2459                           
  2460                           ;Display_Lcd.c: 66:     LCD_array(3,1,"TIEMPO:"),LCD_array(3,10,":");
  2461  03B5  3003               	movlw	3
  2462  03B6  00F5               	movwf	LCD_array@x
  2463  03B7  3000               	movlw	0
  2464  03B8  00F6               	movwf	LCD_array@x+1
  2465  03B9  3001               	movlw	1
  2466  03BA  00F7               	movwf	LCD_array@y
  2467  03BB  3000               	movlw	0
  2468  03BC  00F8               	movwf	LCD_array@y+1
  2469  03BD  306D               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2470  03BE  00FF               	movwf	127
  2471  03BF  087F               	movf	127,w
  2472  03C0  00F9               	movwf	LCD_array@date
  2473  03C1  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2474  03C6  3003               	movlw	3
  2475  03C7  00F5               	movwf	LCD_array@x
  2476  03C8  3000               	movlw	0
  2477  03C9  00F6               	movwf	LCD_array@x+1
  2478  03CA  300A               	movlw	10
  2479  03CB  00F7               	movwf	LCD_array@y
  2480  03CC  3000               	movlw	0
  2481  03CD  00F8               	movwf	LCD_array@y+1
  2482  03CE  306B               	movlw	(low (((STR_22+11)-__stringbase)| (0+32768)))& (0+255)
  2483  03CF  00FF               	movwf	127
  2484  03D0  087F               	movf	127,w
  2485  03D1  00F9               	movwf	LCD_array@date
  2486  03D2  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2487                           
  2488                           ;Display_Lcd.c: 67:     LCD_array(4,1,"TEMPERATURA:"),LCD_xy(4,16),LCD_date(0x01);
  2489  03D7  3004               	movlw	4
  2490  03D8  00F5               	movwf	LCD_array@x
  2491  03D9  3000               	movlw	0
  2492  03DA  00F6               	movwf	LCD_array@x+1
  2493  03DB  3001               	movlw	1
  2494  03DC  00F7               	movwf	LCD_array@y
  2495  03DD  3000               	movlw	0
  2496  03DE  00F8               	movwf	LCD_array@y+1
  2497  03DF  3060               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2498  03E0  00FF               	movwf	127
  2499  03E1  087F               	movf	127,w
  2500  03E2  00F9               	movwf	LCD_array@date
  2501  03E3  120A  118A  2481  120A  118A  	fcall	_LCD_array
  2502  03E8  3004               	movlw	4
  2503  03E9  00F5               	movwf	LCD_xy@x
  2504  03EA  3000               	movlw	0
  2505  03EB  00F6               	movwf	LCD_xy@x+1
  2506  03EC  3010               	movlw	16
  2507  03ED  00F7               	movwf	LCD_xy@y
  2508  03EE  3000               	movlw	0
  2509  03EF  00F8               	movwf	LCD_xy@y+1
  2510  03F0  120A  118A  25AC  120A  118A  	fcall	_LCD_xy
  2511  03F5  3001               	movlw	1
  2512  03F6  120A  118A  20ED  120A  118A  	fcall	_LCD_date
  2513                           
  2514                           ;Display_Lcd.c: 68:     LCD_array(4,17,"C");
  2515  03FB  3004               	movlw	4
  2516  03FC  00F5               	movwf	LCD_array@x
  2517  03FD  3000               	movlw	0
  2518  03FE  00F6               	movwf	LCD_array@x+1
  2519  03FF  3011               	movlw	17
  2520  0400  00F7               	movwf	LCD_array@y
  2521  0401  3000               	movlw	0
  2522  0402  00F8               	movwf	LCD_array@y+1
  2523  0403  308C               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2524  0404  00FF               	movwf	127
  2525  0405  087F               	movf	127,w
  2526  0406  00F9               	movwf	LCD_array@date
  2527  0407  120A  118A  2481   	fcall	_LCD_array
  2528  040A  0008               	return
  2529  040B                     __end_of_Pant_Modos:
  2530                           
  2531                           	psect	text13
  2532  05AC                     __ptext13:	
  2533 ;; *************** function _LCD_xy *****************
  2534 ;; Defined at:
  2535 ;;		line 163 in file "Lcd.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  x               2    5[COMMON] int 
  2538 ;;  y               2    7[COMMON] int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2550 ;;      Params:         4       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0
  2553 ;;      Totals:         4       0       0       0       0
  2554 ;;Total ram usage:        4 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    3
  2557 ;; This function calls:
  2558 ;;		_LCD_command
  2559 ;; This function is called by:
  2560 ;;		_Pant_Modos
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _LCD_xy
  2566  05AC                     _LCD_xy:
  2567                           
  2568                           ;Lcd.c: 163: void LCD_xy(int x,int y);Lcd.c: 164: {;Lcd.c: 165:     switch(x)
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _LCD_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2572  05AC  2DC9               	goto	l1567
  2573  05AD                     l1557:
  2574  05AD  0877               	movf	LCD_xy@y,w
  2575  05AE  3EFF               	addlw	255
  2576  05AF  3880               	iorlw	128
  2577  05B0  120A  118A  2033   	fcall	_LCD_command
  2578                           
  2579                           ;Lcd.c: 168:         break;
  2580  05B3  0008               	return
  2581  05B4                     l1559:
  2582  05B4  0877               	movf	LCD_xy@y,w
  2583  05B5  3E3F               	addlw	63
  2584  05B6  3880               	iorlw	128
  2585  05B7  120A  118A  2033   	fcall	_LCD_command
  2586                           
  2587                           ;Lcd.c: 170:         break;
  2588  05BA  0008               	return
  2589  05BB                     l1561:
  2590  05BB  0877               	movf	LCD_xy@y,w
  2591  05BC  3E13               	addlw	19
  2592  05BD  3880               	iorlw	128
  2593  05BE  120A  118A  2033   	fcall	_LCD_command
  2594                           
  2595                           ;Lcd.c: 172:         break;
  2596  05C1  0008               	return
  2597  05C2                     l1563:
  2598  05C2  0877               	movf	LCD_xy@y,w
  2599  05C3  3E53               	addlw	83
  2600  05C4  3880               	iorlw	128
  2601  05C5  120A  118A  2033   	fcall	_LCD_command
  2602                           
  2603                           ;Lcd.c: 174:         break;
  2604  05C8  0008               	return
  2605  05C9                     l1567:
  2606                           
  2607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2608                           ; Switch size 1, requested type "simple"
  2609                           ; Number of cases is 1, Range of values is 0 to 0
  2610                           ; switch strategies available:
  2611                           ; Name         Instructions Cycles
  2612                           ; simple_byte            4     3 (average)
  2613                           ; direct_byte           11     8 (fixed)
  2614                           ; jumptable            260     6 (fixed)
  2615                           ;	Chosen strategy is simple_byte
  2616  05C9  0876               	movf	LCD_xy@x+1,w
  2617  05CA  3A00               	xorlw	0	; case 0
  2618  05CB  1903               	skipnz
  2619  05CC  2DCE               	goto	l2483
  2620  05CD  2DDC               	goto	l289
  2621  05CE                     l2483:
  2622                           
  2623                           ; Switch size 1, requested type "simple"
  2624                           ; Number of cases is 4, Range of values is 1 to 4
  2625                           ; switch strategies available:
  2626                           ; Name         Instructions Cycles
  2627                           ; simple_byte           13     7 (average)
  2628                           ; direct_byte           23    11 (fixed)
  2629                           ; jumptable            263     9 (fixed)
  2630                           ;	Chosen strategy is simple_byte
  2631  05CE  0875               	movf	LCD_xy@x,w
  2632  05CF  3A01               	xorlw	1	; case 1
  2633  05D0  1903               	skipnz
  2634  05D1  2DAD               	goto	l1557
  2635  05D2  3A03               	xorlw	3	; case 2
  2636  05D3  1903               	skipnz
  2637  05D4  2DB4               	goto	l1559
  2638  05D5  3A01               	xorlw	1	; case 3
  2639  05D6  1903               	skipnz
  2640  05D7  2DBB               	goto	l1561
  2641  05D8  3A07               	xorlw	7	; case 4
  2642  05D9  1903               	skipnz
  2643  05DA  2DC2               	goto	l1563
  2644  05DB  2DDC               	goto	l289
  2645  05DC                     l289:
  2646  05DC  0008               	return
  2647  05DD                     __end_of_LCD_xy:
  2648                           
  2649                           	psect	text14
  2650  0481                     __ptext14:	
  2651 ;; *************** function _LCD_array *****************
  2652 ;; Defined at:
  2653 ;;		line 137 in file "Lcd.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  x               2    5[COMMON] int 
  2656 ;;  y               2    7[COMMON] int 
  2657 ;;  date            1    9[COMMON] PTR unsigned char 
  2658 ;;		 -> STR_23(2), STR_22(13), STR_21(2), STR_20(8), 
  2659 ;;		 -> STR_19(5), STR_18(5), STR_17(18), STR_16(6), 
  2660 ;;		 -> STR_15(5), STR_14(14), STR_13(2), STR_12(2), 
  2661 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  2662 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(21), 
  2663 ;;		 -> STR_3(21), STR_2(21), STR_1(21), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         5       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0
  2677 ;;      Temps:          0       2       0       0       0
  2678 ;;      Totals:         5       2       0       0       0
  2679 ;;Total ram usage:        7 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    3
  2682 ;; This function calls:
  2683 ;;		_LCD_command
  2684 ;;		_LCD_date
  2685 ;; This function is called by:
  2686 ;;		_Pant_Inicio
  2687 ;;		_Pant_Selector
  2688 ;;		_Pant_Menu
  2689 ;;		_Pant_Modos
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _LCD_array
  2695  0481                     _LCD_array:
  2696                           
  2697                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2701  0481  2CA6               	goto	l2235
  2702  0482                     l2225:
  2703  0482  0877               	movf	LCD_array@y,w
  2704  0483  3EFF               	addlw	255
  2705  0484  3880               	iorlw	128
  2706  0485  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2707                           
  2708                           ;Lcd.c: 143:         break;
  2709  048A  2CD4               	goto	l2243
  2710  048B                     l2227:
  2711  048B  0877               	movf	LCD_array@y,w
  2712  048C  3E3F               	addlw	63
  2713  048D  3880               	iorlw	128
  2714  048E  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2715                           
  2716                           ;Lcd.c: 145:         break;
  2717  0493  2CD4               	goto	l2243
  2718  0494                     l2229:
  2719  0494  0877               	movf	LCD_array@y,w
  2720  0495  3E13               	addlw	19
  2721  0496  3880               	iorlw	128
  2722  0497  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2723                           
  2724                           ;Lcd.c: 147:         break;
  2725  049C  2CD4               	goto	l2243
  2726  049D                     l2231:
  2727  049D  0877               	movf	LCD_array@y,w
  2728  049E  3E53               	addlw	83
  2729  049F  3880               	iorlw	128
  2730  04A0  120A  118A  2033  120A  118A  	fcall	_LCD_command
  2731                           
  2732                           ;Lcd.c: 149:         break;
  2733  04A5  2CD4               	goto	l2243
  2734  04A6                     l2235:
  2735                           
  2736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2737                           ; Switch size 1, requested type "simple"
  2738                           ; Number of cases is 1, Range of values is 0 to 0
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte            4     3 (average)
  2742                           ; direct_byte           11     8 (fixed)
  2743                           ; jumptable            260     6 (fixed)
  2744                           ;	Chosen strategy is simple_byte
  2745  04A6  0876               	movf	LCD_array@x+1,w
  2746  04A7  3A00               	xorlw	0	; case 0
  2747  04A8  1903               	skipnz
  2748  04A9  2CAB               	goto	l2485
  2749  04AA  2CD4               	goto	l2243
  2750  04AB                     l2485:
  2751                           
  2752                           ; Switch size 1, requested type "simple"
  2753                           ; Number of cases is 4, Range of values is 1 to 4
  2754                           ; switch strategies available:
  2755                           ; Name         Instructions Cycles
  2756                           ; simple_byte           13     7 (average)
  2757                           ; direct_byte           23    11 (fixed)
  2758                           ; jumptable            263     9 (fixed)
  2759                           ;	Chosen strategy is simple_byte
  2760  04AB  0875               	movf	LCD_array@x,w
  2761  04AC  3A01               	xorlw	1	; case 1
  2762  04AD  1903               	skipnz
  2763  04AE  2C82               	goto	l2225
  2764  04AF  3A03               	xorlw	3	; case 2
  2765  04B0  1903               	skipnz
  2766  04B1  2C8B               	goto	l2227
  2767  04B2  3A01               	xorlw	1	; case 3
  2768  04B3  1903               	skipnz
  2769  04B4  2C94               	goto	l2229
  2770  04B5  3A07               	xorlw	7	; case 4
  2771  04B6  1903               	skipnz
  2772  04B7  2C9D               	goto	l2231
  2773  04B8  2CD4               	goto	l2243
  2774  04B9                     l2237:
  2775                           
  2776                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  2777  04B9  0879               	movf	LCD_array@date,w
  2778  04BA  0084               	movwf	4
  2779  04BB  120A  118A  2300  120A  118A  	fcall	stringdir
  2780  04C0  120A  118A  20ED  120A  118A  	fcall	_LCD_date
  2781                           
  2782                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  2783  04C5  3007               	movlw	7
  2784  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2785  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2786  04C8  00BC               	movwf	??_LCD_array+1
  2787  04C9  307C               	movlw	124
  2788  04CA  00BB               	movwf	??_LCD_array
  2789  04CB                     u1877:
  2790  04CB  0BBB               	decfsz	??_LCD_array,f
  2791  04CC  2CCB               	goto	u1877
  2792  04CD  0BBC               	decfsz	??_LCD_array+1,f
  2793  04CE  2CCB               	goto	u1877
  2794  04CF  0000               	nop
  2795                           
  2796                           ;Lcd.c: 157:         date++;
  2797  04D0  3001               	movlw	1
  2798  04D1  00FF               	movwf	127
  2799  04D2  087F               	movf	127,w
  2800  04D3  07F9               	addwf	LCD_array@date,f
  2801  04D4                     l2243:
  2802                           
  2803                           ;Lcd.c: 153:     while(*date)
  2804  04D4  0879               	movf	LCD_array@date,w
  2805  04D5  0084               	movwf	4
  2806  04D6  120A  118A  2300  120A  118A  	fcall	stringdir
  2807  04DB  3A00               	xorlw	0
  2808  04DC  1903               	btfsc	3,2
  2809  04DD  0008               	return
  2810  04DE  2CB9               	goto	l2237
  2811  04DF                     __end_of_LCD_array:
  2812                           
  2813                           	psect	text15
  2814  00ED                     __ptext15:	
  2815 ;; *************** function _LCD_date *****************
  2816 ;; Defined at:
  2817 ;;		line 88 in file "Lcd.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  date            1    wreg     unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  date            1    4[COMMON] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       0       0       0       0
  2832 ;;      Locals:         1       0       0       0       0
  2833 ;;      Temps:          2       0       0       0       0
  2834 ;;      Totals:         3       0       0       0       0
  2835 ;;Total ram usage:        3 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    2
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_Pant_Modos
  2842 ;;		_LCD_array
  2843 ;;		_LCD_character
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _LCD_date
  2849  00ED                     _LCD_date:
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  2853                           ;LCD_date@date stored from wreg
  2854  00ED  00F4               	movwf	LCD_date@date
  2855                           
  2856                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2857  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2858  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2859  00F0  1207               	bcf	7,4	;volatile
  2860  00F1  1287               	bcf	7,5	;volatile
  2861  00F2  1307               	bcf	7,6	;volatile
  2862  00F3  1387               	bcf	7,7	;volatile
  2863                           
  2864                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  2865  00F4  0874               	movf	LCD_date@date,w
  2866  00F5  00F2               	movwf	??_LCD_date
  2867  00F6  3004               	movlw	4
  2868  00F7                     u565:
  2869  00F7  1003               	clrc
  2870  00F8  0CF2               	rrf	??_LCD_date,f
  2871  00F9  3EFF               	addlw	-1
  2872  00FA  1D03               	skipz
  2873  00FB  28F7               	goto	u565
  2874  00FC  0872               	movf	??_LCD_date,w
  2875  00FD  3901               	andlw	1
  2876  00FE  00F3               	movwf	??_LCD_date+1
  2877  00FF  0EF3               	swapf	??_LCD_date+1,f
  2878  0100  0807               	movf	7,w	;volatile
  2879  0101  0673               	xorwf	??_LCD_date+1,w
  2880  0102  39EF               	andlw	-17
  2881  0103  0673               	xorwf	??_LCD_date+1,w
  2882  0104  0087               	movwf	7	;volatile
  2883                           
  2884                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  2885  0105  0874               	movf	LCD_date@date,w
  2886  0106  00F2               	movwf	??_LCD_date
  2887  0107  3005               	movlw	5
  2888  0108                     u575:
  2889  0108  1003               	clrc
  2890  0109  0CF2               	rrf	??_LCD_date,f
  2891  010A  3EFF               	addlw	-1
  2892  010B  1D03               	skipz
  2893  010C  2908               	goto	u575
  2894  010D  0872               	movf	??_LCD_date,w
  2895  010E  3901               	andlw	1
  2896  010F  00F3               	movwf	??_LCD_date+1
  2897  0110  0EF3               	swapf	??_LCD_date+1,f
  2898  0111  0DF3               	rlf	??_LCD_date+1,f
  2899  0112  0807               	movf	7,w	;volatile
  2900  0113  0673               	xorwf	??_LCD_date+1,w
  2901  0114  39DF               	andlw	-33
  2902  0115  0673               	xorwf	??_LCD_date+1,w
  2903  0116  0087               	movwf	7	;volatile
  2904                           
  2905                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  2906  0117  0874               	movf	LCD_date@date,w
  2907  0118  00F2               	movwf	??_LCD_date
  2908  0119  3006               	movlw	6
  2909  011A                     u585:
  2910  011A  1003               	clrc
  2911  011B  0CF2               	rrf	??_LCD_date,f
  2912  011C  3EFF               	addlw	-1
  2913  011D  1D03               	skipz
  2914  011E  291A               	goto	u585
  2915  011F  0872               	movf	??_LCD_date,w
  2916  0120  3901               	andlw	1
  2917  0121  00F3               	movwf	??_LCD_date+1
  2918  0122  0EF3               	swapf	??_LCD_date+1,f
  2919  0123  0DF3               	rlf	??_LCD_date+1,f
  2920  0124  0DF3               	rlf	??_LCD_date+1,f
  2921  0125  0807               	movf	7,w	;volatile
  2922  0126  0673               	xorwf	??_LCD_date+1,w
  2923  0127  39BF               	andlw	-65
  2924  0128  0673               	xorwf	??_LCD_date+1,w
  2925  0129  0087               	movwf	7	;volatile
  2926                           
  2927                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  2928  012A  0874               	movf	LCD_date@date,w
  2929  012B  00F2               	movwf	??_LCD_date
  2930  012C  3007               	movlw	7
  2931  012D                     u595:
  2932  012D  1003               	clrc
  2933  012E  0CF2               	rrf	??_LCD_date,f
  2934  012F  3EFF               	addlw	-1
  2935  0130  1D03               	skipz
  2936  0131  292D               	goto	u595
  2937  0132  0872               	movf	??_LCD_date,w
  2938  0133  3901               	andlw	1
  2939  0134  00F3               	movwf	??_LCD_date+1
  2940  0135  0CF3               	rrf	??_LCD_date+1,f
  2941  0136  0CF3               	rrf	??_LCD_date+1,f
  2942  0137  0807               	movf	7,w	;volatile
  2943  0138  0673               	xorwf	??_LCD_date+1,w
  2944  0139  397F               	andlw	-129
  2945  013A  0673               	xorwf	??_LCD_date+1,w
  2946  013B  0087               	movwf	7	;volatile
  2947                           
  2948                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  2949  013C  1487               	bsf	7,1	;volatile
  2950                           
  2951                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  2952  013D  1187               	bcf	7,3	;volatile
  2953                           
  2954                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  2955  013E  1587               	bsf	7,3	;volatile
  2956                           
  2957                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2958  013F  3018               	movlw	24
  2959  0140  00F2               	movwf	??_LCD_date
  2960  0141                     u1887:
  2961  0141  0BF2               	decfsz	??_LCD_date,f
  2962  0142  2941               	goto	u1887
  2963  0143  2944               	nop2
  2964                           
  2965                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  2966  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0146  1187               	bcf	7,3	;volatile
  2969                           
  2970                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2971  0147  3018               	movlw	24
  2972  0148  00F2               	movwf	??_LCD_date
  2973  0149                     u1897:
  2974  0149  0BF2               	decfsz	??_LCD_date,f
  2975  014A  2949               	goto	u1897
  2976  014B  294C               	nop2
  2977                           
  2978                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2979  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2980  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2981  014E  1207               	bcf	7,4	;volatile
  2982  014F  1287               	bcf	7,5	;volatile
  2983  0150  1307               	bcf	7,6	;volatile
  2984  0151  1387               	bcf	7,7	;volatile
  2985                           
  2986                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  2987  0152  0874               	movf	LCD_date@date,w
  2988  0153  3901               	andlw	1
  2989  0154  00F2               	movwf	??_LCD_date
  2990  0155  0EF2               	swapf	??_LCD_date,f
  2991  0156  0807               	movf	7,w	;volatile
  2992  0157  0672               	xorwf	??_LCD_date,w
  2993  0158  39EF               	andlw	-17
  2994  0159  0672               	xorwf	??_LCD_date,w
  2995  015A  0087               	movwf	7	;volatile
  2996                           
  2997                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  2998  015B  0874               	movf	LCD_date@date,w
  2999  015C  00F2               	movwf	??_LCD_date
  3000  015D  1003               	clrc
  3001  015E  0C72               	rrf	??_LCD_date,w
  3002  015F  3901               	andlw	1
  3003  0160  00F3               	movwf	??_LCD_date+1
  3004  0161  0EF3               	swapf	??_LCD_date+1,f
  3005  0162  0DF3               	rlf	??_LCD_date+1,f
  3006  0163  0807               	movf	7,w	;volatile
  3007  0164  0673               	xorwf	??_LCD_date+1,w
  3008  0165  39DF               	andlw	-33
  3009  0166  0673               	xorwf	??_LCD_date+1,w
  3010  0167  0087               	movwf	7	;volatile
  3011                           
  3012                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  3013  0168  0874               	movf	LCD_date@date,w
  3014  0169  00F2               	movwf	??_LCD_date
  3015  016A  3002               	movlw	2
  3016  016B                     u605:
  3017  016B  1003               	clrc
  3018  016C  0CF2               	rrf	??_LCD_date,f
  3019  016D  3EFF               	addlw	-1
  3020  016E  1D03               	skipz
  3021  016F  296B               	goto	u605
  3022  0170  0872               	movf	??_LCD_date,w
  3023  0171  3901               	andlw	1
  3024  0172  00F3               	movwf	??_LCD_date+1
  3025  0173  0EF3               	swapf	??_LCD_date+1,f
  3026  0174  0DF3               	rlf	??_LCD_date+1,f
  3027  0175  0DF3               	rlf	??_LCD_date+1,f
  3028  0176  0807               	movf	7,w	;volatile
  3029  0177  0673               	xorwf	??_LCD_date+1,w
  3030  0178  39BF               	andlw	-65
  3031  0179  0673               	xorwf	??_LCD_date+1,w
  3032  017A  0087               	movwf	7	;volatile
  3033                           
  3034                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  3035  017B  0874               	movf	LCD_date@date,w
  3036  017C  00F2               	movwf	??_LCD_date
  3037  017D  3003               	movlw	3
  3038  017E                     u615:
  3039  017E  1003               	clrc
  3040  017F  0CF2               	rrf	??_LCD_date,f
  3041  0180  3EFF               	addlw	-1
  3042  0181  1D03               	skipz
  3043  0182  297E               	goto	u615
  3044  0183  0872               	movf	??_LCD_date,w
  3045  0184  3901               	andlw	1
  3046  0185  00F3               	movwf	??_LCD_date+1
  3047  0186  0CF3               	rrf	??_LCD_date+1,f
  3048  0187  0CF3               	rrf	??_LCD_date+1,f
  3049  0188  0807               	movf	7,w	;volatile
  3050  0189  0673               	xorwf	??_LCD_date+1,w
  3051  018A  397F               	andlw	-129
  3052  018B  0673               	xorwf	??_LCD_date+1,w
  3053  018C  0087               	movwf	7	;volatile
  3054                           
  3055                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  3056  018D  1487               	bsf	7,1	;volatile
  3057                           
  3058                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  3059  018E  1187               	bcf	7,3	;volatile
  3060                           
  3061                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  3062  018F  1587               	bsf	7,3	;volatile
  3063                           
  3064                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  3065  0190  3053               	movlw	83
  3066  0191  00F2               	movwf	??_LCD_date
  3067  0192                     u1907:
  3068  0192  0BF2               	decfsz	??_LCD_date,f
  3069  0193  2992               	goto	u1907
  3070                           
  3071                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  3072  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0196  1187               	bcf	7,3	;volatile
  3075                           
  3076                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  3077  0197  3053               	movlw	83
  3078  0198  00F2               	movwf	??_LCD_date
  3079  0199                     u1917:
  3080  0199  0BF2               	decfsz	??_LCD_date,f
  3081  019A  2999               	goto	u1917
  3082                           
  3083                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3084  019B  3014               	movlw	20
  3085  019C  00F3               	movwf	??_LCD_date+1
  3086  019D  3079               	movlw	121
  3087  019E  00F2               	movwf	??_LCD_date
  3088  019F                     u1927:
  3089  019F  0BF2               	decfsz	??_LCD_date,f
  3090  01A0  299F               	goto	u1927
  3091  01A1  0BF3               	decfsz	??_LCD_date+1,f
  3092  01A2  299F               	goto	u1927
  3093  01A3  29A4               	nop2
  3094  01A4  0008               	return
  3095  01A5                     __end_of_LCD_date:
  3096                           
  3097                           	psect	text16
  3098  040B                     __ptext16:	
  3099 ;; *************** function _LCD_init *****************
  3100 ;; Defined at:
  3101 ;;		line 4 in file "Lcd.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  i               1    7[COMMON] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         1       0       0       0       0
  3117 ;;      Temps:          2       0       0       0       0
  3118 ;;      Totals:         3       0       0       0       0
  3119 ;;Total ram usage:        3 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    3
  3122 ;; This function calls:
  3123 ;;		_LCD_command
  3124 ;; This function is called by:
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _LCD_init
  3131  040B                     _LCD_init:
  3132                           
  3133                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  3134                           
  3135                           ;incstack = 0
  3136                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3137  040B  1683               	bsf	3,5	;RP0=1, select bank1
  3138  040C  1303               	bcf	3,6	;RP1=0, select bank1
  3139  040D  1207               	bcf	7,4	;volatile
  3140  040E  1287               	bcf	7,5	;volatile
  3141  040F  1307               	bcf	7,6	;volatile
  3142  0410  1387               	bcf	7,7	;volatile
  3143                           
  3144                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  3145  0411  1087               	bcf	7,1	;volatile
  3146  0412  1187               	bcf	7,3	;volatile
  3147                           
  3148                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  3149  0413  1107               	bcf	7,2	;volatile
  3150  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0416  1107               	bcf	7,2	;volatile
  3153                           
  3154                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  3155  0417  30C3               	movlw	195
  3156  0418  00F6               	movwf	??_LCD_init+1
  3157  0419  30CD               	movlw	205
  3158  041A  00F5               	movwf	??_LCD_init
  3159  041B                     u1937:
  3160  041B  0BF5               	decfsz	??_LCD_init,f
  3161  041C  2C1B               	goto	u1937
  3162  041D  0BF6               	decfsz	??_LCD_init+1,f
  3163  041E  2C1B               	goto	u1937
  3164                           
  3165                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  3166  041F  01F7               	clrf	LCD_init@i
  3167  0420                     l1707:
  3168                           
  3169                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  3170  0420  3003               	movlw	3
  3171  0421  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3172                           
  3173                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  3174  0426  302E               	movlw	46
  3175  0427  00F6               	movwf	??_LCD_init+1
  3176  0428  3073               	movlw	115
  3177  0429  00F5               	movwf	??_LCD_init
  3178  042A                     u1947:
  3179  042A  0BF5               	decfsz	??_LCD_init,f
  3180  042B  2C2A               	goto	u1947
  3181  042C  0BF6               	decfsz	??_LCD_init+1,f
  3182  042D  2C2A               	goto	u1947
  3183                           
  3184                           ;Lcd.c: 18:     }
  3185  042E  3001               	movlw	1
  3186  042F  00FF               	movwf	127
  3187  0430  087F               	movf	127,w
  3188  0431  07F7               	addwf	LCD_init@i,f
  3189  0432  3003               	movlw	3
  3190  0433  0277               	subwf	LCD_init@i,w
  3191  0434  1C03               	skipc
  3192  0435  2C20               	goto	l1707
  3193                           
  3194                           ;Lcd.c: 21:  LCD_command(0x33);
  3195  0436  3033               	movlw	51
  3196  0437  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3197                           
  3198                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3199  043C  30A6               	movlw	166
  3200  043D  00F5               	movwf	??_LCD_init
  3201  043E                     u1957:
  3202  043E  0BF5               	decfsz	??_LCD_init,f
  3203  043F  2C3E               	goto	u1957
  3204  0440  0000               	nop
  3205                           
  3206                           ;Lcd.c: 23:     LCD_command(0x32);
  3207  0441  3032               	movlw	50
  3208  0442  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3209                           
  3210                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3211  0447  3021               	movlw	33
  3212  0448  00F6               	movwf	??_LCD_init+1
  3213  0449  3076               	movlw	118
  3214  044A  00F5               	movwf	??_LCD_init
  3215  044B                     u1967:
  3216  044B  0BF5               	decfsz	??_LCD_init,f
  3217  044C  2C4B               	goto	u1967
  3218  044D  0BF6               	decfsz	??_LCD_init+1,f
  3219  044E  2C4B               	goto	u1967
  3220  044F  0000               	nop
  3221                           
  3222                           ;Lcd.c: 25:  LCD_command(0x28);
  3223  0450  3028               	movlw	40
  3224  0451  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3225                           
  3226                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3227  0456  30A6               	movlw	166
  3228  0457  00F5               	movwf	??_LCD_init
  3229  0458                     u1977:
  3230  0458  0BF5               	decfsz	??_LCD_init,f
  3231  0459  2C58               	goto	u1977
  3232  045A  0000               	nop
  3233                           
  3234                           ;Lcd.c: 27:  LCD_command(0x0C);
  3235  045B  300C               	movlw	12
  3236  045C  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3237                           
  3238                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3239  0461  30A6               	movlw	166
  3240  0462  00F5               	movwf	??_LCD_init
  3241  0463                     u1987:
  3242  0463  0BF5               	decfsz	??_LCD_init,f
  3243  0464  2C63               	goto	u1987
  3244  0465  0000               	nop
  3245                           
  3246                           ;Lcd.c: 29:  LCD_command(0x06);
  3247  0466  3006               	movlw	6
  3248  0467  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3249                           
  3250                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3251  046C  30A6               	movlw	166
  3252  046D  00F5               	movwf	??_LCD_init
  3253  046E                     u1997:
  3254  046E  0BF5               	decfsz	??_LCD_init,f
  3255  046F  2C6E               	goto	u1997
  3256  0470  0000               	nop
  3257                           
  3258                           ;Lcd.c: 31:     LCD_command(0x01);
  3259  0471  3001               	movlw	1
  3260  0472  120A  118A  2033  120A  118A  	fcall	_LCD_command
  3261                           
  3262                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3263  0477  3041               	movlw	65
  3264  0478  00F6               	movwf	??_LCD_init+1
  3265  0479  30EE               	movlw	238
  3266  047A  00F5               	movwf	??_LCD_init
  3267  047B                     u2007:
  3268  047B  0BF5               	decfsz	??_LCD_init,f
  3269  047C  2C7B               	goto	u2007
  3270  047D  0BF6               	decfsz	??_LCD_init+1,f
  3271  047E  2C7B               	goto	u2007
  3272  047F  0000               	nop
  3273  0480  0008               	return
  3274  0481                     __end_of_LCD_init:
  3275                           
  3276                           	psect	text17
  3277  0033                     __ptext17:	
  3278 ;; *************** function _LCD_command *****************
  3279 ;; Defined at:
  3280 ;;		line 39 in file "Lcd.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  cmd             1    wreg     unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  cmd             1    4[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         1       0       0       0       0
  3296 ;;      Temps:          2       0       0       0       0
  3297 ;;      Totals:         3       0       0       0       0
  3298 ;;Total ram usage:        3 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    2
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_Pant_Inicio
  3305 ;;		_LCD_init
  3306 ;;		_LCD_array
  3307 ;;		_LCD_xy
  3308 ;;		_LCD_character
  3309 ;;		_LCD_shift
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _LCD_command
  3315  0033                     _LCD_command:
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  3319                           ;LCD_command@cmd stored from wreg
  3320  0033  00F4               	movwf	LCD_command@cmd
  3321                           
  3322                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  3323  0034  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0035  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0036  1207               	bcf	7,4	;volatile
  3326  0037  1287               	bcf	7,5	;volatile
  3327  0038  1307               	bcf	7,6	;volatile
  3328  0039  1387               	bcf	7,7	;volatile
  3329                           
  3330                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  3331  003A  0874               	movf	LCD_command@cmd,w
  3332  003B  00F2               	movwf	??_LCD_command
  3333  003C  3004               	movlw	4
  3334  003D                     u505:
  3335  003D  1003               	clrc
  3336  003E  0CF2               	rrf	??_LCD_command,f
  3337  003F  3EFF               	addlw	-1
  3338  0040  1D03               	skipz
  3339  0041  283D               	goto	u505
  3340  0042  0872               	movf	??_LCD_command,w
  3341  0043  3901               	andlw	1
  3342  0044  00F3               	movwf	??_LCD_command+1
  3343  0045  0EF3               	swapf	??_LCD_command+1,f
  3344  0046  0807               	movf	7,w	;volatile
  3345  0047  0673               	xorwf	??_LCD_command+1,w
  3346  0048  39EF               	andlw	-17
  3347  0049  0673               	xorwf	??_LCD_command+1,w
  3348  004A  0087               	movwf	7	;volatile
  3349                           
  3350                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  3351  004B  0874               	movf	LCD_command@cmd,w
  3352  004C  00F2               	movwf	??_LCD_command
  3353  004D  3005               	movlw	5
  3354  004E                     u515:
  3355  004E  1003               	clrc
  3356  004F  0CF2               	rrf	??_LCD_command,f
  3357  0050  3EFF               	addlw	-1
  3358  0051  1D03               	skipz
  3359  0052  284E               	goto	u515
  3360  0053  0872               	movf	??_LCD_command,w
  3361  0054  3901               	andlw	1
  3362  0055  00F3               	movwf	??_LCD_command+1
  3363  0056  0EF3               	swapf	??_LCD_command+1,f
  3364  0057  0DF3               	rlf	??_LCD_command+1,f
  3365  0058  0807               	movf	7,w	;volatile
  3366  0059  0673               	xorwf	??_LCD_command+1,w
  3367  005A  39DF               	andlw	-33
  3368  005B  0673               	xorwf	??_LCD_command+1,w
  3369  005C  0087               	movwf	7	;volatile
  3370                           
  3371                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  3372  005D  0874               	movf	LCD_command@cmd,w
  3373  005E  00F2               	movwf	??_LCD_command
  3374  005F  3006               	movlw	6
  3375  0060                     u525:
  3376  0060  1003               	clrc
  3377  0061  0CF2               	rrf	??_LCD_command,f
  3378  0062  3EFF               	addlw	-1
  3379  0063  1D03               	skipz
  3380  0064  2860               	goto	u525
  3381  0065  0872               	movf	??_LCD_command,w
  3382  0066  3901               	andlw	1
  3383  0067  00F3               	movwf	??_LCD_command+1
  3384  0068  0EF3               	swapf	??_LCD_command+1,f
  3385  0069  0DF3               	rlf	??_LCD_command+1,f
  3386  006A  0DF3               	rlf	??_LCD_command+1,f
  3387  006B  0807               	movf	7,w	;volatile
  3388  006C  0673               	xorwf	??_LCD_command+1,w
  3389  006D  39BF               	andlw	-65
  3390  006E  0673               	xorwf	??_LCD_command+1,w
  3391  006F  0087               	movwf	7	;volatile
  3392                           
  3393                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  3394  0070  0874               	movf	LCD_command@cmd,w
  3395  0071  00F2               	movwf	??_LCD_command
  3396  0072  3007               	movlw	7
  3397  0073                     u535:
  3398  0073  1003               	clrc
  3399  0074  0CF2               	rrf	??_LCD_command,f
  3400  0075  3EFF               	addlw	-1
  3401  0076  1D03               	skipz
  3402  0077  2873               	goto	u535
  3403  0078  0872               	movf	??_LCD_command,w
  3404  0079  3901               	andlw	1
  3405  007A  00F3               	movwf	??_LCD_command+1
  3406  007B  0CF3               	rrf	??_LCD_command+1,f
  3407  007C  0CF3               	rrf	??_LCD_command+1,f
  3408  007D  0807               	movf	7,w	;volatile
  3409  007E  0673               	xorwf	??_LCD_command+1,w
  3410  007F  397F               	andlw	-129
  3411  0080  0673               	xorwf	??_LCD_command+1,w
  3412  0081  0087               	movwf	7	;volatile
  3413                           
  3414                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  3415  0082  1087               	bcf	7,1	;volatile
  3416                           
  3417                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  3418  0083  1187               	bcf	7,3	;volatile
  3419                           
  3420                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  3421  0084  1587               	bsf	7,3	;volatile
  3422                           
  3423                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3424  0085  3018               	movlw	24
  3425  0086  00F2               	movwf	??_LCD_command
  3426  0087                     u2017:
  3427  0087  0BF2               	decfsz	??_LCD_command,f
  3428  0088  2887               	goto	u2017
  3429  0089  288A               	nop2
  3430                           
  3431                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  3432  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3433  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3434  008C  1187               	bcf	7,3	;volatile
  3435                           
  3436                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3437  008D  3018               	movlw	24
  3438  008E  00F2               	movwf	??_LCD_command
  3439  008F                     u2027:
  3440  008F  0BF2               	decfsz	??_LCD_command,f
  3441  0090  288F               	goto	u2027
  3442  0091  2892               	nop2
  3443                           
  3444                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  3445  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0094  1207               	bcf	7,4	;volatile
  3448  0095  1287               	bcf	7,5	;volatile
  3449  0096  1307               	bcf	7,6	;volatile
  3450  0097  1387               	bcf	7,7	;volatile
  3451                           
  3452                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  3453  0098  0874               	movf	LCD_command@cmd,w
  3454  0099  3901               	andlw	1
  3455  009A  00F2               	movwf	??_LCD_command
  3456  009B  0EF2               	swapf	??_LCD_command,f
  3457  009C  0807               	movf	7,w	;volatile
  3458  009D  0672               	xorwf	??_LCD_command,w
  3459  009E  39EF               	andlw	-17
  3460  009F  0672               	xorwf	??_LCD_command,w
  3461  00A0  0087               	movwf	7	;volatile
  3462                           
  3463                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  3464  00A1  0874               	movf	LCD_command@cmd,w
  3465  00A2  00F2               	movwf	??_LCD_command
  3466  00A3  1003               	clrc
  3467  00A4  0C72               	rrf	??_LCD_command,w
  3468  00A5  3901               	andlw	1
  3469  00A6  00F3               	movwf	??_LCD_command+1
  3470  00A7  0EF3               	swapf	??_LCD_command+1,f
  3471  00A8  0DF3               	rlf	??_LCD_command+1,f
  3472  00A9  0807               	movf	7,w	;volatile
  3473  00AA  0673               	xorwf	??_LCD_command+1,w
  3474  00AB  39DF               	andlw	-33
  3475  00AC  0673               	xorwf	??_LCD_command+1,w
  3476  00AD  0087               	movwf	7	;volatile
  3477                           
  3478                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  3479  00AE  0874               	movf	LCD_command@cmd,w
  3480  00AF  00F2               	movwf	??_LCD_command
  3481  00B0  3002               	movlw	2
  3482  00B1                     u545:
  3483  00B1  1003               	clrc
  3484  00B2  0CF2               	rrf	??_LCD_command,f
  3485  00B3  3EFF               	addlw	-1
  3486  00B4  1D03               	skipz
  3487  00B5  28B1               	goto	u545
  3488  00B6  0872               	movf	??_LCD_command,w
  3489  00B7  3901               	andlw	1
  3490  00B8  00F3               	movwf	??_LCD_command+1
  3491  00B9  0EF3               	swapf	??_LCD_command+1,f
  3492  00BA  0DF3               	rlf	??_LCD_command+1,f
  3493  00BB  0DF3               	rlf	??_LCD_command+1,f
  3494  00BC  0807               	movf	7,w	;volatile
  3495  00BD  0673               	xorwf	??_LCD_command+1,w
  3496  00BE  39BF               	andlw	-65
  3497  00BF  0673               	xorwf	??_LCD_command+1,w
  3498  00C0  0087               	movwf	7	;volatile
  3499                           
  3500                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
  3501  00C1  0874               	movf	LCD_command@cmd,w
  3502  00C2  00F2               	movwf	??_LCD_command
  3503  00C3  3003               	movlw	3
  3504  00C4                     u555:
  3505  00C4  1003               	clrc
  3506  00C5  0CF2               	rrf	??_LCD_command,f
  3507  00C6  3EFF               	addlw	-1
  3508  00C7  1D03               	skipz
  3509  00C8  28C4               	goto	u555
  3510  00C9  0872               	movf	??_LCD_command,w
  3511  00CA  3901               	andlw	1
  3512  00CB  00F3               	movwf	??_LCD_command+1
  3513  00CC  0CF3               	rrf	??_LCD_command+1,f
  3514  00CD  0CF3               	rrf	??_LCD_command+1,f
  3515  00CE  0807               	movf	7,w	;volatile
  3516  00CF  0673               	xorwf	??_LCD_command+1,w
  3517  00D0  397F               	andlw	-129
  3518  00D1  0673               	xorwf	??_LCD_command+1,w
  3519  00D2  0087               	movwf	7	;volatile
  3520                           
  3521                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
  3522  00D3  1087               	bcf	7,1	;volatile
  3523                           
  3524                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
  3525  00D4  1187               	bcf	7,3	;volatile
  3526                           
  3527                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
  3528  00D5  1587               	bsf	7,3	;volatile
  3529                           
  3530                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3531  00D6  3018               	movlw	24
  3532  00D7  00F2               	movwf	??_LCD_command
  3533  00D8                     u2037:
  3534  00D8  0BF2               	decfsz	??_LCD_command,f
  3535  00D9  28D8               	goto	u2037
  3536  00DA  28DB               	nop2
  3537                           
  3538                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
  3539  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  3540  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  3541  00DD  1187               	bcf	7,3	;volatile
  3542                           
  3543                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  3544  00DE  3018               	movlw	24
  3545  00DF  00F2               	movwf	??_LCD_command
  3546  00E0                     u2047:
  3547  00E0  0BF2               	decfsz	??_LCD_command,f
  3548  00E1  28E0               	goto	u2047
  3549  00E2  28E3               	nop2
  3550                           
  3551                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3552  00E3  3014               	movlw	20
  3553  00E4  00F3               	movwf	??_LCD_command+1
  3554  00E5  3079               	movlw	121
  3555  00E6  00F2               	movwf	??_LCD_command
  3556  00E7                     u2057:
  3557  00E7  0BF2               	decfsz	??_LCD_command,f
  3558  00E8  28E7               	goto	u2057
  3559  00E9  0BF3               	decfsz	??_LCD_command+1,f
  3560  00EA  28E7               	goto	u2057
  3561  00EB  28EC               	nop2
  3562  00EC  0008               	return
  3563  00ED                     __end_of_LCD_command:
  3564                           
  3565                           	psect	text18
  3566  0577                     __ptext18:	
  3567 ;; *************** function _ISR *****************
  3568 ;; Defined at:
  3569 ;;		line 74 in file "Main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          2       0       0       0       0
  3586 ;;      Totals:         2       0       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    1
  3590 ;; This function calls:
  3591 ;;		_Task_Ready
  3592 ;; This function is called by:
  3593 ;;		Interrupt level 1
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _ISR
  3599  0577                     _ISR:
  3600                           
  3601                           ;Main.c: 77:     if(TMR1IF == 1)
  3602  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0579  1C0C               	btfss	12,0	;volatile
  3605  057A  2D98               	goto	i1l1935
  3606                           
  3607                           ;Main.c: 78:     {;Main.c: 79:         if(Delay100ms!=0 && !Mostrar) Delay100ms--;
  3608  057B  087A               	movf	_Delay100ms,w	;volatile
  3609  057C  047B               	iorwf	_Delay100ms+1,w	;volatile
  3610  057D  1903               	btfsc	3,2
  3611  057E  2D88               	goto	i1l1925
  3612  057F  0838               	movf	_Mostrar,w
  3613  0580  1D03               	btfss	3,2
  3614  0581  2D88               	goto	i1l1925
  3615  0582  3001               	movlw	1
  3616  0583  02FA               	subwf	_Delay100ms,f	;volatile
  3617  0584  3000               	movlw	0
  3618  0585  1C03               	skipc
  3619  0586  03FB               	decf	_Delay100ms+1,f	;volatile
  3620  0587  02FB               	subwf	_Delay100ms+1,f	;volatile
  3621  0588                     i1l1925:
  3622                           
  3623                           ;Main.c: 80:         if(Tempo_WDT!=0) Tempo_WDT--;
  3624  0588  085B               	movf	_Tempo_WDT,w	;volatile
  3625  0589  045C               	iorwf	_Tempo_WDT+1,w	;volatile
  3626  058A  1903               	btfsc	3,2
  3627  058B  2D92               	goto	i1l1929
  3628  058C  3001               	movlw	1
  3629  058D  02DB               	subwf	_Tempo_WDT,f	;volatile
  3630  058E  3000               	movlw	0
  3631  058F  1C03               	skipc
  3632  0590  03DC               	decf	_Tempo_WDT+1,f	;volatile
  3633  0591  02DC               	subwf	_Tempo_WDT+1,f	;volatile
  3634  0592                     i1l1929:
  3635                           
  3636                           ;Main.c: 82:         TMR1 = 65285;
  3637  0592  30FF               	movlw	255
  3638  0593  008F               	movwf	15	;volatile
  3639  0594  3005               	movlw	5
  3640  0595  008E               	movwf	14	;volatile
  3641                           
  3642                           ;Main.c: 83:         TMR1ON = 1;
  3643  0596  1410               	bsf	16,0	;volatile
  3644                           
  3645                           ;Main.c: 84:         TMR1IF = 0;
  3646  0597  100C               	bcf	12,0	;volatile
  3647  0598                     i1l1935:
  3648                           
  3649                           ;Main.c: 87:     if(!Delay100ms || !Tempo_WDT) Task_Ready();
  3650  0598  087A               	movf	_Delay100ms,w	;volatile
  3651  0599  047B               	iorwf	_Delay100ms+1,w	;volatile
  3652  059A  1903               	btfsc	3,2
  3653  059B  2DA0               	goto	i1l1939
  3654  059C  085B               	movf	_Tempo_WDT,w	;volatile
  3655  059D  045C               	iorwf	_Tempo_WDT+1,w	;volatile
  3656  059E  1D03               	btfss	3,2
  3657  059F  2DA5               	goto	i1l90
  3658  05A0                     i1l1939:
  3659  05A0  120A  118A  2685  120A  118A  	fcall	_Task_Ready
  3660  05A5                     i1l90:
  3661  05A5  0871               	movf	??_ISR+1,w
  3662  05A6  008A               	movwf	10
  3663  05A7  0E70               	swapf	??_ISR^(0+4294967168),w
  3664  05A8  0083               	movwf	3
  3665  05A9  0EFE               	swapf	126,f
  3666  05AA  0E7E               	swapf	126,w
  3667  05AB  0009               	retfie
  3668  05AC                     __end_of_ISR:
  3669                           
  3670                           	psect	intentry
  3671  0004                     __pintentry:	
  3672                           ;incstack = 0
  3673                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3674                           
  3675  0004                     interrupt_function:
  3676  007E                     saved_w	set	btemp
  3677  0004  00FE               	movwf	btemp
  3678  0005  0E03               	swapf	3,w
  3679  0006  00F0               	movwf	??_ISR
  3680  0007  080A               	movf	10,w
  3681  0008  00F1               	movwf	??_ISR+1
  3682  0009  120A  118A  2D77   	ljmp	_ISR
  3683                           
  3684                           	psect	text19
  3685  0685                     __ptext19:	
  3686 ;; *************** function _Task_Ready *****************
  3687 ;; Defined at:
  3688 ;;		line 92 in file "Main.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_ISR
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _Task_Ready
  3717  0685                     _Task_Ready:
  3718                           
  3719                           ;Main.c: 94:     if(!Delay100ms)
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _Task_Ready: [wreg+status,2+status,0]
  3723  0685  087A               	movf	_Delay100ms,w	;volatile
  3724  0686  047B               	iorwf	_Delay100ms+1,w	;volatile
  3725  0687  1D03               	btfss	3,2
  3726  0688  2E91               	goto	i1l1783
  3727                           
  3728                           ;Main.c: 95:     {;Main.c: 96:         Mostrar = 1;
  3729  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3730  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3731  068B  01B8               	clrf	_Mostrar
  3732  068C  0AB8               	incf	_Mostrar,f
  3733                           
  3734                           ;Main.c: 97:         Delay100ms = 1000;
  3735  068D  30E8               	movlw	232
  3736  068E  00FA               	movwf	_Delay100ms	;volatile
  3737  068F  3003               	movlw	3
  3738  0690  00FB               	movwf	_Delay100ms+1	;volatile
  3739  0691                     i1l1783:
  3740                           
  3741                           ;Main.c: 99:     if(!Tempo_WDT)
  3742  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0693  085B               	movf	_Tempo_WDT,w	;volatile
  3745  0694  045C               	iorwf	_Tempo_WDT+1,w	;volatile
  3746  0695  1D03               	btfss	3,2
  3747  0696  0008               	return
  3748  0697  0064               	clrwdt	;# 
  3749                           
  3750                           ;Main.c: 102:         Tempo_WDT = 5000;
  3751  0698  3088               	movlw	136
  3752  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3753  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3754  069B  00DB               	movwf	_Tempo_WDT	;volatile
  3755  069C  3013               	movlw	19
  3756  069D  00DC               	movwf	_Tempo_WDT+1	;volatile
  3757  069E  0008               	return
  3758  069F                     __end_of_Task_Ready:
  3759  007E                     btemp	set	126	;btemp
  3760  007E                     wtemp0	set	126
  3761                           
  3762                           	psect	config
  3763                           
  3764                           ;Config register CONFIG1 @ 0x2007
  3765                           ;	Oscillator Selection bits
  3766                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3767                           ;	Watchdog Timer Enable bit
  3768                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3769                           ;	Power-up Timer Enable bit
  3770                           ;	PWRTE = ON, PWRT enabled
  3771                           ;	RE3/MCLR pin function select bit
  3772                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3773                           ;	Code Protection bit
  3774                           ;	CP = OFF, Program memory code protection is disabled
  3775                           ;	Data Code Protection bit
  3776                           ;	CPD = OFF, Data memory code protection is disabled
  3777                           ;	Brown Out Reset Selection bits
  3778                           ;	BOREN = OFF, BOR disabled
  3779                           ;	Internal External Switchover bit
  3780                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3781                           ;	Fail-Safe Clock Monitor Enabled bit
  3782                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3783                           ;	Low Voltage Programming Enable bit
  3784                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3785                           ;	In-Circuit Debugger Mode bit
  3786                           ;	DEBUG = 0x1, unprogrammed default
  3787  2007                     	org	8199
  3788  2007  2CE2               	dw	11490
  3789                           
  3790                           ;Config register CONFIG2 @ 0x2008
  3791                           ;	Brown-out Reset Selection bit
  3792                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3793                           ;	Flash Program Memory Self Write Enable bits
  3794                           ;	WRT = OFF, Write protection off
  3795  2008                     	org	8200
  3796  2008  3FFF               	dw	16383

Data Sizes:
    Strings     141
    Constant    0
    Data        12
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(1) Largest target is 21
		 -> STR_23(CODE[2]), STR_22(CODE[13]), STR_21(CODE[2]), STR_20(CODE[8]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[18]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[14]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[21]), 
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _Pant_Modos->_LCD_array
    _LCD_xy->_LCD_command
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_Pant_Inicio
    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _Pant_Modos->_LCD_array

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25194
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
                           _Pwm_init
 ---------------------------------------------------------------------------------
 (1) _Pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0   24972
                                             22 BANK0      2     2      0
                        _Antirrebote
           _MEF_Subest_Actualizacion
                        _Pant_Inicio
                        _Select_Modo
 ---------------------------------------------------------------------------------
 (2) _Select_Modo                                          0     0      0   11770
                        _Antirrebote
                          _Pant_Menu
                      _Pant_Selector
 ---------------------------------------------------------------------------------
 (3) _Pant_Selector                                        0     0      0    5885
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Pant_Menu                                            0     0      0    5885
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Antirrebote                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0    6727
                                              2 BANK0     20    20      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     592
                                              5 COMMON     4     3      1
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (2) _MEF_Subest_Actualizacion                             2     2      0    6475
                                              2 BANK0      2     2      0
                         _Pant_Modos
 ---------------------------------------------------------------------------------
 (3) _Pant_Modos                                           0     0      0    6475
                          _LCD_array
                           _LCD_date
                             _LCD_xy
 ---------------------------------------------------------------------------------
 (4) _LCD_xy                                               4     0      4     414
                                              5 COMMON     4     0      4
                        _LCD_command
 ---------------------------------------------------------------------------------
 (4) _LCD_array                                            7     2      5    5885
                                              5 COMMON     5     0      5
                                              0 BANK0      2     2      0
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (5) _LCD_date                                             3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     222
                                              5 COMMON     3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (5) _LCD_command                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                         _Task_Ready
 ---------------------------------------------------------------------------------
 (7) _Task_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _MEF_Subest_Actualizacion
       _Pant_Modos
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_date
         _LCD_xy
           _LCD_command
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
     _Select_Modo
       _Antirrebote
       _Pant_Menu
         _LCD_array
           _LCD_command
           _LCD_date
       _Pant_Selector
         _LCD_array
           _LCD_command
           _LCD_date
   _MEF_Init
   _Pines_Init
   _Pwm_init

 _ISR (ROOT)
   _Task_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49      12        0.0%
ABS                  0      0      49       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Dec 17 17:06:33 2020

                                pc 0002                                 fsr 0004  
                              l141 050C                                l139 050A  
                              l147 0533                                l156 066A  
                              l191 05FB                                l289 05DC  
                              _GIE 005F                                _RB4 0034  
                              u505 003D                                u515 004E  
                              _ISR 0577                                u525 0060  
                              u605 016B                                u535 0073  
                              u615 017E                                u545 00B1  
                              u555 00C4                                u715 060A  
                              u565 00F7                                u575 0108  
                              u585 011A                                u595 012D  
                              fsr0 0004                                indf 0000  
                _MEF_Actualizacion 04DF                         _Delay100ms 007A  
                             ?_ISR 0070                 ?_MEF_Actualizacion 0070  
                             l2231 049D                               l2225 0482  
                             l2227 048B                               l2243 04D4  
                             l2235 04A6                               l2315 05EB  
                             l2237 04B9                               l2229 0494  
                             l2333 064E                               l2325 05FD  
                             l2271 0292                               l2319 05F0  
                             l1561 05BB                               l2337 0652  
                             l1625 0618                               l2353 04F0  
                             l2345 04E0                               l1707 0420  
                             l1563 05C2                               l2275 02B7  
                             l2267 026D                               l2363 04FE  
                             l1557 05AD                               l1573 06B5  
                             l1559 05B4                               l1567 05C9  
                             l2375 0514                               l2481 065C  
                             l2483 05CE                               l2379 0518  
                             l2485 04AB                               l2397 0647  
                             l2479 0522                               STR_1 0330  
                             STR_2 031B                               STR_3 0306  
                             STR_4 0330                               STR_5 038F  
                             STR_6 0319                               STR_7 038F  
                             STR_8 0319                               STR_9 038F  
                     ?_LCD_command 0070                               u2007 047B  
                             u2017 0087                               u2027 008F  
                             u2037 00D8                               u2047 00E0  
                             u2057 00E7                               u1720 01AF  
                             u1730 01CA                               u1907 0192  
                             u1917 0199                               u1927 019F  
                             u1937 041B                               u1857 06B9  
                             u1947 042A                               u1867 022B  
                             _PEIE 005E                               u1957 043E  
                             u1877 04CB                               u1967 044B  
                             u1887 0141                               u1977 0458  
                             u1897 0149                               u1987 0463  
                             u1997 046E                               i1l90 05A5  
                             _TMR1 000E                               _Modo 0039  
                             _main 062D                               btemp 007E  
              ??_MEF_Actualizacion 0051                               start 000C  
               __size_of_LCD_array 005E                      _Estado_Actual 0037  
                            ??_ISR 0070                __end_of_Antirrebote 06C8  
                 __end_of_LCD_date 01A5                   __end_of_LCD_init 0481  
                 __end_of_MEF_Init 06F0                              ?_main 0070  
                            STR_10 0319                              STR_11 038F  
                            STR_12 0319                              STR_20 0372  
                            STR_21 0370                              STR_13 038F  
                            STR_22 0365                              STR_14 0357  
                            STR_23 0391                              STR_15 038A  
                            STR_16 037A                              STR_17 0345  
                            STR_18 0380                              STR_19 0385  
                    _LCD_character 0606          __end_of_MEF_Actualizacion 0534  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISB 0086  
                            _TRISC 0087                      ??_Pant_Inicio 003D  
                            _PwmS1 0032             __size_of_Pant_Selector 0095  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 064D                         _Pant_Modos 0393  
                   ?_LCD_character 0075                             ??_main 007A  
                    ??_Select_Modo 007A                  __end_of_LCD_array 04DF  
                 __end_of_Pwm_init 0685                         _Pines_Init 069F  
                           i1l1925 0588                             i1l1783 0691  
                           i1l1935 0598                             i1l1929 0592  
                           i1l1939 05A0                __end_of_Pant_Inicio 0247  
                           _LCD_xy 05AC                             _TMR1IE 0460  
                           _TMR1IF 0060                         _Task_Ready 0685  
                           _TMR1ON 0080                             _TRISB4 0434  
                 Pant_Inicio@F1250 0020                   Pant_Inicio@F1248 0053  
               __size_of_Pant_Menu 0043                        _Antirrebote 06B5  
       ??_MEF_Subest_Actualizacion 003D                   _Subestado_Actual 0036  
                    _Pant_Selector 0247                       LCD_date@date 0074  
       __size_of_MEF_Actualizacion 0055                       __pdataCOMMON 007A  
                           saved_w 007E                __end_of_Select_Modo 0606  
          __end_of__initialization 002F               __size_of_LCD_command 00BA  
                        ?_LCD_date 0070                          ?_LCD_init 0070  
                        ?_MEF_Init 0070                     ?_Pant_Selector 0070  
                   __pcstackCOMMON 0070                       __pidataBANK0 06D9  
                  ??_LCD_character 0076                          LCD_init@i 0077  
                      ?_Pant_Modos 0070                  __end_of_Pant_Menu 0577  
                      _Pant_Inicio 01A5                        ?_Pines_Init 0070  
                       __pbssBANK0 0020                            ?_LCD_xy 0075  
                      ?_Task_Ready 0070                         ??_LCD_date 0072  
                          LCD_xy@x 0075                            LCD_xy@y 0077  
                       ??_LCD_init 0075                         ??_MEF_Init 0072  
                       __pmaintext 062D                          ?_Pwm_init 0070  
                       __pintentry 0004                        _Select_Modo 05DD  
                       __stringtab 0300                    __size_of_LCD_xy 0031  
              __size_of_Pant_Modos 0078                    ??_Pant_Selector 007A  
                          _Mostrar 0038                         ??_Pwm_init 0072  
                        _ANSELbits 0188                __size_of_Pines_Init 0016  
                          __ptext1 066B                            __ptext2 069F  
                          __ptext3 06EB                            __ptext4 04DF  
                          __ptext5 05DD                            __ptext6 0247  
                          __ptext7 0534                            __ptext8 06B5  
                          __ptext9 01A5                __size_of_Task_Ready 001A  
             Pant_Inicio@caracter1 0041                       __size_of_ISR 0035  
                        _T1CONbits 0010                            clrloop0 06E4  
             end_of_initialization 002F                          _LCD_array 0481  
                     ?_Antirrebote 0070                          _PORTBbits 0006  
                        _PORTCbits 0007                      LCD_array@date 0079  
                        _TRISAbits 0085                          _TRISCbits 0087  
                        _Act_PwmS1 003A                         ?_LCD_array 0075  
                   __end_of_LCD_xy 05DD                  __size_of_LCD_date 00B8  
                __size_of_LCD_init 0076                  __size_of_MEF_Init 0005  
                    __pidataCOMMON 06F0                       ??_Pant_Modos 007A  
                       LCD_array@x 0075                         LCD_array@y 0077  
              start_initialization 000F                       ?_Pant_Inicio 0070  
__size_of_MEF_Subest_Actualizacion 001E                        __end_of_ISR 05AC  
        ?_MEF_Subest_Actualizacion 0070                          _Pant_Menu 0534  
                    ??_LCD_command 0072                          _Per_PwmS1 002B  
                     ??_Pines_Init 0072                           ??_LCD_xy 0079  
                     ??_Task_Ready 0070                 __end_of_Pant_Modos 040B  
                        _Tempo_WDT 005B                         init_fetch0 06C8  
                      __pdataBANK0 0053                  __size_of_Pwm_init 001A  
            __end_of_LCD_character 062D                 __end_of_Pines_Init 06B5  
               __end_of_Task_Ready 069F                       ?_Select_Modo 0070  
                        ___latbits 0002                      __pcstackBANK0 003B  
                       ?_Pant_Menu 0070                        ??_LCD_array 003B  
              __end_of_LCD_command 00ED               __size_of_Antirrebote 0013  
                        __pstrings 0300                          _freqPwmS1 0034  
              Pant_Inicio@caracter 0049                  interrupt_function 0004  
              LCD_character@adress 0077                           _LCD_date 00ED  
                         _LCD_init 040B                           _MEF_Init 06EB  
                        clear_ram0 06E3              __end_of_Pant_Selector 02DC  
                         _PER_T_S1 002E                        __stringbase 0305  
                         _P_W_T_S1 0030               __size_of_Pant_Inicio 00A2  
                      ??_Pant_Menu 007A                        _LCD_command 0033  
                         _Pw_PwmS1 0028   __end_of_MEF_Subest_Actualizacion 066B  
                         _Pwm_init 066B                 __end_of__stringtab 0306  
                       _ANSELHbits 0189                           __ptext10 0606  
                         __ptext11 064D                           __ptext12 0393  
                         __ptext13 05AC                           __ptext14 0481  
                         __ptext15 00ED                           __ptext16 040B  
                         __ptext17 0033                           __ptext18 0577  
                         __ptext19 0685               __size_of_Select_Modo 0029  
                    __size_of_main 0020              LCD_character@caracter 0075  
                   LCD_character@i 0078                           init_ram0 06CC  
                         intlevel1 0000                          stringcode 0300  
         _MEF_Subest_Actualizacion 064D                           stringdir 0300  
                         stringtab 0300                         _WDTCONbits 0105  
           __size_of_LCD_character 0027                      ??_Antirrebote 0072  
                   LCD_command@cmd 0074  
