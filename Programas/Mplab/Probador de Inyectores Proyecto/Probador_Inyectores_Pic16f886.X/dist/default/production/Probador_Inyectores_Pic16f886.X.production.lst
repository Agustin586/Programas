

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 16 16:06:50 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 09/04/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F886 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001D                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  0081                     	;# 
   399  0085                     	;# 
   400  0086                     	;# 
   401  0087                     	;# 
   402  0089                     	;# 
   403  008C                     	;# 
   404  008D                     	;# 
   405  008E                     	;# 
   406  008F                     	;# 
   407  0090                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0093                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  0105                     	;# 
   426  0107                     	;# 
   427  0108                     	;# 
   428  0109                     	;# 
   429  010C                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  010F                     	;# 
   434  0185                     	;# 
   435  0187                     	;# 
   436  0188                     	;# 
   437  0189                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440                           
   441                           	psect	idataBANK0
   442  0460                     __pidataBANK0:
   443                           
   444                           ;initializer for Pant_Inicio@F1230
   445  0460  3406               	retlw	6
   446  0461  3409               	retlw	9
   447  0462  3409               	retlw	9
   448  0463  3406               	retlw	6
   449  0464  3400               	retlw	0
   450  0465  3400               	retlw	0
   451  0466  3400               	retlw	0
   452  0467  3400               	retlw	0
   453  0007                     _PORTCbits	set	7
   454  0006                     _PORTBbits	set	6
   455  0007                     _PORTC	set	7
   456  0006                     _PORTB	set	6
   457  0005                     _PORTA	set	5
   458  0035                     _RB5	set	53
   459  0060                     _TMR1IF	set	96
   460  0087                     _TRISCbits	set	135
   461  0087                     _TRISC	set	135
   462  0086                     _TRISB	set	134
   463  0085                     _TRISAbits	set	133
   464  0435                     _TRISB5	set	1077
   465  0460                     _TMR1IE	set	1120
   466  0105                     _WDTCONbits	set	261
   467  0188                     _ANSELbits	set	392
   468  0189                     _ANSELHbits	set	393
   469  0C4D                     _ANS13	set	3149
   470                           
   471                           	psect	strings
   472  0003                     __pstrings:
   473  0003                     stringtab:
   474  0003                     __stringtab:
   475  0003                     stringcode:	
   476                           ;	String table - string pointers are 1 byte each
   477                           
   478  0003                     stringdir:
   479  0003  3000               	movlw	high stringdir
   480  0004  008A               	movwf	10
   481  0005  0804               	movf	4,w
   482  0006  0A84               	incf	4,f
   483  0007  0782               	addwf	2,f
   484  0008                     __stringbase:
   485  0008  3400               	retlw	0
   486  0009                     __end_of__stringtab:
   487  0009                     STR_3:
   488  0009  3420               	retlw	32	;' '
   489  000A  3420               	retlw	32	;' '
   490  000B  3420               	retlw	32	;' '
   491  000C  3444               	retlw	68	;'D'
   492  000D  3445               	retlw	69	;'E'
   493  000E  3420               	retlw	32	;' '
   494  000F  3449               	retlw	73	;'I'
   495  0010  344E               	retlw	78	;'N'
   496  0011  3459               	retlw	89	;'Y'
   497  0012  3445               	retlw	69	;'E'
   498  0013  3443               	retlw	67	;'C'
   499  0014  3454               	retlw	84	;'T'
   500  0015  344F               	retlw	79	;'O'
   501  0016  3452               	retlw	82	;'R'
   502  0017  3445               	retlw	69	;'E'
   503  0018  3453               	retlw	83	;'S'
   504  0019  3420               	retlw	32	;' '
   505  001A  3420               	retlw	32	;' '
   506  001B  3420               	retlw	32	;' '
   507  001C  3420               	retlw	32	;' '
   508  001D  3400               	retlw	0
   509  001E                     STR_2:
   510  001E  3450               	retlw	80	;'P'
   511  001F  3452               	retlw	82	;'R'
   512  0020  344F               	retlw	79	;'O'
   513  0021  3442               	retlw	66	;'B'
   514  0022  3441               	retlw	65	;'A'
   515  0023  3444               	retlw	68	;'D'
   516  0024  344F               	retlw	79	;'O'
   517  0025  3452               	retlw	82	;'R'
   518  0026  3420               	retlw	32	;' '
   519  0027  3441               	retlw	65	;'A'
   520  0028  3455               	retlw	85	;'U'
   521  0029  3454               	retlw	84	;'T'
   522  002A  344F               	retlw	79	;'O'
   523  002B  344D               	retlw	77	;'M'
   524  002C  344F               	retlw	79	;'O'
   525  002D  3454               	retlw	84	;'T'
   526  002E  3452               	retlw	82	;'R'
   527  002F  3449               	retlw	73	;'I'
   528  0030  345A               	retlw	90	;'Z'
   529  0031  3420               	retlw	32	;' '
   530  0032  3400               	retlw	0
   531  0033                     STR_1:
   532  0033  343D               	retlw	61	;'='
   533  0034  343D               	retlw	61	;'='
   534  0035  343D               	retlw	61	;'='
   535  0036  343D               	retlw	61	;'='
   536  0037  343D               	retlw	61	;'='
   537  0038  343D               	retlw	61	;'='
   538  0039  343D               	retlw	61	;'='
   539  003A  343D               	retlw	61	;'='
   540  003B  343D               	retlw	61	;'='
   541  003C  343D               	retlw	61	;'='
   542  003D  343D               	retlw	61	;'='
   543  003E  343D               	retlw	61	;'='
   544  003F  343D               	retlw	61	;'='
   545  0040  343D               	retlw	61	;'='
   546  0041  343D               	retlw	61	;'='
   547  0042  343D               	retlw	61	;'='
   548  0043  343D               	retlw	61	;'='
   549  0044  343D               	retlw	61	;'='
   550  0045  343D               	retlw	61	;'='
   551  0046  343D               	retlw	61	;'='
   552  0047  3400               	retlw	0
   553  0033                     
   554                           	psect	cinit
   555  07E7                     start_initialization:	
   556                           ; #config settings
   557                           
   558  07E7                     __initialization:
   559                           
   560                           ; Initialize objects allocated to BANK0
   561  07E7  1383               	bcf	3,7	;select IRP bank0
   562  07E8  3043               	movlw	low (__pdataBANK0+8)
   563  07E9  00FD               	movwf	btemp+-1
   564  07EA  3004               	movlw	high __pidataBANK0
   565  07EB  00FE               	movwf	btemp
   566  07EC  3060               	movlw	low __pidataBANK0
   567  07ED  00FF               	movwf	btemp+1
   568  07EE  303B               	movlw	low __pdataBANK0
   569  07EF  0084               	movwf	4
   570  07F0  120A  118A  246C   	fcall	init_ram0
   571                           
   572                           ; Clear objects allocated to BANK0
   573  07F3  01B2               	clrf	__pbssBANK0& (0+127)
   574  07F4  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   575  07F5  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   576  07F6  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   577  07F7  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   578  07F8  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   579  07F9  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   580  07FA  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   581  07FB  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   582  07FC                     end_of_initialization:	
   583                           ;End of C runtime variable initialization code
   584                           
   585  07FC                     __end_of__initialization:
   586  07FC  0183               	clrf	3
   587  07FD  120A  118A  2CA3   	ljmp	_main	;jump to C main() function
   588                           
   589                           	psect	bssBANK0
   590  0032                     __pbssBANK0:
   591  0032                     Pant_Inicio@F1232:
   592  0032                     	ds	8
   593  003A                     _Estado_Actual:
   594  003A                     	ds	1
   595                           
   596                           	psect	dataBANK0
   597  003B                     __pdataBANK0:
   598  003B                     Pant_Inicio@F1230:
   599  003B                     	ds	8
   600                           
   601                           	psect	inittext
   602  0468                     init_fetch0:	
   603                           ;	Called with low address in FSR and high address in W
   604                           
   605  0468  087E               	movf	126,w
   606  0469  008A               	movwf	10
   607  046A  087F               	movf	127,w
   608  046B  0082               	movwf	2
   609  046C                     init_ram0:	
   610                           ;Called with:
   611                           ;	high address of idata address in btemp 
   612                           ;	low address of idata address in btemp+1 
   613                           ;	low address of data in FSR
   614                           ;	high address + 1 of data in btemp-1
   615                           
   616  046C  2468  120A  118A   	fcall	init_fetch0
   617  046F  0080               	movwf	0
   618  0470  0A84               	incf	4,f
   619  0471  0804               	movf	4,w
   620  0472  067D               	xorwf	125,w
   621  0473  1903               	btfsc	3,2
   622  0474  3400               	retlw	0
   623  0475  0AFF               	incf	127,f
   624  0476  1903               	btfsc	3,2
   625  0477  0AFE               	incf	126,f
   626  0478  2C6C               	goto	init_ram0
   627                           
   628                           	psect	cstackCOMMON
   629  0070                     __pcstackCOMMON:
   630  0070                     ?_Pines_Init:
   631  0070                     ??_Pines_Init:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_MEF_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_MEF_Init:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LCD_init:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_MEF_Actualizacion:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Pant_Inicio:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LCD_command:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_LCD_command:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_main:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_Antirrebote:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_Antirrebote:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_LCD_date:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_LCD_date:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	2
   673  0072                     LCD_command@cmd:
   674  0072                     LCD_date@date:	
   675                           ; 1 bytes @ 0x2
   676                           
   677                           
   678                           ; 1 bytes @ 0x2
   679  0072                     	ds	1
   680  0073                     ??_LCD_init:
   681  0073                     ?_LCD_character:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ?_LCD_array:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     LCD_character@caracter:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     LCD_array@x:	
   691                           ; 1 bytes @ 0x3
   692                           
   693                           
   694                           ; 2 bytes @ 0x3
   695  0073                     	ds	1
   696  0074                     ??_LCD_character:
   697                           
   698                           ; 1 bytes @ 0x4
   699  0074                     	ds	1
   700  0075                     LCD_init@i:
   701  0075                     LCD_character@adress:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     LCD_array@y:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 2 bytes @ 0x5
   709  0075                     	ds	1
   710  0076                     LCD_character@i:
   711                           
   712                           ; 1 bytes @ 0x6
   713  0076                     	ds	1
   714  0077                     LCD_array@date:
   715                           
   716                           ; 1 bytes @ 0x7
   717  0077                     	ds	1
   718  0078                     ??_LCD_array:
   719                           
   720                           ; 1 bytes @ 0x8
   721  0078                     	ds	2
   722  007A                     ??_Pant_Inicio:
   723                           
   724                           ; 1 bytes @ 0xA
   725  007A                     	ds	4
   726  007E                     ??_main:
   727                           
   728                           	psect	cstackBANK0
   729  0020                     __pcstackBANK0:	
   730                           ; 1 bytes @ 0xE
   731                           
   732  0020                     Pant_Inicio@caracter1:
   733                           
   734                           ; 8 bytes @ 0x0
   735  0020                     	ds	8
   736  0028                     Pant_Inicio@caracter:
   737                           
   738                           ; 8 bytes @ 0x8
   739  0028                     	ds	8
   740  0030                     ??_MEF_Actualizacion:
   741                           
   742                           ; 1 bytes @ 0x10
   743  0030                     	ds	2
   744                           
   745                           	psect	maintext
   746  04A3                     __pmaintext:	
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 22 in file "Main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 300/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels required when called:    4
   772 ;; This function calls:
   773 ;;		_LCD_init
   774 ;;		_MEF_Actualizacion
   775 ;;		_MEF_Init
   776 ;;		_Pines_Init
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  04A3                     _main:
   785                           
   786                           ;Main.c: 25:     Pines_Init();
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   790  04A3  120A  118A  248C  120A  118A  	fcall	_Pines_Init
   791                           
   792                           ;Main.c: 26:     MEF_Init();
   793  04A8  120A  118A  245E  120A  118A  	fcall	_MEF_Init
   794                           
   795                           ;Main.c: 27:     LCD_init();
   796  04AD  120A  118A  2573  120A  118A  	fcall	_LCD_init
   797                           
   798                           ;Main.c: 30:     WDTCONbits.SWDTEN = 1;
   799  04B2  1283               	bcf	3,5	;RP0=0, select bank2
   800  04B3  1703               	bsf	3,6	;RP1=1, select bank2
   801  04B4  1405               	bsf	5,0	;volatile
   802                           
   803                           ;Main.c: 31:     WDTCONbits.WDTPS = 0b1010;
   804  04B5  0805               	movf	5,w	;volatile
   805  04B6  39E1               	andlw	-31
   806  04B7  3814               	iorlw	20
   807  04B8  0085               	movwf	5	;volatile
   808  04B9  0064               	clrwdt	;# 
   809                           
   810                           ;Main.c: 34:     TMR1IE=1,TMR1IF=1;
   811  04BA  1683               	bsf	3,5	;RP0=1, select bank1
   812  04BB  1303               	bcf	3,6	;RP1=0, select bank1
   813  04BC  140C               	bsf	12,0	;volatile
   814  04BD  1283               	bcf	3,5	;RP0=0, select bank0
   815  04BE  140C               	bsf	12,0	;volatile
   816  04BF                     l1239:
   817                           
   818                           ;Main.c: 37:     {;Main.c: 38:         MEF_Actualizacion();
   819  04BF  120A  118A  24EC  120A  118A  	fcall	_MEF_Actualizacion
   820  04C4  2CBF               	goto	l1239
   821  04C5                     __end_of_main:
   822                           
   823                           	psect	text1
   824  048C                     __ptext1:	
   825 ;; *************** function _Pines_Init *****************
   826 ;; Defined at:
   827 ;;		line 44 in file "Main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2
   836 ;; Tracked objects:
   837 ;;		On entry : B00/0
   838 ;;		On exit  : B00/0
   839 ;;		Unchanged: 800/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _Pines_Init
   856  048C                     _Pines_Init:
   857                           
   858                           ;Main.c: 47:     TRISAbits.TRISA5 = 0;
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _Pines_Init: [wreg+status,2]
   862  048C  1683               	bsf	3,5	;RP0=1, select bank1
   863  048D  1285               	bcf	5,5	;volatile
   864                           
   865                           ;Main.c: 48:     PORTA = 0;
   866  048E  1283               	bcf	3,5	;RP0=0, select bank0
   867  048F  0185               	clrf	5	;volatile
   868                           
   869                           ;Main.c: 49:     PORTB = 0;
   870  0490  0186               	clrf	6	;volatile
   871                           
   872                           ;Main.c: 50:     PORTC = 0;
   873  0491  0187               	clrf	7	;volatile
   874                           
   875                           ;Main.c: 51:     TRISB = 0xFF;
   876  0492  30FF               	movlw	255
   877  0493  1683               	bsf	3,5	;RP0=1, select bank1
   878  0494  0086               	movwf	6	;volatile
   879                           
   880                           ;Main.c: 52:     TRISC = 0x00;
   881  0495  0187               	clrf	7	;volatile
   882                           
   883                           ;Main.c: 53:     ANSELHbits.ANS12 = 0;
   884  0496  1703               	bsf	3,6	;RP1=1, select bank3
   885  0497  1209               	bcf	9,4	;volatile
   886                           
   887                           ;Main.c: 54:     ANSELHbits.ANS11 = 0;
   888  0498  1189               	bcf	9,3	;volatile
   889                           
   890                           ;Main.c: 55:     ANSELHbits.ANS10 = 0;
   891  0499  1109               	bcf	9,2	;volatile
   892                           
   893                           ;Main.c: 56:     ANSELHbits.ANS8 = 0;
   894  049A  1009               	bcf	9,0	;volatile
   895                           
   896                           ;Main.c: 57:     ANSELHbits.ANS9 = 0;
   897  049B  1089               	bcf	9,1	;volatile
   898                           
   899                           ;Main.c: 58:     ANSELbits.ANS4 = 0;
   900  049C  1208               	bcf	8,4	;volatile
   901                           
   902                           ;Main.c: 60:     ANS13 = 0;
   903  049D  1289               	bcf	9,5	;volatile
   904                           
   905                           ;Main.c: 61:     TRISB5 = 0;
   906  049E  1303               	bcf	3,6	;RP1=0, select bank1
   907  049F  1286               	bcf	6,5	;volatile
   908                           
   909                           ;Main.c: 62:     RB5 = 0;
   910  04A0  1283               	bcf	3,5	;RP0=0, select bank0
   911  04A1  1286               	bcf	6,5	;volatile
   912  04A2  0008               	return
   913  04A3                     __end_of_Pines_Init:
   914                           
   915                           	psect	text2
   916  045E                     __ptext2:	
   917 ;; *************** function _MEF_Init *****************
   918 ;; Defined at:
   919 ;;		line 23 in file "MEF.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		status,2
   928 ;; Tracked objects:
   929 ;;		On entry : B00/0
   930 ;;		On exit  : B00/0
   931 ;;		Unchanged: 800/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _MEF_Init
   948  045E                     _MEF_Init:
   949                           
   950                           ;MEF.c: 25:     Estado_Actual = ESTADO_INICIO;
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _MEF_Init: [status,2]
   954  045E  01BA               	clrf	_Estado_Actual
   955  045F  0008               	return
   956  0460                     __end_of_MEF_Init:
   957                           
   958                           	psect	text3
   959  04EC                     __ptext3:	
   960 ;; *************** function _MEF_Actualizacion *****************
   961 ;; Defined at:
   962 ;;		line 30 in file "MEF.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 300/0
   973 ;;		On exit  : 300/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0
   978 ;;      Temps:          0       2       0       0       0
   979 ;;      Totals:         0       2       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    3
   983 ;; This function calls:
   984 ;;		_Antirrebote
   985 ;;		_Pant_Inicio
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _MEF_Actualizacion
   993  04EC                     _MEF_Actualizacion:
   994                           
   995                           ;MEF.c: 32:     switch(Estado_Actual)
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   999  04EC  2D07               	goto	l1219
  1000  04ED                     l1201:
  1001                           
  1002                           ;MEF.c: 35:         {;MEF.c: 36:             Pant_Inicio();
  1003  04ED  120A  118A  25E7   	fcall	_Pant_Inicio
  1004                           
  1005                           ;MEF.c: 37:             Estado_Actual = ESTADO_MENU;
  1006  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1007  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1008  04F2  01BA               	clrf	_Estado_Actual
  1009  04F3  0ABA               	incf	_Estado_Actual,f
  1010                           
  1011                           ;MEF.c: 38:         break;
  1012  04F4  0008               	return
  1013  04F5                     l74:	
  1014                           ;MEF.c: 39:         };MEF.c: 40:         case ESTADO_MENU:
  1015                           
  1016                           
  1017                           ;MEF.c: 41:         {;MEF.c: 45:             if(PORTBbits.RB1) Estado_Actual = ESTADO_MO
      +                          DO_PULV,Antirrebote();
  1018  04F5  1C86               	btfss	6,1	;volatile
  1019  04F6  2D01               	goto	l75
  1020  04F7  3002               	movlw	2
  1021  04F8  2CFA               	goto	L1
  1022  04F9                     l1209:
  1023  04F9  3006               	movlw	6
  1024  04FA                     L1:
  1025  04FA  00FF               	movwf	127
  1026  04FB  087F               	movf	127,w
  1027  04FC  00BA               	movwf	_Estado_Actual
  1028  04FD  120A  118A  2479   	fcall	_Antirrebote
  1029  0500  0008               	return
  1030  0501                     l75:	
  1031                           ;MEF.c: 46:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FUGA,Antirreb
      +                          ote();
  1032                           
  1033  0501  1886               	btfsc	6,1	;volatile
  1034  0502  2CF9               	goto	l1209
  1035                           
  1036                           ;MEF.c: 47:             else if(PORTBbits.RB1) Estado_Actual = ESTADO_MODO_FLUJO,Antirre
      +                          bote();
  1037  0503  1C86               	btfss	6,1	;volatile
  1038  0504  0008               	return
  1039  0505  3007               	movlw	7
  1040  0506  2CFA               	goto	L1
  1041  0507                     l1219:	
  1042                           ;MEF.c: 48:         break;
  1043                           
  1044  0507  083A               	movf	_Estado_Actual,w
  1045  0508  00B0               	movwf	??_MEF_Actualizacion
  1046  0509  01B1               	clrf	??_MEF_Actualizacion+1
  1047                           
  1048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1049                           ; Switch size 1, requested type "simple"
  1050                           ; Number of cases is 1, Range of values is 0 to 0
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte            4     3 (average)
  1054                           ; direct_byte           11     8 (fixed)
  1055                           ; jumptable            260     6 (fixed)
  1056                           ;	Chosen strategy is simple_byte
  1057  050A  0831               	movf	??_MEF_Actualizacion+1,w
  1058  050B  3A00               	xorlw	0	; case 0
  1059  050C  1903               	skipnz
  1060  050D  2D0F               	goto	l1281
  1061  050E  2D17               	goto	l80
  1062  050F                     l1281:
  1063                           
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 2, Range of values is 0 to 1
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte            7     4 (average)
  1069                           ; direct_byte           14     8 (fixed)
  1070                           ; jumptable            260     6 (fixed)
  1071                           ;	Chosen strategy is simple_byte
  1072  050F  0830               	movf	??_MEF_Actualizacion,w
  1073  0510  3A00               	xorlw	0	; case 0
  1074  0511  1903               	skipnz
  1075  0512  2CED               	goto	l1201
  1076  0513  3A01               	xorlw	1	; case 1
  1077  0514  1903               	skipnz
  1078  0515  2CF5               	goto	l74
  1079  0516  2D17               	goto	l80
  1080  0517                     l80:
  1081  0517  0008               	return
  1082  0518                     __end_of_MEF_Actualizacion:
  1083                           
  1084                           	psect	text4
  1085  05E7                     __ptext4:	
  1086 ;; *************** function _Pant_Inicio *****************
  1087 ;; Defined at:
  1088 ;;		line 4 in file "Display_Lcd.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  caracter        8    8[BANK0 ] unsigned char [8]
  1093 ;;  caracter1       8    0[BANK0 ] unsigned char [8]
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 300/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0      16       0       0       0
  1105 ;;      Temps:          4       0       0       0       0
  1106 ;;      Totals:         4      16       0       0       0
  1107 ;;Total ram usage:       20 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    2
  1110 ;; This function calls:
  1111 ;;		_LCD_array
  1112 ;;		_LCD_character
  1113 ;;		_LCD_command
  1114 ;; This function is called by:
  1115 ;;		_MEF_Actualizacion
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _Pant_Inicio
  1121  05E7                     _Pant_Inicio:
  1122                           
  1123                           ;Display_Lcd.c: 7:     char caracter1[8] =
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1127  05E7  3020               	movlw	Pant_Inicio@caracter1& (0+255)
  1128  05E8  0084               	movwf	4
  1129  05E9  303B               	movlw	low Pant_Inicio@F1230
  1130  05EA  00FA               	movwf	??_Pant_Inicio
  1131  05EB  0804               	movf	4,w
  1132  05EC  00FB               	movwf	??_Pant_Inicio+1
  1133  05ED  3008               	movlw	8
  1134  05EE  00FC               	movwf	??_Pant_Inicio+2
  1135  05EF                     u450:
  1136  05EF  087A               	movf	??_Pant_Inicio,w
  1137  05F0  0084               	movwf	4
  1138  05F1  1383               	bcf	3,7	;select IRP bank0
  1139  05F2  0800               	movf	0,w
  1140  05F3  00FD               	movwf	??_Pant_Inicio+3
  1141  05F4  0AFA               	incf	??_Pant_Inicio,f
  1142  05F5  087B               	movf	??_Pant_Inicio+1,w
  1143  05F6  0084               	movwf	4
  1144  05F7  087D               	movf	??_Pant_Inicio+3,w
  1145  05F8  0080               	movwf	0
  1146  05F9  0AFB               	incf	??_Pant_Inicio+1,f
  1147  05FA  0BFC               	decfsz	??_Pant_Inicio+2,f
  1148  05FB  2DEF               	goto	u450
  1149                           
  1150                           ;Display_Lcd.c: 18:     LCD_character(0x01,caracter1);
  1151  05FC  3020               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  1152  05FD  00FF               	movwf	127
  1153  05FE  087F               	movf	127,w
  1154  05FF  00F3               	movwf	LCD_character@caracter
  1155  0600  3001               	movlw	1
  1156  0601  120A  118A  24C5  120A  118A  	fcall	_LCD_character
  1157                           
  1158                           ;Display_Lcd.c: 21:     char caracter[8] = {0,0,0,0,0,0,0,0};
  1159  0606  3028               	movlw	Pant_Inicio@caracter& (0+255)
  1160  0607  0084               	movwf	4
  1161  0608  3008               	movlw	8
  1162  0609  00FF               	movwf	127
  1163  060A                     u460:
  1164  060A  1383               	bcf	3,7	;select IRP bank0
  1165  060B  0180               	clrf	0
  1166  060C  0A84               	incf	4,f
  1167  060D  0BFF               	decfsz	127,f
  1168  060E  2E0A               	goto	u460
  1169                           
  1170                           ;Display_Lcd.c: 22:     LCD_character(0x00,caracter);
  1171  060F  3028               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  1172  0610  00FF               	movwf	127
  1173  0611  087F               	movf	127,w
  1174  0612  00F3               	movwf	LCD_character@caracter
  1175  0613  3000               	movlw	0
  1176  0614  120A  118A  24C5  120A  118A  	fcall	_LCD_character
  1177                           
  1178                           ;Display_Lcd.c: 25:     LCD_command(0x01);
  1179  0619  3001               	movlw	1
  1180  061A  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1181                           
  1182                           ;Display_Lcd.c: 26:     LCD_array(1,1,"====================");
  1183  061F  3001               	movlw	1
  1184  0620  00F3               	movwf	LCD_array@x
  1185  0621  3000               	movlw	0
  1186  0622  00F4               	movwf	LCD_array@x+1
  1187  0623  3001               	movlw	1
  1188  0624  00F5               	movwf	LCD_array@y
  1189  0625  3000               	movlw	0
  1190  0626  00F6               	movwf	LCD_array@y+1
  1191  0627  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1192  0628  00FF               	movwf	127
  1193  0629  087F               	movf	127,w
  1194  062A  00F7               	movwf	LCD_array@date
  1195  062B  120A  118A  2518  120A  118A  	fcall	_LCD_array
  1196                           
  1197                           ;Display_Lcd.c: 27:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  1198  0630  3002               	movlw	2
  1199  0631  00F3               	movwf	LCD_array@x
  1200  0632  3000               	movlw	0
  1201  0633  00F4               	movwf	LCD_array@x+1
  1202  0634  3001               	movlw	1
  1203  0635  00F5               	movwf	LCD_array@y
  1204  0636  3000               	movlw	0
  1205  0637  00F6               	movwf	LCD_array@y+1
  1206  0638  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1207  0639  00FF               	movwf	127
  1208  063A  087F               	movf	127,w
  1209  063B  00F7               	movwf	LCD_array@date
  1210  063C  120A  118A  2518  120A  118A  	fcall	_LCD_array
  1211                           
  1212                           ;Display_Lcd.c: 28:     LCD_array(3,1,"   DE INYECTORES    ");
  1213  0641  3003               	movlw	3
  1214  0642  00F3               	movwf	LCD_array@x
  1215  0643  3000               	movlw	0
  1216  0644  00F4               	movwf	LCD_array@x+1
  1217  0645  3001               	movlw	1
  1218  0646  00F5               	movwf	LCD_array@y
  1219  0647  3000               	movlw	0
  1220  0648  00F6               	movwf	LCD_array@y+1
  1221  0649  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1222  064A  00FF               	movwf	127
  1223  064B  087F               	movf	127,w
  1224  064C  00F7               	movwf	LCD_array@date
  1225  064D  120A  118A  2518  120A  118A  	fcall	_LCD_array
  1226                           
  1227                           ;Display_Lcd.c: 29:     LCD_array(4,1,"====================");
  1228  0652  3004               	movlw	4
  1229  0653  00F3               	movwf	LCD_array@x
  1230  0654  3000               	movlw	0
  1231  0655  00F4               	movwf	LCD_array@x+1
  1232  0656  3001               	movlw	1
  1233  0657  00F5               	movwf	LCD_array@y
  1234  0658  3000               	movlw	0
  1235  0659  00F6               	movwf	LCD_array@y+1
  1236  065A  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1237  065B  00FF               	movwf	127
  1238  065C  087F               	movf	127,w
  1239  065D  00F7               	movwf	LCD_array@date
  1240  065E  120A  118A  2518  120A  118A  	fcall	_LCD_array
  1241                           
  1242                           ;Display_Lcd.c: 30:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  1243  0663  3033               	movlw	51
  1244  0664  00FC               	movwf	??_Pant_Inicio+2
  1245  0665  30BB               	movlw	187
  1246  0666  00FB               	movwf	??_Pant_Inicio+1
  1247  0667  30DF               	movlw	223
  1248  0668  00FA               	movwf	??_Pant_Inicio
  1249  0669                     u517:
  1250  0669  0BFA               	decfsz	??_Pant_Inicio,f
  1251  066A  2E69               	goto	u517
  1252  066B  0BFB               	decfsz	??_Pant_Inicio+1,f
  1253  066C  2E69               	goto	u517
  1254  066D  0BFC               	decfsz	??_Pant_Inicio+2,f
  1255  066E  2E69               	goto	u517
  1256  066F  2E70               	nop2
  1257                           
  1258                           ;Display_Lcd.c: 33:     LCD_command(0x01);
  1259  0670  3001               	movlw	1
  1260  0671  120A  118A  272D   	fcall	_LCD_command
  1261  0674  0008               	return
  1262  0675                     __end_of_Pant_Inicio:
  1263                           
  1264                           	psect	text5
  1265  04C5                     __ptext5:	
  1266 ;; *************** function _LCD_character *****************
  1267 ;; Defined at:
  1268 ;;		line 197 in file "Lcd.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  adress          1    wreg     unsigned char 
  1271 ;;  caracter        1    3[COMMON] PTR unsigned char 
  1272 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  adress          1    5[COMMON] unsigned char 
  1275 ;;  i               1    6[COMMON] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 800/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         1       0       0       0       0
  1286 ;;      Locals:         2       0       0       0       0
  1287 ;;      Temps:          1       0       0       0       0
  1288 ;;      Totals:         4       0       0       0       0
  1289 ;;Total ram usage:        4 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    1
  1292 ;; This function calls:
  1293 ;;		_LCD_command
  1294 ;;		_LCD_date
  1295 ;; This function is called by:
  1296 ;;		_Pant_Inicio
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _LCD_character
  1302  04C5                     _LCD_character:
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1306                           ;LCD_character@adress stored from wreg
  1307  04C5  00F5               	movwf	LCD_character@adress
  1308                           
  1309                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  1310  04C6  0875               	movf	LCD_character@adress,w
  1311  04C7  00F4               	movwf	??_LCD_character
  1312  04C8  3002               	movlw	2
  1313  04C9                     u385:
  1314  04C9  1003               	clrc
  1315  04CA  0DF4               	rlf	??_LCD_character,f
  1316  04CB  3EFF               	addlw	-1
  1317  04CC  1D03               	skipz
  1318  04CD  2CC9               	goto	u385
  1319  04CE  1003               	clrc
  1320  04CF  0D74               	rlf	??_LCD_character,w
  1321  04D0  3E40               	addlw	64
  1322  04D1  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1323                           
  1324                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  1325  04D6  01F6               	clrf	LCD_character@i
  1326  04D7                     l1089:
  1327                           
  1328                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  1329  04D7  0876               	movf	LCD_character@i,w
  1330  04D8  0773               	addwf	LCD_character@caracter,w
  1331  04D9  00F4               	movwf	??_LCD_character
  1332  04DA  0874               	movf	??_LCD_character,w
  1333  04DB  0084               	movwf	4
  1334  04DC  1383               	bcf	3,7	;select IRP bank0
  1335  04DD  0800               	movf	0,w
  1336  04DE  120A  118A  2675  120A  118A  	fcall	_LCD_date
  1337                           
  1338                           ;Lcd.c: 203:     }
  1339  04E3  3001               	movlw	1
  1340  04E4  00FF               	movwf	127
  1341  04E5  087F               	movf	127,w
  1342  04E6  07F6               	addwf	LCD_character@i,f
  1343  04E7  3008               	movlw	8
  1344  04E8  0276               	subwf	LCD_character@i,w
  1345  04E9  1803               	btfsc	3,0
  1346  04EA  0008               	return
  1347  04EB  2CD7               	goto	l1089
  1348  04EC                     __end_of_LCD_character:
  1349                           
  1350                           	psect	text6
  1351  0518                     __ptext6:	
  1352 ;; *************** function _LCD_array *****************
  1353 ;; Defined at:
  1354 ;;		line 137 in file "Lcd.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  x               2    3[COMMON] int 
  1357 ;;  y               2    5[COMMON] int 
  1358 ;;  date            1    7[COMMON] PTR unsigned char 
  1359 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         5       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          2       0       0       0       0
  1374 ;;      Totals:         7       0       0       0       0
  1375 ;;Total ram usage:        7 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    1
  1378 ;; This function calls:
  1379 ;;		_LCD_command
  1380 ;;		_LCD_date
  1381 ;; This function is called by:
  1382 ;;		_Pant_Inicio
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _LCD_array
  1388  0518                     _LCD_array:
  1389                           
  1390                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394  0518  2D3D               	goto	l1107
  1395  0519                     l1097:
  1396  0519  0875               	movf	LCD_array@y,w
  1397  051A  3EFF               	addlw	255
  1398  051B  3880               	iorlw	128
  1399  051C  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1400                           
  1401                           ;Lcd.c: 143:         break;
  1402  0521  2D68               	goto	l1115
  1403  0522                     l1099:
  1404  0522  0875               	movf	LCD_array@y,w
  1405  0523  3E3F               	addlw	63
  1406  0524  3880               	iorlw	128
  1407  0525  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1408                           
  1409                           ;Lcd.c: 145:         break;
  1410  052A  2D68               	goto	l1115
  1411  052B                     l1101:
  1412  052B  0875               	movf	LCD_array@y,w
  1413  052C  3E13               	addlw	19
  1414  052D  3880               	iorlw	128
  1415  052E  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1416                           
  1417                           ;Lcd.c: 147:         break;
  1418  0533  2D68               	goto	l1115
  1419  0534                     l1103:
  1420  0534  0875               	movf	LCD_array@y,w
  1421  0535  3E53               	addlw	83
  1422  0536  3880               	iorlw	128
  1423  0537  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1424                           
  1425                           ;Lcd.c: 149:         break;
  1426  053C  2D68               	goto	l1115
  1427  053D                     l1107:
  1428                           
  1429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 1, Range of values is 0 to 0
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte            4     3 (average)
  1435                           ; direct_byte           11     8 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438  053D  0874               	movf	LCD_array@x+1,w
  1439  053E  3A00               	xorlw	0	; case 0
  1440  053F  1903               	skipnz
  1441  0540  2D42               	goto	l1283
  1442  0541  2D68               	goto	l1115
  1443  0542                     l1283:
  1444                           
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 4, Range of values is 1 to 4
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte           13     7 (average)
  1450                           ; direct_byte           23    11 (fixed)
  1451                           ; jumptable            263     9 (fixed)
  1452                           ;	Chosen strategy is simple_byte
  1453  0542  0873               	movf	LCD_array@x,w
  1454  0543  3A01               	xorlw	1	; case 1
  1455  0544  1903               	skipnz
  1456  0545  2D19               	goto	l1097
  1457  0546  3A03               	xorlw	3	; case 2
  1458  0547  1903               	skipnz
  1459  0548  2D22               	goto	l1099
  1460  0549  3A01               	xorlw	1	; case 3
  1461  054A  1903               	skipnz
  1462  054B  2D2B               	goto	l1101
  1463  054C  3A07               	xorlw	7	; case 4
  1464  054D  1903               	skipnz
  1465  054E  2D34               	goto	l1103
  1466  054F  2D68               	goto	l1115
  1467  0550                     l1109:
  1468                           
  1469                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  1470  0550  0877               	movf	LCD_array@date,w
  1471  0551  0084               	movwf	4
  1472  0552  120A  118A  2003  120A  118A  	fcall	stringdir
  1473  0557  120A  118A  2675  120A  118A  	fcall	_LCD_date
  1474                           
  1475                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  1476  055C  3007               	movlw	7
  1477  055D  00F9               	movwf	??_LCD_array+1
  1478  055E  307D               	movlw	125
  1479  055F  00F8               	movwf	??_LCD_array
  1480  0560                     u527:
  1481  0560  0BF8               	decfsz	??_LCD_array,f
  1482  0561  2D60               	goto	u527
  1483  0562  0BF9               	decfsz	??_LCD_array+1,f
  1484  0563  2D60               	goto	u527
  1485                           
  1486                           ;Lcd.c: 157:         date++;
  1487  0564  3001               	movlw	1
  1488  0565  00FF               	movwf	127
  1489  0566  087F               	movf	127,w
  1490  0567  07F7               	addwf	LCD_array@date,f
  1491  0568                     l1115:
  1492                           
  1493                           ;Lcd.c: 153:     while(*date)
  1494  0568  0877               	movf	LCD_array@date,w
  1495  0569  0084               	movwf	4
  1496  056A  120A  118A  2003  120A  118A  	fcall	stringdir
  1497  056F  3A00               	xorlw	0
  1498  0570  1903               	btfsc	3,2
  1499  0571  0008               	return
  1500  0572  2D50               	goto	l1109
  1501  0573                     __end_of_LCD_array:
  1502                           
  1503                           	psect	text7
  1504  0675                     __ptext7:	
  1505 ;; *************** function _LCD_date *****************
  1506 ;; Defined at:
  1507 ;;		line 88 in file "Lcd.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  date            1    wreg     unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  date            1    2[COMMON] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         1       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0
  1524 ;;      Totals:         3       0       0       0       0
  1525 ;;Total ram usage:        3 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_LCD_array
  1531 ;;		_LCD_character
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _LCD_date
  1537  0675                     _LCD_date:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  1541                           ;LCD_date@date stored from wreg
  1542  0675  00F2               	movwf	LCD_date@date
  1543                           
  1544                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  1545  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0678  1207               	bcf	7,4	;volatile
  1548  0679  1287               	bcf	7,5	;volatile
  1549  067A  1307               	bcf	7,6	;volatile
  1550  067B  1387               	bcf	7,7	;volatile
  1551                           
  1552                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  1553  067C  0872               	movf	LCD_date@date,w
  1554  067D  00F0               	movwf	??_LCD_date
  1555  067E  3004               	movlw	4
  1556  067F                     u325:
  1557  067F  1003               	clrc
  1558  0680  0CF0               	rrf	??_LCD_date,f
  1559  0681  3EFF               	addlw	-1
  1560  0682  1D03               	skipz
  1561  0683  2E7F               	goto	u325
  1562  0684  0870               	movf	??_LCD_date,w
  1563  0685  3901               	andlw	1
  1564  0686  00F1               	movwf	??_LCD_date+1
  1565  0687  0EF1               	swapf	??_LCD_date+1,f
  1566  0688  0807               	movf	7,w	;volatile
  1567  0689  0671               	xorwf	??_LCD_date+1,w
  1568  068A  39EF               	andlw	-17
  1569  068B  0671               	xorwf	??_LCD_date+1,w
  1570  068C  0087               	movwf	7	;volatile
  1571                           
  1572                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  1573  068D  0872               	movf	LCD_date@date,w
  1574  068E  00F0               	movwf	??_LCD_date
  1575  068F  3005               	movlw	5
  1576  0690                     u335:
  1577  0690  1003               	clrc
  1578  0691  0CF0               	rrf	??_LCD_date,f
  1579  0692  3EFF               	addlw	-1
  1580  0693  1D03               	skipz
  1581  0694  2E90               	goto	u335
  1582  0695  0870               	movf	??_LCD_date,w
  1583  0696  3901               	andlw	1
  1584  0697  00F1               	movwf	??_LCD_date+1
  1585  0698  0EF1               	swapf	??_LCD_date+1,f
  1586  0699  0DF1               	rlf	??_LCD_date+1,f
  1587  069A  0807               	movf	7,w	;volatile
  1588  069B  0671               	xorwf	??_LCD_date+1,w
  1589  069C  39DF               	andlw	-33
  1590  069D  0671               	xorwf	??_LCD_date+1,w
  1591  069E  0087               	movwf	7	;volatile
  1592                           
  1593                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  1594  069F  0872               	movf	LCD_date@date,w
  1595  06A0  00F0               	movwf	??_LCD_date
  1596  06A1  3006               	movlw	6
  1597  06A2                     u345:
  1598  06A2  1003               	clrc
  1599  06A3  0CF0               	rrf	??_LCD_date,f
  1600  06A4  3EFF               	addlw	-1
  1601  06A5  1D03               	skipz
  1602  06A6  2EA2               	goto	u345
  1603  06A7  0870               	movf	??_LCD_date,w
  1604  06A8  3901               	andlw	1
  1605  06A9  00F1               	movwf	??_LCD_date+1
  1606  06AA  0EF1               	swapf	??_LCD_date+1,f
  1607  06AB  0DF1               	rlf	??_LCD_date+1,f
  1608  06AC  0DF1               	rlf	??_LCD_date+1,f
  1609  06AD  0807               	movf	7,w	;volatile
  1610  06AE  0671               	xorwf	??_LCD_date+1,w
  1611  06AF  39BF               	andlw	-65
  1612  06B0  0671               	xorwf	??_LCD_date+1,w
  1613  06B1  0087               	movwf	7	;volatile
  1614                           
  1615                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  1616  06B2  0872               	movf	LCD_date@date,w
  1617  06B3  00F0               	movwf	??_LCD_date
  1618  06B4  3007               	movlw	7
  1619  06B5                     u355:
  1620  06B5  1003               	clrc
  1621  06B6  0CF0               	rrf	??_LCD_date,f
  1622  06B7  3EFF               	addlw	-1
  1623  06B8  1D03               	skipz
  1624  06B9  2EB5               	goto	u355
  1625  06BA  0870               	movf	??_LCD_date,w
  1626  06BB  3901               	andlw	1
  1627  06BC  00F1               	movwf	??_LCD_date+1
  1628  06BD  0CF1               	rrf	??_LCD_date+1,f
  1629  06BE  0CF1               	rrf	??_LCD_date+1,f
  1630  06BF  0807               	movf	7,w	;volatile
  1631  06C0  0671               	xorwf	??_LCD_date+1,w
  1632  06C1  397F               	andlw	-129
  1633  06C2  0671               	xorwf	??_LCD_date+1,w
  1634  06C3  0087               	movwf	7	;volatile
  1635                           
  1636                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  1637  06C4  1487               	bsf	7,1	;volatile
  1638                           
  1639                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  1640  06C5  1187               	bcf	7,3	;volatile
  1641                           
  1642                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  1643  06C6  1587               	bsf	7,3	;volatile
  1644                           
  1645                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  1646  06C7  3018               	movlw	24
  1647  06C8  00F0               	movwf	??_LCD_date
  1648  06C9                     u537:
  1649  06C9  0BF0               	decfsz	??_LCD_date,f
  1650  06CA  2EC9               	goto	u537
  1651  06CB  2ECC               	nop2
  1652                           
  1653                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  1654  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1655  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1656  06CE  1187               	bcf	7,3	;volatile
  1657                           
  1658                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  1659  06CF  3018               	movlw	24
  1660  06D0  00F0               	movwf	??_LCD_date
  1661  06D1                     u547:
  1662  06D1  0BF0               	decfsz	??_LCD_date,f
  1663  06D2  2ED1               	goto	u547
  1664  06D3  2ED4               	nop2
  1665                           
  1666                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  1667  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1668  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1669  06D6  1207               	bcf	7,4	;volatile
  1670  06D7  1287               	bcf	7,5	;volatile
  1671  06D8  1307               	bcf	7,6	;volatile
  1672  06D9  1387               	bcf	7,7	;volatile
  1673                           
  1674                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  1675  06DA  0872               	movf	LCD_date@date,w
  1676  06DB  3901               	andlw	1
  1677  06DC  00F0               	movwf	??_LCD_date
  1678  06DD  0EF0               	swapf	??_LCD_date,f
  1679  06DE  0807               	movf	7,w	;volatile
  1680  06DF  0670               	xorwf	??_LCD_date,w
  1681  06E0  39EF               	andlw	-17
  1682  06E1  0670               	xorwf	??_LCD_date,w
  1683  06E2  0087               	movwf	7	;volatile
  1684                           
  1685                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  1686  06E3  0872               	movf	LCD_date@date,w
  1687  06E4  00F0               	movwf	??_LCD_date
  1688  06E5  1003               	clrc
  1689  06E6  0C70               	rrf	??_LCD_date,w
  1690  06E7  3901               	andlw	1
  1691  06E8  00F1               	movwf	??_LCD_date+1
  1692  06E9  0EF1               	swapf	??_LCD_date+1,f
  1693  06EA  0DF1               	rlf	??_LCD_date+1,f
  1694  06EB  0807               	movf	7,w	;volatile
  1695  06EC  0671               	xorwf	??_LCD_date+1,w
  1696  06ED  39DF               	andlw	-33
  1697  06EE  0671               	xorwf	??_LCD_date+1,w
  1698  06EF  0087               	movwf	7	;volatile
  1699                           
  1700                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  1701  06F0  0872               	movf	LCD_date@date,w
  1702  06F1  00F0               	movwf	??_LCD_date
  1703  06F2  3002               	movlw	2
  1704  06F3                     u365:
  1705  06F3  1003               	clrc
  1706  06F4  0CF0               	rrf	??_LCD_date,f
  1707  06F5  3EFF               	addlw	-1
  1708  06F6  1D03               	skipz
  1709  06F7  2EF3               	goto	u365
  1710  06F8  0870               	movf	??_LCD_date,w
  1711  06F9  3901               	andlw	1
  1712  06FA  00F1               	movwf	??_LCD_date+1
  1713  06FB  0EF1               	swapf	??_LCD_date+1,f
  1714  06FC  0DF1               	rlf	??_LCD_date+1,f
  1715  06FD  0DF1               	rlf	??_LCD_date+1,f
  1716  06FE  0807               	movf	7,w	;volatile
  1717  06FF  0671               	xorwf	??_LCD_date+1,w
  1718  0700  39BF               	andlw	-65
  1719  0701  0671               	xorwf	??_LCD_date+1,w
  1720  0702  0087               	movwf	7	;volatile
  1721                           
  1722                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  1723  0703  0872               	movf	LCD_date@date,w
  1724  0704  00F0               	movwf	??_LCD_date
  1725  0705  3003               	movlw	3
  1726  0706                     u375:
  1727  0706  1003               	clrc
  1728  0707  0CF0               	rrf	??_LCD_date,f
  1729  0708  3EFF               	addlw	-1
  1730  0709  1D03               	skipz
  1731  070A  2F06               	goto	u375
  1732  070B  0870               	movf	??_LCD_date,w
  1733  070C  3901               	andlw	1
  1734  070D  00F1               	movwf	??_LCD_date+1
  1735  070E  0CF1               	rrf	??_LCD_date+1,f
  1736  070F  0CF1               	rrf	??_LCD_date+1,f
  1737  0710  0807               	movf	7,w	;volatile
  1738  0711  0671               	xorwf	??_LCD_date+1,w
  1739  0712  397F               	andlw	-129
  1740  0713  0671               	xorwf	??_LCD_date+1,w
  1741  0714  0087               	movwf	7	;volatile
  1742                           
  1743                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  1744  0715  1487               	bsf	7,1	;volatile
  1745                           
  1746                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  1747  0716  1187               	bcf	7,3	;volatile
  1748                           
  1749                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  1750  0717  1587               	bsf	7,3	;volatile
  1751                           
  1752                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  1753  0718  3053               	movlw	83
  1754  0719  00F0               	movwf	??_LCD_date
  1755  071A                     u557:
  1756  071A  0BF0               	decfsz	??_LCD_date,f
  1757  071B  2F1A               	goto	u557
  1758                           
  1759                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  1760  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1761  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1762  071E  1187               	bcf	7,3	;volatile
  1763                           
  1764                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  1765  071F  3053               	movlw	83
  1766  0720  00F0               	movwf	??_LCD_date
  1767  0721                     u567:
  1768  0721  0BF0               	decfsz	??_LCD_date,f
  1769  0722  2F21               	goto	u567
  1770                           
  1771                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1772  0723  3014               	movlw	20
  1773  0724  00F1               	movwf	??_LCD_date+1
  1774  0725  3079               	movlw	121
  1775  0726  00F0               	movwf	??_LCD_date
  1776  0727                     u577:
  1777  0727  0BF0               	decfsz	??_LCD_date,f
  1778  0728  2F27               	goto	u577
  1779  0729  0BF1               	decfsz	??_LCD_date+1,f
  1780  072A  2F27               	goto	u577
  1781  072B  2F2C               	nop2
  1782  072C  0008               	return
  1783  072D                     __end_of_LCD_date:
  1784                           
  1785                           	psect	text8
  1786  0479                     __ptext8:	
  1787 ;; *************** function _Antirrebote *****************
  1788 ;; Defined at:
  1789 ;;		line 67 in file "Main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg
  1798 ;; Tracked objects:
  1799 ;;		On entry : 300/0
  1800 ;;		On exit  : 300/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          2       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_MEF_Actualizacion
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _Antirrebote
  1818  0479                     _Antirrebote:
  1819  0479                     l1121:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _Antirrebote: [wreg]
  1822                           
  1823                           
  1824                           ;Main.c: 69:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1825  0479  3041               	movlw	65
  1826  047A  00F1               	movwf	??_Antirrebote+1
  1827  047B  30EE               	movlw	238
  1828  047C  00F0               	movwf	??_Antirrebote
  1829  047D                     u587:
  1830  047D  0BF0               	decfsz	??_Antirrebote,f
  1831  047E  2C7D               	goto	u587
  1832  047F  0BF1               	decfsz	??_Antirrebote+1,f
  1833  0480  2C7D               	goto	u587
  1834  0481  0000               	nop
  1835                           
  1836                           ;Main.c: 70:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  1837  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0484  1C06               	btfss	6,0	;volatile
  1840  0485  1886               	btfsc	6,1	;volatile
  1841  0486  2C79               	goto	l1121
  1842  0487  1906               	btfsc	6,2	;volatile
  1843  0488  2C79               	goto	l1121
  1844  0489  1D86               	btfss	6,3	;volatile
  1845  048A  0008               	return
  1846  048B  2C79               	goto	l1121
  1847  048C                     __end_of_Antirrebote:
  1848                           
  1849                           	psect	text9
  1850  0573                     __ptext9:	
  1851 ;; *************** function _LCD_init *****************
  1852 ;; Defined at:
  1853 ;;		line 4 in file "Lcd.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  i               1    5[COMMON] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : B00/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         1       0       0       0       0
  1869 ;;      Temps:          2       0       0       0       0
  1870 ;;      Totals:         3       0       0       0       0
  1871 ;;Total ram usage:        3 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    1
  1874 ;; This function calls:
  1875 ;;		_LCD_command
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _LCD_init
  1883  0573                     _LCD_init:
  1884                           
  1885                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1889  0573  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0574  1207               	bcf	7,4	;volatile
  1891  0575  1287               	bcf	7,5	;volatile
  1892  0576  1307               	bcf	7,6	;volatile
  1893  0577  1387               	bcf	7,7	;volatile
  1894                           
  1895                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  1896  0578  1087               	bcf	7,1	;volatile
  1897  0579  1187               	bcf	7,3	;volatile
  1898                           
  1899                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  1900  057A  1107               	bcf	7,2	;volatile
  1901  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1902  057C  1107               	bcf	7,2	;volatile
  1903                           
  1904                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1905  057D  30C3               	movlw	195
  1906  057E  00F4               	movwf	??_LCD_init+1
  1907  057F  30CD               	movlw	205
  1908  0580  00F3               	movwf	??_LCD_init
  1909  0581                     u597:
  1910  0581  0BF3               	decfsz	??_LCD_init,f
  1911  0582  2D81               	goto	u597
  1912  0583  0BF4               	decfsz	??_LCD_init+1,f
  1913  0584  2D81               	goto	u597
  1914                           
  1915                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  1916  0585  01F5               	clrf	LCD_init@i
  1917  0586                     l1171:
  1918                           
  1919                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  1920  0586  3003               	movlw	3
  1921  0587  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1922                           
  1923                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  1924  058C  302E               	movlw	46
  1925  058D  00F4               	movwf	??_LCD_init+1
  1926  058E  3073               	movlw	115
  1927  058F  00F3               	movwf	??_LCD_init
  1928  0590                     u607:
  1929  0590  0BF3               	decfsz	??_LCD_init,f
  1930  0591  2D90               	goto	u607
  1931  0592  0BF4               	decfsz	??_LCD_init+1,f
  1932  0593  2D90               	goto	u607
  1933                           
  1934                           ;Lcd.c: 18:     }
  1935  0594  3001               	movlw	1
  1936  0595  00FF               	movwf	127
  1937  0596  087F               	movf	127,w
  1938  0597  07F5               	addwf	LCD_init@i,f
  1939  0598  3003               	movlw	3
  1940  0599  0275               	subwf	LCD_init@i,w
  1941  059A  1C03               	skipc
  1942  059B  2D86               	goto	l1171
  1943                           
  1944                           ;Lcd.c: 21:  LCD_command(0x33);
  1945  059C  3033               	movlw	51
  1946  059D  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1947                           
  1948                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1949  05A2  30A6               	movlw	166
  1950  05A3  00F3               	movwf	??_LCD_init
  1951  05A4                     u617:
  1952  05A4  0BF3               	decfsz	??_LCD_init,f
  1953  05A5  2DA4               	goto	u617
  1954  05A6  0000               	nop
  1955                           
  1956                           ;Lcd.c: 23:     LCD_command(0x32);
  1957  05A7  3032               	movlw	50
  1958  05A8  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1959                           
  1960                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1961  05AD  3021               	movlw	33
  1962  05AE  00F4               	movwf	??_LCD_init+1
  1963  05AF  3076               	movlw	118
  1964  05B0  00F3               	movwf	??_LCD_init
  1965  05B1                     u627:
  1966  05B1  0BF3               	decfsz	??_LCD_init,f
  1967  05B2  2DB1               	goto	u627
  1968  05B3  0BF4               	decfsz	??_LCD_init+1,f
  1969  05B4  2DB1               	goto	u627
  1970  05B5  0000               	nop
  1971                           
  1972                           ;Lcd.c: 25:  LCD_command(0x28);
  1973  05B6  3028               	movlw	40
  1974  05B7  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1975                           
  1976                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1977  05BC  30A6               	movlw	166
  1978  05BD  00F3               	movwf	??_LCD_init
  1979  05BE                     u637:
  1980  05BE  0BF3               	decfsz	??_LCD_init,f
  1981  05BF  2DBE               	goto	u637
  1982  05C0  0000               	nop
  1983                           
  1984                           ;Lcd.c: 27:  LCD_command(0x0C);
  1985  05C1  300C               	movlw	12
  1986  05C2  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1987                           
  1988                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1989  05C7  30A6               	movlw	166
  1990  05C8  00F3               	movwf	??_LCD_init
  1991  05C9                     u647:
  1992  05C9  0BF3               	decfsz	??_LCD_init,f
  1993  05CA  2DC9               	goto	u647
  1994  05CB  0000               	nop
  1995                           
  1996                           ;Lcd.c: 29:  LCD_command(0x06);
  1997  05CC  3006               	movlw	6
  1998  05CD  120A  118A  272D  120A  118A  	fcall	_LCD_command
  1999                           
  2000                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2001  05D2  30A6               	movlw	166
  2002  05D3  00F3               	movwf	??_LCD_init
  2003  05D4                     u657:
  2004  05D4  0BF3               	decfsz	??_LCD_init,f
  2005  05D5  2DD4               	goto	u657
  2006  05D6  0000               	nop
  2007                           
  2008                           ;Lcd.c: 31:     LCD_command(0x01);
  2009  05D7  3001               	movlw	1
  2010  05D8  120A  118A  272D  120A  118A  	fcall	_LCD_command
  2011                           
  2012                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2013  05DD  3041               	movlw	65
  2014  05DE  00F4               	movwf	??_LCD_init+1
  2015  05DF  30EE               	movlw	238
  2016  05E0  00F3               	movwf	??_LCD_init
  2017  05E1                     u667:
  2018  05E1  0BF3               	decfsz	??_LCD_init,f
  2019  05E2  2DE1               	goto	u667
  2020  05E3  0BF4               	decfsz	??_LCD_init+1,f
  2021  05E4  2DE1               	goto	u667
  2022  05E5  0000               	nop
  2023  05E6  0008               	return
  2024  05E7                     __end_of_LCD_init:
  2025                           
  2026                           	psect	text10
  2027  072D                     __ptext10:	
  2028 ;; *************** function _LCD_command *****************
  2029 ;; Defined at:
  2030 ;;		line 39 in file "Lcd.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  cmd             1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  cmd             1    2[COMMON] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         1       0       0       0       0
  2046 ;;      Temps:          2       0       0       0       0
  2047 ;;      Totals:         3       0       0       0       0
  2048 ;;Total ram usage:        3 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_Pant_Inicio
  2054 ;;		_LCD_init
  2055 ;;		_LCD_array
  2056 ;;		_LCD_character
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _LCD_command
  2062  072D                     _LCD_command:
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  2066                           ;LCD_command@cmd stored from wreg
  2067  072D  00F2               	movwf	LCD_command@cmd
  2068                           
  2069                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2070  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2071  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0730  1207               	bcf	7,4	;volatile
  2073  0731  1287               	bcf	7,5	;volatile
  2074  0732  1307               	bcf	7,6	;volatile
  2075  0733  1387               	bcf	7,7	;volatile
  2076                           
  2077                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  2078  0734  0872               	movf	LCD_command@cmd,w
  2079  0735  00F0               	movwf	??_LCD_command
  2080  0736  3004               	movlw	4
  2081  0737                     u265:
  2082  0737  1003               	clrc
  2083  0738  0CF0               	rrf	??_LCD_command,f
  2084  0739  3EFF               	addlw	-1
  2085  073A  1D03               	skipz
  2086  073B  2F37               	goto	u265
  2087  073C  0870               	movf	??_LCD_command,w
  2088  073D  3901               	andlw	1
  2089  073E  00F1               	movwf	??_LCD_command+1
  2090  073F  0EF1               	swapf	??_LCD_command+1,f
  2091  0740  0807               	movf	7,w	;volatile
  2092  0741  0671               	xorwf	??_LCD_command+1,w
  2093  0742  39EF               	andlw	-17
  2094  0743  0671               	xorwf	??_LCD_command+1,w
  2095  0744  0087               	movwf	7	;volatile
  2096                           
  2097                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  2098  0745  0872               	movf	LCD_command@cmd,w
  2099  0746  00F0               	movwf	??_LCD_command
  2100  0747  3005               	movlw	5
  2101  0748                     u275:
  2102  0748  1003               	clrc
  2103  0749  0CF0               	rrf	??_LCD_command,f
  2104  074A  3EFF               	addlw	-1
  2105  074B  1D03               	skipz
  2106  074C  2F48               	goto	u275
  2107  074D  0870               	movf	??_LCD_command,w
  2108  074E  3901               	andlw	1
  2109  074F  00F1               	movwf	??_LCD_command+1
  2110  0750  0EF1               	swapf	??_LCD_command+1,f
  2111  0751  0DF1               	rlf	??_LCD_command+1,f
  2112  0752  0807               	movf	7,w	;volatile
  2113  0753  0671               	xorwf	??_LCD_command+1,w
  2114  0754  39DF               	andlw	-33
  2115  0755  0671               	xorwf	??_LCD_command+1,w
  2116  0756  0087               	movwf	7	;volatile
  2117                           
  2118                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  2119  0757  0872               	movf	LCD_command@cmd,w
  2120  0758  00F0               	movwf	??_LCD_command
  2121  0759  3006               	movlw	6
  2122  075A                     u285:
  2123  075A  1003               	clrc
  2124  075B  0CF0               	rrf	??_LCD_command,f
  2125  075C  3EFF               	addlw	-1
  2126  075D  1D03               	skipz
  2127  075E  2F5A               	goto	u285
  2128  075F  0870               	movf	??_LCD_command,w
  2129  0760  3901               	andlw	1
  2130  0761  00F1               	movwf	??_LCD_command+1
  2131  0762  0EF1               	swapf	??_LCD_command+1,f
  2132  0763  0DF1               	rlf	??_LCD_command+1,f
  2133  0764  0DF1               	rlf	??_LCD_command+1,f
  2134  0765  0807               	movf	7,w	;volatile
  2135  0766  0671               	xorwf	??_LCD_command+1,w
  2136  0767  39BF               	andlw	-65
  2137  0768  0671               	xorwf	??_LCD_command+1,w
  2138  0769  0087               	movwf	7	;volatile
  2139                           
  2140                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  2141  076A  0872               	movf	LCD_command@cmd,w
  2142  076B  00F0               	movwf	??_LCD_command
  2143  076C  3007               	movlw	7
  2144  076D                     u295:
  2145  076D  1003               	clrc
  2146  076E  0CF0               	rrf	??_LCD_command,f
  2147  076F  3EFF               	addlw	-1
  2148  0770  1D03               	skipz
  2149  0771  2F6D               	goto	u295
  2150  0772  0870               	movf	??_LCD_command,w
  2151  0773  3901               	andlw	1
  2152  0774  00F1               	movwf	??_LCD_command+1
  2153  0775  0CF1               	rrf	??_LCD_command+1,f
  2154  0776  0CF1               	rrf	??_LCD_command+1,f
  2155  0777  0807               	movf	7,w	;volatile
  2156  0778  0671               	xorwf	??_LCD_command+1,w
  2157  0779  397F               	andlw	-129
  2158  077A  0671               	xorwf	??_LCD_command+1,w
  2159  077B  0087               	movwf	7	;volatile
  2160                           
  2161                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  2162  077C  1087               	bcf	7,1	;volatile
  2163                           
  2164                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  2165  077D  1187               	bcf	7,3	;volatile
  2166                           
  2167                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  2168  077E  1587               	bsf	7,3	;volatile
  2169                           
  2170                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2171  077F  3018               	movlw	24
  2172  0780  00F0               	movwf	??_LCD_command
  2173  0781                     u677:
  2174  0781  0BF0               	decfsz	??_LCD_command,f
  2175  0782  2F81               	goto	u677
  2176  0783  2F84               	nop2
  2177                           
  2178                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  2179  0784  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0785  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0786  1187               	bcf	7,3	;volatile
  2182                           
  2183                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2184  0787  3018               	movlw	24
  2185  0788  00F0               	movwf	??_LCD_command
  2186  0789                     u687:
  2187  0789  0BF0               	decfsz	??_LCD_command,f
  2188  078A  2F89               	goto	u687
  2189  078B  2F8C               	nop2
  2190                           
  2191                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  2192  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2193  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2194  078E  1207               	bcf	7,4	;volatile
  2195  078F  1287               	bcf	7,5	;volatile
  2196  0790  1307               	bcf	7,6	;volatile
  2197  0791  1387               	bcf	7,7	;volatile
  2198                           
  2199                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  2200  0792  0872               	movf	LCD_command@cmd,w
  2201  0793  3901               	andlw	1
  2202  0794  00F0               	movwf	??_LCD_command
  2203  0795  0EF0               	swapf	??_LCD_command,f
  2204  0796  0807               	movf	7,w	;volatile
  2205  0797  0670               	xorwf	??_LCD_command,w
  2206  0798  39EF               	andlw	-17
  2207  0799  0670               	xorwf	??_LCD_command,w
  2208  079A  0087               	movwf	7	;volatile
  2209                           
  2210                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  2211  079B  0872               	movf	LCD_command@cmd,w
  2212  079C  00F0               	movwf	??_LCD_command
  2213  079D  1003               	clrc
  2214  079E  0C70               	rrf	??_LCD_command,w
  2215  079F  3901               	andlw	1
  2216  07A0  00F1               	movwf	??_LCD_command+1
  2217  07A1  0EF1               	swapf	??_LCD_command+1,f
  2218  07A2  0DF1               	rlf	??_LCD_command+1,f
  2219  07A3  0807               	movf	7,w	;volatile
  2220  07A4  0671               	xorwf	??_LCD_command+1,w
  2221  07A5  39DF               	andlw	-33
  2222  07A6  0671               	xorwf	??_LCD_command+1,w
  2223  07A7  0087               	movwf	7	;volatile
  2224                           
  2225                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  2226  07A8  0872               	movf	LCD_command@cmd,w
  2227  07A9  00F0               	movwf	??_LCD_command
  2228  07AA  3002               	movlw	2
  2229  07AB                     u305:
  2230  07AB  1003               	clrc
  2231  07AC  0CF0               	rrf	??_LCD_command,f
  2232  07AD  3EFF               	addlw	-1
  2233  07AE  1D03               	skipz
  2234  07AF  2FAB               	goto	u305
  2235  07B0  0870               	movf	??_LCD_command,w
  2236  07B1  3901               	andlw	1
  2237  07B2  00F1               	movwf	??_LCD_command+1
  2238  07B3  0EF1               	swapf	??_LCD_command+1,f
  2239  07B4  0DF1               	rlf	??_LCD_command+1,f
  2240  07B5  0DF1               	rlf	??_LCD_command+1,f
  2241  07B6  0807               	movf	7,w	;volatile
  2242  07B7  0671               	xorwf	??_LCD_command+1,w
  2243  07B8  39BF               	andlw	-65
  2244  07B9  0671               	xorwf	??_LCD_command+1,w
  2245  07BA  0087               	movwf	7	;volatile
  2246                           
  2247                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
  2248  07BB  0872               	movf	LCD_command@cmd,w
  2249  07BC  00F0               	movwf	??_LCD_command
  2250  07BD  3003               	movlw	3
  2251  07BE                     u315:
  2252  07BE  1003               	clrc
  2253  07BF  0CF0               	rrf	??_LCD_command,f
  2254  07C0  3EFF               	addlw	-1
  2255  07C1  1D03               	skipz
  2256  07C2  2FBE               	goto	u315
  2257  07C3  0870               	movf	??_LCD_command,w
  2258  07C4  3901               	andlw	1
  2259  07C5  00F1               	movwf	??_LCD_command+1
  2260  07C6  0CF1               	rrf	??_LCD_command+1,f
  2261  07C7  0CF1               	rrf	??_LCD_command+1,f
  2262  07C8  0807               	movf	7,w	;volatile
  2263  07C9  0671               	xorwf	??_LCD_command+1,w
  2264  07CA  397F               	andlw	-129
  2265  07CB  0671               	xorwf	??_LCD_command+1,w
  2266  07CC  0087               	movwf	7	;volatile
  2267                           
  2268                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
  2269  07CD  1087               	bcf	7,1	;volatile
  2270                           
  2271                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
  2272  07CE  1187               	bcf	7,3	;volatile
  2273                           
  2274                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
  2275  07CF  1587               	bsf	7,3	;volatile
  2276                           
  2277                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2278  07D0  3018               	movlw	24
  2279  07D1  00F0               	movwf	??_LCD_command
  2280  07D2                     u697:
  2281  07D2  0BF0               	decfsz	??_LCD_command,f
  2282  07D3  2FD2               	goto	u697
  2283  07D4  2FD5               	nop2
  2284                           
  2285                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
  2286  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  2287  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  2288  07D7  1187               	bcf	7,3	;volatile
  2289                           
  2290                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  2291  07D8  3018               	movlw	24
  2292  07D9  00F0               	movwf	??_LCD_command
  2293  07DA                     u707:
  2294  07DA  0BF0               	decfsz	??_LCD_command,f
  2295  07DB  2FDA               	goto	u707
  2296  07DC  2FDD               	nop2
  2297                           
  2298                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2299  07DD  3014               	movlw	20
  2300  07DE  00F1               	movwf	??_LCD_command+1
  2301  07DF  3079               	movlw	121
  2302  07E0  00F0               	movwf	??_LCD_command
  2303  07E1                     u717:
  2304  07E1  0BF0               	decfsz	??_LCD_command,f
  2305  07E2  2FE1               	goto	u717
  2306  07E3  0BF1               	decfsz	??_LCD_command+1,f
  2307  07E4  2FE1               	goto	u717
  2308  07E5  2FE6               	nop2
  2309  07E6  0008               	return
  2310  07E7                     __end_of_LCD_command:
  2311  007E                     btemp	set	126	;btemp
  2312  007E                     wtemp0	set	126
  2313                           
  2314                           	psect	config
  2315                           
  2316                           ;Config register CONFIG1 @ 0x2007
  2317                           ;	Oscillator Selection bits
  2318                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2319                           ;	Watchdog Timer Enable bit
  2320                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2321                           ;	Power-up Timer Enable bit
  2322                           ;	PWRTE = ON, PWRT enabled
  2323                           ;	RE3/MCLR pin function select bit
  2324                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2325                           ;	Code Protection bit
  2326                           ;	CP = OFF, Program memory code protection is disabled
  2327                           ;	Data Code Protection bit
  2328                           ;	CPD = OFF, Data memory code protection is disabled
  2329                           ;	Brown Out Reset Selection bits
  2330                           ;	BOREN = OFF, BOR disabled
  2331                           ;	Internal External Switchover bit
  2332                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2333                           ;	Fail-Safe Clock Monitor Enabled bit
  2334                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2335                           ;	Low Voltage Programming Enable bit
  2336                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2337                           ;	In-Circuit Debugger Mode bit
  2338                           ;	DEBUG = 0x1, unprogrammed default
  2339  2007                     	org	8199
  2340  2007  2CE2               	dw	11490
  2341                           
  2342                           ;Config register CONFIG2 @ 0x2008
  2343                           ;	Brown-out Reset Selection bit
  2344                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2345                           ;	Flash Program Memory Self Write Enable bits
  2346                           ;	WRT = OFF, Write protection off
  2347  2008                     	org	8200
  2348  2008  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    0
    Data        8
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(1) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _MEF_Actualizacion->_Pant_Inicio
    _Pant_Inicio->_LCD_array
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _main in BANK0

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_Pant_Inicio

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2313
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0    2091
                                             16 BANK0      2     2      0
                        _Antirrebote
                        _Pant_Inicio
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0    2091
                                             10 COMMON     4     4      0
                                              0 BANK0     16    16      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     592
                                              3 COMMON     4     3      1
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (3) _LCD_array                                            7     2      5    1275
                                              3 COMMON     7     2      5
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (4) _LCD_date                                             3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Antirrebote                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     222
                                              3 COMMON     3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
   _MEF_Init
   _Pines_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 16 16:06:50 2020

                         pc 0002                          l80 0517                          l74 04F5  
                        l75 0501                          fsr 0004                         _RB5 0035  
                       u305 07AB                         u315 07BE                         u325 067F  
                       u335 0690                         u265 0737                         u345 06A2  
                       u450 05EF                         u275 0748                         u355 06B5  
                       u460 060A                         u285 075A                         u365 06F3  
                       u517 0669                         u295 076D                         u607 0590  
                       u375 0706                         u527 0560                         u617 05A4  
                       u537 06C9                         u385 04C9                         u707 07DA  
                       u627 05B1                         u547 06D1                         u717 07E1  
                       u637 05BE                         u557 071A                         u647 05C9  
                       u567 0721                         u657 05D4                         u577 0727  
                       u667 05E1                         u587 047D                         u677 0781  
                       u597 0581                         u687 0789                         u697 07D2  
                       fsr0 0004                         indf 0000           _MEF_Actualizacion 04EC  
        ?_MEF_Actualizacion 0070                        l1101 052B                        l1103 0534  
                      l1121 0479                        l1201 04ED                        l1115 0568  
                      l1107 053D                        l1109 0550                        l1209 04F9  
                      l1171 0586                        l1219 0507                        l1239 04BF  
                      l1097 0519                        l1089 04D7                        l1281 050F  
                      l1283 0542                        l1099 0522                        STR_1 0033  
                      STR_2 001E                        STR_3 0009                        STR_4 0033  
              ?_LCD_command 0070                        _main 04A3                        btemp 007E  
       ??_MEF_Actualizacion 0030                        start 0000          __size_of_LCD_array 005B  
             _Estado_Actual 003A         __end_of_Antirrebote 048C            __end_of_LCD_date 072D  
          __end_of_LCD_init 05E7            __end_of_MEF_Init 0460                       ?_main 0070  
                     _ANS13 0C4D               _LCD_character 04C5   __end_of_MEF_Actualizacion 0518  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _TRISB 0086                       _TRISC 0087               ??_Pant_Inicio 007A  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 07E7                __end_of_main 04C5              ?_LCD_character 0073  
                    ??_main 007E           __end_of_LCD_array 0573                  _Pines_Init 048C  
       __end_of_Pant_Inicio 0675                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TRISB5 0435            Pant_Inicio@F1230 003B            Pant_Inicio@F1232 0032  
               _Antirrebote 0479                LCD_date@date 0072  __size_of_MEF_Actualizacion 002C  
   __end_of__initialization 07FC        __size_of_LCD_command 00BA                   ?_LCD_date 0070  
                 ?_LCD_init 0070                   ?_MEF_Init 0070              __pcstackCOMMON 0070  
              __pidataBANK0 0460             ??_LCD_character 0074                   LCD_init@i 0075  
               _Pant_Inicio 05E7                 ?_Pines_Init 0070                  __pbssBANK0 0032  
                ??_LCD_date 0070                  ??_LCD_init 0073                  ??_MEF_Init 0070  
                __pmaintext 04A3                  __stringtab 0003                   _ANSELbits 0188  
       __size_of_Pines_Init 0017                     __ptext1 048C                     __ptext2 045E  
                   __ptext3 04EC                     __ptext4 05E7                     __ptext5 04C5  
                   __ptext6 0518                     __ptext7 0675                     __ptext8 0479  
                   __ptext9 0573        Pant_Inicio@caracter1 0020        end_of_initialization 07FC  
                 _LCD_array 0518                ?_Antirrebote 0070                   _PORTBbits 0006  
                 _PORTCbits 0007               LCD_array@date 0077                   _TRISAbits 0085  
                 _TRISCbits 0087                  ?_LCD_array 0073           __size_of_LCD_date 00B8  
         __size_of_LCD_init 0074           __size_of_MEF_Init 0002                  LCD_array@x 0073  
                LCD_array@y 0075         start_initialization 07E7                ?_Pant_Inicio 0070  
             ??_LCD_command 0070                ??_Pines_Init 0070                  init_fetch0 0468  
               __pdataBANK0 003B       __end_of_LCD_character 04EC          __end_of_Pines_Init 04A3  
                 ___latbits 0002               __pcstackBANK0 0020                 ??_LCD_array 0078  
       __end_of_LCD_command 07E7        __size_of_Antirrebote 0013                   __pstrings 0003  
       Pant_Inicio@caracter 0028         LCD_character@adress 0075                    _LCD_date 0675  
                  _LCD_init 0573                    _MEF_Init 045E                 __stringbase 0008  
      __size_of_Pant_Inicio 008E                 _LCD_command 072D          __end_of__stringtab 0009  
                _ANSELHbits 0189                    __ptext10 072D               __size_of_main 0022  
     LCD_character@caracter 0073              LCD_character@i 0076                    init_ram0 046C  
                 stringcode 0003                    stringdir 0003                    stringtab 0003  
                _WDTCONbits 0105      __size_of_LCD_character 0027               ??_Antirrebote 0070  
            LCD_command@cmd 0072  
