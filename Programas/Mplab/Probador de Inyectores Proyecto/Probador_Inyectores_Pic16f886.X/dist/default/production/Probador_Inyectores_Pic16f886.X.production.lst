

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Dec 21 01:20:27 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 09/04/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F886 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  0105                     	;# 
   175  0107                     	;# 
   176  0108                     	;# 
   177  0109                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0185                     	;# 
   184  0187                     	;# 
   185  0188                     	;# 
   186  0189                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0014                     	;# 
   210  0015                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  001D                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  0087                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  008F                     	;# 
   232  0090                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0093                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  0105                     	;# 
   251  0107                     	;# 
   252  0108                     	;# 
   253  0109                     	;# 
   254  010C                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  0185                     	;# 
   260  0187                     	;# 
   261  0188                     	;# 
   262  0189                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  008F                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0093                     	;# 
   313  0093                     	;# 
   314  0094                     	;# 
   315  0095                     	;# 
   316  0096                     	;# 
   317  0097                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009E                     	;# 
   325  009F                     	;# 
   326  0105                     	;# 
   327  0107                     	;# 
   328  0108                     	;# 
   329  0109                     	;# 
   330  010C                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  0185                     	;# 
   336  0187                     	;# 
   337  0188                     	;# 
   338  0189                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0097                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009A                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  0105                     	;# 
   403  0107                     	;# 
   404  0108                     	;# 
   405  0109                     	;# 
   406  010C                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0185                     	;# 
   412  0187                     	;# 
   413  0188                     	;# 
   414  0189                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  0081                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454  0087                     	;# 
   455  0089                     	;# 
   456  008C                     	;# 
   457  008D                     	;# 
   458  008E                     	;# 
   459  008F                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0095                     	;# 
   468  0096                     	;# 
   469  0097                     	;# 
   470  0098                     	;# 
   471  0099                     	;# 
   472  009A                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  0105                     	;# 
   479  0107                     	;# 
   480  0108                     	;# 
   481  0109                     	;# 
   482  010C                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0187                     	;# 
   489  0188                     	;# 
   490  0189                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000D                     	;# 
   506  000E                     	;# 
   507  000E                     	;# 
   508  000F                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0013                     	;# 
   513  0014                     	;# 
   514  0015                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  001D                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  0081                     	;# 
   528  0085                     	;# 
   529  0086                     	;# 
   530  0087                     	;# 
   531  0089                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  008F                     	;# 
   536  0090                     	;# 
   537  0091                     	;# 
   538  0092                     	;# 
   539  0093                     	;# 
   540  0093                     	;# 
   541  0093                     	;# 
   542  0094                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  009F                     	;# 
   554  0105                     	;# 
   555  0107                     	;# 
   556  0108                     	;# 
   557  0109                     	;# 
   558  010C                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  010F                     	;# 
   563  0185                     	;# 
   564  0187                     	;# 
   565  0188                     	;# 
   566  0189                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  000E                     	;# 
   583  000E                     	;# 
   584  000F                     	;# 
   585  0010                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0014                     	;# 
   590  0015                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  0081                     	;# 
   604  0085                     	;# 
   605  0086                     	;# 
   606  0087                     	;# 
   607  0089                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0091                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0093                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  0105                     	;# 
   631  0107                     	;# 
   632  0108                     	;# 
   633  0109                     	;# 
   634  010C                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  010F                     	;# 
   639  0185                     	;# 
   640  0187                     	;# 
   641  0188                     	;# 
   642  0189                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  000E                     	;# 
   660  000F                     	;# 
   661  0010                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0014                     	;# 
   666  0015                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  0081                     	;# 
   680  0085                     	;# 
   681  0086                     	;# 
   682  0087                     	;# 
   683  0089                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  008F                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0093                     	;# 
   693  0093                     	;# 
   694  0094                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0097                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009A                     	;# 
   701  009B                     	;# 
   702  009C                     	;# 
   703  009D                     	;# 
   704  009E                     	;# 
   705  009F                     	;# 
   706  0105                     	;# 
   707  0107                     	;# 
   708  0108                     	;# 
   709  0109                     	;# 
   710  010C                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010F                     	;# 
   715  0185                     	;# 
   716  0187                     	;# 
   717  0188                     	;# 
   718  0189                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000D                     	;# 
   734  000E                     	;# 
   735  000E                     	;# 
   736  000F                     	;# 
   737  0010                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0014                     	;# 
   742  0015                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0017                     	;# 
   746  0018                     	;# 
   747  0019                     	;# 
   748  001A                     	;# 
   749  001B                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  001D                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  0081                     	;# 
   756  0085                     	;# 
   757  0086                     	;# 
   758  0087                     	;# 
   759  0089                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  008E                     	;# 
   763  008F                     	;# 
   764  0090                     	;# 
   765  0091                     	;# 
   766  0092                     	;# 
   767  0093                     	;# 
   768  0093                     	;# 
   769  0093                     	;# 
   770  0094                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009E                     	;# 
   781  009F                     	;# 
   782  0105                     	;# 
   783  0107                     	;# 
   784  0108                     	;# 
   785  0109                     	;# 
   786  010C                     	;# 
   787  010C                     	;# 
   788  010D                     	;# 
   789  010E                     	;# 
   790  010F                     	;# 
   791  0185                     	;# 
   792  0187                     	;# 
   793  0188                     	;# 
   794  0189                     	;# 
   795  018C                     	;# 
   796  018D                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  000E                     	;# 
   812  000F                     	;# 
   813  0010                     	;# 
   814  0011                     	;# 
   815  0012                     	;# 
   816  0013                     	;# 
   817  0014                     	;# 
   818  0015                     	;# 
   819  0015                     	;# 
   820  0016                     	;# 
   821  0017                     	;# 
   822  0018                     	;# 
   823  0019                     	;# 
   824  001A                     	;# 
   825  001B                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  001D                     	;# 
   829  001E                     	;# 
   830  001F                     	;# 
   831  0081                     	;# 
   832  0085                     	;# 
   833  0086                     	;# 
   834  0087                     	;# 
   835  0089                     	;# 
   836  008C                     	;# 
   837  008D                     	;# 
   838  008E                     	;# 
   839  008F                     	;# 
   840  0090                     	;# 
   841  0091                     	;# 
   842  0092                     	;# 
   843  0093                     	;# 
   844  0093                     	;# 
   845  0093                     	;# 
   846  0094                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0098                     	;# 
   851  0099                     	;# 
   852  009A                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  0105                     	;# 
   859  0107                     	;# 
   860  0108                     	;# 
   861  0109                     	;# 
   862  010C                     	;# 
   863  010C                     	;# 
   864  010D                     	;# 
   865  010E                     	;# 
   866  010F                     	;# 
   867  0185                     	;# 
   868  0187                     	;# 
   869  0188                     	;# 
   870  0189                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  000E                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001D                     	;# 
   905  001E                     	;# 
   906  001F                     	;# 
   907  0081                     	;# 
   908  0085                     	;# 
   909  0086                     	;# 
   910  0087                     	;# 
   911  0089                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  008E                     	;# 
   915  008F                     	;# 
   916  0090                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0093                     	;# 
   922  0094                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0097                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009A                     	;# 
   929  009B                     	;# 
   930  009C                     	;# 
   931  009D                     	;# 
   932  009E                     	;# 
   933  009F                     	;# 
   934  0105                     	;# 
   935  0107                     	;# 
   936  0108                     	;# 
   937  0109                     	;# 
   938  010C                     	;# 
   939  010C                     	;# 
   940  010D                     	;# 
   941  010E                     	;# 
   942  010F                     	;# 
   943  0185                     	;# 
   944  0187                     	;# 
   945  0188                     	;# 
   946  0189                     	;# 
   947  018C                     	;# 
   948  018D                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0009                     	;# 
   958  000A                     	;# 
   959  000B                     	;# 
   960  000C                     	;# 
   961  000D                     	;# 
   962  000E                     	;# 
   963  000E                     	;# 
   964  000F                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0014                     	;# 
   970  0015                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001B                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  001D                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  0081                     	;# 
   984  0085                     	;# 
   985  0086                     	;# 
   986  0087                     	;# 
   987  0089                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008F                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0093                     	;# 
   997  0093                     	;# 
   998  0094                     	;# 
   999  0095                     	;# 
  1000  0096                     	;# 
  1001  0097                     	;# 
  1002  0098                     	;# 
  1003  0099                     	;# 
  1004  009A                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  0105                     	;# 
  1011  0107                     	;# 
  1012  0108                     	;# 
  1013  0109                     	;# 
  1014  010C                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  010F                     	;# 
  1019  0185                     	;# 
  1020  0187                     	;# 
  1021  0188                     	;# 
  1022  0189                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025                           
  1026                           	psect	idataBANK0
  1027  03FA                     __pidataBANK0:
  1028                           
  1029                           ;initializer for _Delay1s
  1030  03FA  3410               	retlw	16
  1031  03FB  3427               	retlw	39
  1032                           
  1033                           ;initializer for _Delay200ms
  1034  03FC  34D0               	retlw	208
  1035  03FD  3407               	retlw	7
  1036                           
  1037                           ;initializer for _Delay100ms
  1038  03FE  34E8               	retlw	232
  1039  03FF  3403               	retlw	3
  1040                           
  1041                           	psect	idataBANK1
  1042  110C                     __pidataBANK1:
  1043                           
  1044                           ;initializer for Pant_Inicio@F1334
  1045  110C  3406               	retlw	6
  1046  110D  3409               	retlw	9
  1047  110E  3409               	retlw	9
  1048  110F  3406               	retlw	6
  1049  1110  3400               	retlw	0
  1050  1111  3400               	retlw	0
  1051  1112  3400               	retlw	0
  1052  1113  3400               	retlw	0
  1053                           
  1054                           	psect	stringtext
  1055  0400                     __pstringtext:
  1056  0400                     stringtab:
  1057  0400                     __stringtab:
  1058                           
  1059                           ;	String table - string pointers are 2 bytes each
  1060  0400  1BFF               	btfsc	btemp+1,7
  1061  0401  2C0A               	ljmp	stringcode
  1062  0402  1383               	bcf	3,7
  1063  0403  187F               	btfsc	btemp+1,0
  1064  0404  1783               	bsf	3,7
  1065  0405  0800               	movf	0,w
  1066  0406  0A84               	incf	4,f
  1067  0407  1903               	skipnz
  1068  0408  0AFF               	incf	btemp+1,f
  1069  0409  0008               	return
  1070  040A                     stringcode:
  1071  040A  087F               	movf	btemp+1,w
  1072  040B  397F               	andlw	127
  1073  040C  008A               	movwf	10
  1074  040D  0804               	movf	4,w
  1075  040E  0A84               	incf	4,f
  1076  040F  1903               	skipnz
  1077  0410  0AFF               	incf	btemp+1,f
  1078  0411  0082               	movwf	2
  1079  0412                     __stringbase:
  1080  0412                     __end_of__stringtab:
  1081  0412                     _dpowers:
  1082  0412  3401               	retlw	1
  1083  0413  3400               	retlw	0
  1084  0414  340A               	retlw	10
  1085  0415  3400               	retlw	0
  1086  0416  3464               	retlw	100
  1087  0417  3400               	retlw	0
  1088  0418  34E8               	retlw	232
  1089  0419  3403               	retlw	3
  1090  041A  3410               	retlw	16
  1091  041B  3427               	retlw	39
  1092  041C                     __end_of_dpowers:
  1093  000E                     _TMR1	set	14
  1094  001E                     _ADRESH	set	30
  1095  001F                     _ADCON0	set	31
  1096  001F                     _ADCON0bits	set	31
  1097  0010                     _T1CONbits	set	16
  1098  0007                     _PORTCbits	set	7
  1099  0006                     _PORTBbits	set	6
  1100  0005                     _PORTAbits	set	5
  1101  0007                     _PORTC	set	7
  1102  0006                     _PORTB	set	6
  1103  0005                     _PORTA	set	5
  1104  0034                     _RB4	set	52
  1105  005F                     _GIE	set	95
  1106  005E                     _PEIE	set	94
  1107  0080                     _TMR1ON	set	128
  1108  0060                     _TMR1IF	set	96
  1109  009E                     _ADRESL	set	158
  1110  009F                     _ADCON1bits	set	159
  1111  0087                     _TRISCbits	set	135
  1112  0086                     _TRISBbits	set	134
  1113  0087                     _TRISC	set	135
  1114  0086                     _TRISB	set	134
  1115  0085                     _TRISAbits	set	133
  1116  0434                     _TRISB4	set	1076
  1117  0460                     _TMR1IE	set	1120
  1118  0105                     _WDTCONbits	set	261
  1119  0188                     _ANSELbits	set	392
  1120  0189                     _ANSELHbits	set	393
  1121  041C                     STR_38:
  1122  041C  3420               	retlw	32	;' '
  1123  041D  3420               	retlw	32	;' '
  1124  041E  3420               	retlw	32	;' '
  1125  041F  3420               	retlw	32	;' '
  1126  0420  3420               	retlw	32	;' '
  1127  0421  3420               	retlw	32	;' '
  1128  0422  3420               	retlw	32	;' '
  1129  0423  3420               	retlw	32	;' '
  1130  0424  3420               	retlw	32	;' '
  1131  0425  3420               	retlw	32	;' '
  1132  0426  3420               	retlw	32	;' '
  1133  0427  3420               	retlw	32	;' '
  1134  0428  3420               	retlw	32	;' '
  1135  0429  3420               	retlw	32	;' '
  1136  042A  3420               	retlw	32	;' '
  1137  042B  3420               	retlw	32	;' '
  1138  042C  3420               	retlw	32	;' '
  1139  042D  3420               	retlw	32	;' '
  1140  042E  3420               	retlw	32	;' '
  1141  042F  3420               	retlw	32	;' '
  1142  0430  3400               	retlw	0
  1143  0431                     STR_3:
  1144  0431  3420               	retlw	32	;' '
  1145  0432  3420               	retlw	32	;' '
  1146  0433  3420               	retlw	32	;' '
  1147  0434  3444               	retlw	68	;'D'
  1148  0435  3445               	retlw	69	;'E'
  1149  0436  3420               	retlw	32	;' '
  1150  0437  3449               	retlw	73	;'I'
  1151  0438  344E               	retlw	78	;'N'
  1152  0439  3459               	retlw	89	;'Y'
  1153  043A  3445               	retlw	69	;'E'
  1154  043B  3443               	retlw	67	;'C'
  1155  043C  3454               	retlw	84	;'T'
  1156  043D  344F               	retlw	79	;'O'
  1157  043E  3452               	retlw	82	;'R'
  1158  043F  3445               	retlw	69	;'E'
  1159  0440  3453               	retlw	83	;'S'
  1160  0441  3420               	retlw	32	;' '
  1161  0442  3420               	retlw	32	;' '
  1162  0443  3420               	retlw	32	;' '
  1163  0444  3420               	retlw	32	;' '
  1164  0445  3400               	retlw	0
  1165  0446                     STR_2:
  1166  0446  3450               	retlw	80	;'P'
  1167  0447  3452               	retlw	82	;'R'
  1168  0448  344F               	retlw	79	;'O'
  1169  0449  3442               	retlw	66	;'B'
  1170  044A  3441               	retlw	65	;'A'
  1171  044B  3444               	retlw	68	;'D'
  1172  044C  344F               	retlw	79	;'O'
  1173  044D  3452               	retlw	82	;'R'
  1174  044E  3420               	retlw	32	;' '
  1175  044F  3441               	retlw	65	;'A'
  1176  0450  3455               	retlw	85	;'U'
  1177  0451  3454               	retlw	84	;'T'
  1178  0452  344F               	retlw	79	;'O'
  1179  0453  344D               	retlw	77	;'M'
  1180  0454  344F               	retlw	79	;'O'
  1181  0455  3454               	retlw	84	;'T'
  1182  0456  3452               	retlw	82	;'R'
  1183  0457  3449               	retlw	73	;'I'
  1184  0458  345A               	retlw	90	;'Z'
  1185  0459  3420               	retlw	32	;' '
  1186  045A  3400               	retlw	0
  1187  045B                     STR_1:
  1188  045B  343D               	retlw	61	;'='
  1189  045C  343D               	retlw	61	;'='
  1190  045D  343D               	retlw	61	;'='
  1191  045E  343D               	retlw	61	;'='
  1192  045F  343D               	retlw	61	;'='
  1193  0460  343D               	retlw	61	;'='
  1194  0461  343D               	retlw	61	;'='
  1195  0462  343D               	retlw	61	;'='
  1196  0463  343D               	retlw	61	;'='
  1197  0464  343D               	retlw	61	;'='
  1198  0465  343D               	retlw	61	;'='
  1199  0466  343D               	retlw	61	;'='
  1200  0467  343D               	retlw	61	;'='
  1201  0468  343D               	retlw	61	;'='
  1202  0469  343D               	retlw	61	;'='
  1203  046A  343D               	retlw	61	;'='
  1204  046B  343D               	retlw	61	;'='
  1205  046C  343D               	retlw	61	;'='
  1206  046D  343D               	retlw	61	;'='
  1207  046E  343D               	retlw	61	;'='
  1208  046F  3400               	retlw	0
  1209  0470                     STR_39:
  1210  0470  3420               	retlw	32	;' '
  1211  0471  3450               	retlw	80	;'P'
  1212  0472  3472               	retlw	114	;'r'
  1213  0473  346F               	retlw	111	;'o'
  1214  0474  3463               	retlw	99	;'c'
  1215  0475  3465               	retlw	101	;'e'
  1216  0476  3473               	retlw	115	;'s'
  1217  0477  346F               	retlw	111	;'o'
  1218  0478  3420               	retlw	32	;' '
  1219  0479  3446               	retlw	70	;'F'
  1220  047A  3469               	retlw	105	;'i'
  1221  047B  346E               	retlw	110	;'n'
  1222  047C  3461               	retlw	97	;'a'
  1223  047D  346C               	retlw	108	;'l'
  1224  047E  3469               	retlw	105	;'i'
  1225  047F  347A               	retlw	122	;'z'
  1226  0480  3461               	retlw	97	;'a'
  1227  0481  3464               	retlw	100	;'d'
  1228  0482  346F               	retlw	111	;'o'
  1229  0483  3400               	retlw	0
  1230  0484                     STR_33:
  1231  0484  3420               	retlw	32	;' '
  1232  0485  3420               	retlw	32	;' '
  1233  0486  3420               	retlw	32	;' '
  1234  0487  3420               	retlw	32	;' '
  1235  0488  3450               	retlw	80	;'P'
  1236  0489  3455               	retlw	85	;'U'
  1237  048A  344C               	retlw	76	;'L'
  1238  048B  3456               	retlw	86	;'V'
  1239  048C  3445               	retlw	69	;'E'
  1240  048D  3452               	retlw	82	;'R'
  1241  048E  3449               	retlw	73	;'I'
  1242  048F  345A               	retlw	90	;'Z'
  1243  0490  3441               	retlw	65	;'A'
  1244  0491  3443               	retlw	67	;'C'
  1245  0492  3449               	retlw	73	;'I'
  1246  0493  344F               	retlw	79	;'O'
  1247  0494  344E               	retlw	78	;'N'
  1248  0495  3400               	retlw	0
  1249  0496                     STR_17:
  1250  0496  344C               	retlw	76	;'L'
  1251  0497  3449               	retlw	73	;'I'
  1252  0498  344D               	retlw	77	;'M'
  1253  0499  3450               	retlw	80	;'P'
  1254  049A  342E               	retlw	46	;'.'
  1255  049B  3420               	retlw	32	;' '
  1256  049C  3455               	retlw	85	;'U'
  1257  049D  344C               	retlw	76	;'L'
  1258  049E  3454               	retlw	84	;'T'
  1259  049F  3452               	retlw	82	;'R'
  1260  04A0  3441               	retlw	65	;'A'
  1261  04A1  3453               	retlw	83	;'S'
  1262  04A2  344F               	retlw	79	;'O'
  1263  04A3  344E               	retlw	78	;'N'
  1264  04A4  3449               	retlw	73	;'I'
  1265  04A5  3444               	retlw	68	;'D'
  1266  04A6  344F               	retlw	79	;'O'
  1267  04A7  3400               	retlw	0
  1268  04A8                     STR_32:
  1269  04A8  3420               	retlw	32	;' '
  1270  04A9  3420               	retlw	32	;' '
  1271  04AA  3420               	retlw	32	;' '
  1272  04AB  3420               	retlw	32	;' '
  1273  04AC  344D               	retlw	77	;'M'
  1274  04AD  346F               	retlw	111	;'o'
  1275  04AE  3464               	retlw	100	;'d'
  1276  04AF  346F               	retlw	111	;'o'
  1277  04B0  3420               	retlw	32	;' '
  1278  04B1  3450               	retlw	80	;'P'
  1279  04B2  3472               	retlw	114	;'r'
  1280  04B3  3475               	retlw	117	;'u'
  1281  04B4  3465               	retlw	101	;'e'
  1282  04B5  3462               	retlw	98	;'b'
  1283  04B6  3461               	retlw	97	;'a'
  1284  04B7  343A               	retlw	58	;':'
  1285  04B8  3400               	retlw	0
  1286  04B9                     STR_31:
  1287  04B9  3450               	retlw	80	;'P'
  1288  04BA  3472               	retlw	114	;'r'
  1289  04BB  346F               	retlw	111	;'o'
  1290  04BC  3463               	retlw	99	;'c'
  1291  04BD  3465               	retlw	101	;'e'
  1292  04BE  3473               	retlw	115	;'s'
  1293  04BF  346F               	retlw	111	;'o'
  1294  04C0  3420               	retlw	32	;' '
  1295  04C1  3444               	retlw	68	;'D'
  1296  04C2  3465               	retlw	101	;'e'
  1297  04C3  3474               	retlw	116	;'t'
  1298  04C4  3465               	retlw	101	;'e'
  1299  04C5  346E               	retlw	110	;'n'
  1300  04C6  3469               	retlw	105	;'i'
  1301  04C7  3464               	retlw	100	;'d'
  1302  04C8  346F               	retlw	111	;'o'
  1303  04C9  3400               	retlw	0
  1304  04CA                     STR_22:
  1305  04CA  3454               	retlw	84	;'T'
  1306  04CB  3445               	retlw	69	;'E'
  1307  04CC  344D               	retlw	77	;'M'
  1308  04CD  3450               	retlw	80	;'P'
  1309  04CE  3445               	retlw	69	;'E'
  1310  04CF  3452               	retlw	82	;'R'
  1311  04D0  3441               	retlw	65	;'A'
  1312  04D1  3454               	retlw	84	;'T'
  1313  04D2  3455               	retlw	85	;'U'
  1314  04D3  3452               	retlw	82	;'R'
  1315  04D4  3441               	retlw	65	;'A'
  1316  04D5  343A               	retlw	58	;':'
  1317  04D6  3400               	retlw	0
  1318  04D7                     STR_37:
  1319  04D7  3420               	retlw	32	;' '
  1320  04D8  3420               	retlw	32	;' '
  1321  04D9  3420               	retlw	32	;' '
  1322  04DA  3420               	retlw	32	;' '
  1323  04DB  3446               	retlw	70	;'F'
  1324  04DC  344C               	retlw	76	;'L'
  1325  04DD  3455               	retlw	85	;'U'
  1326  04DE  344A               	retlw	74	;'J'
  1327  04DF  344F               	retlw	79	;'O'
  1328  04E0  3400               	retlw	0
  1329  04E1                     STR_35:
  1330  04E1  3420               	retlw	32	;' '
  1331  04E2  3420               	retlw	32	;' '
  1332  04E3  3420               	retlw	32	;' '
  1333  04E4  3420               	retlw	32	;' '
  1334  04E5  3446               	retlw	70	;'F'
  1335  04E6  3455               	retlw	85	;'U'
  1336  04E7  3447               	retlw	71	;'G'
  1337  04E8  3441               	retlw	65	;'A'
  1338  04E9  3400               	retlw	0
  1339  04EA                     STR_20:
  1340  04EA  3454               	retlw	84	;'T'
  1341  04EB  3449               	retlw	73	;'I'
  1342  04EC  3445               	retlw	69	;'E'
  1343  04ED  344D               	retlw	77	;'M'
  1344  04EE  3450               	retlw	80	;'P'
  1345  04EF  344F               	retlw	79	;'O'
  1346  04F0  343A               	retlw	58	;':'
  1347  04F1  3400               	retlw	0
  1348  04F2                     STR_18:
  1349  04F2  3452               	retlw	82	;'R'
  1350  04F3  3450               	retlw	80	;'P'
  1351  04F4  344D               	retlw	77	;'M'
  1352  04F5  343A               	retlw	58	;':'
  1353  04F6  3400               	retlw	0
  1354  04F7                     STR_19:
  1355  04F7  3450               	retlw	80	;'P'
  1356  04F8  3457               	retlw	87	;'W'
  1357  04F9  344D               	retlw	77	;'M'
  1358  04FA  343A               	retlw	58	;':'
  1359  04FB  3400               	retlw	0
  1360  04FC                     STR_25:
  1361  04FC  3425               	retlw	37	;'%'
  1362  04FD  3430               	retlw	48	;'0'
  1363  04FE  3432               	retlw	50	;'2'
  1364  04FF  3464               	retlw	100	;'d'
  1365  0500  3400               	retlw	0
  1366  0501                     STR_24:
  1367  0501  3425               	retlw	37	;'%'
  1368  0502  3430               	retlw	48	;'0'
  1369  0503  3435               	retlw	53	;'5'
  1370  0504  3475               	retlw	117	;'u'
  1371  0505  3400               	retlw	0
  1372  0506                     STR_5:
  1373  0506  343E               	retlw	62	;'>'
  1374  0507  3400               	retlw	0
  1375  0508                     STR_23:
  1376  0508  3443               	retlw	67	;'C'
  1377  0509  3400               	retlw	0
  1378  042F                     
  1379                           	psect	cinit
  1380  0013                     start_initialization:	
  1381                           ; #config settings
  1382                           
  1383  0013                     __initialization:
  1384                           
  1385                           ; Initialize objects allocated to BANK1
  1386  0013  1383               	bcf	3,7	;select IRP bank0
  1387  0014  30D0               	movlw	low (__pdataBANK1+8)
  1388  0015  00FD               	movwf	btemp+-1
  1389  0016  3011               	movlw	high __pidataBANK1
  1390  0017  00FE               	movwf	btemp
  1391  0018  300C               	movlw	low __pidataBANK1
  1392  0019  00FF               	movwf	btemp+1
  1393  001A  30C8               	movlw	low __pdataBANK1
  1394  001B  0084               	movwf	4
  1395  001C  160A  118A  2147  120A  118A  	fcall	init_ram0
  1396                           
  1397                           ; Initialize objects allocated to BANK0
  1398  0021  306C               	movlw	low (__pdataBANK0+6)
  1399  0022  00FD               	movwf	btemp+-1
  1400  0023  3003               	movlw	high __pidataBANK0
  1401  0024  00FE               	movwf	btemp
  1402  0025  30FA               	movlw	low __pidataBANK0
  1403  0026  00FF               	movwf	btemp+1
  1404  0027  3066               	movlw	low __pdataBANK0
  1405  0028  0084               	movwf	4
  1406  0029  160A  118A  2147  120A  118A  	fcall	init_ram0
  1407                           
  1408                           ; Clear objects allocated to BANK1
  1409  002E  30A0               	movlw	low __pbssBANK1
  1410  002F  0084               	movwf	4
  1411  0030  30BD               	movlw	low (__pbssBANK1+29)
  1412  0031  160A  118A  2104   	fcall	clear_ram0
  1413                           
  1414                           ; Clear objects allocated to BANK0
  1415  0034  01E0               	clrf	__pbssBANK0& (0+127)
  1416  0035  01E1               	clrf	(__pbssBANK0+1)& (0+127)
  1417  0036  01E2               	clrf	(__pbssBANK0+2)& (0+127)
  1418  0037  01E3               	clrf	(__pbssBANK0+3)& (0+127)
  1419  0038  01E4               	clrf	(__pbssBANK0+4)& (0+127)
  1420  0039  01E5               	clrf	(__pbssBANK0+5)& (0+127)
  1421                           
  1422                           ; Clear objects allocated to COMMON
  1423  003A  01F6               	clrf	__pbssCOMMON& (0+127)
  1424  003B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1425  003C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1426  003D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1427  003E                     end_of_initialization:	
  1428                           ;End of C runtime variable initialization code
  1429                           
  1430  003E                     __end_of__initialization:
  1431  003E  0183               	clrf	3
  1432  003F  160A  118A  2AF4   	ljmp	_main	;jump to C main() function
  1433                           
  1434                           	psect	bssCOMMON
  1435  0076                     __pbssCOMMON:
  1436  0076                     _Reset:
  1437  0076                     	ds	1
  1438  0077                     _Output:
  1439  0077                     	ds	1
  1440  0078                     _Seg:
  1441  0078                     	ds	1
  1442  0079                     _Min:
  1443  0079                     	ds	1
  1444                           
  1445                           	psect	bssBANK0
  1446  0060                     __pbssBANK0:
  1447  0060                     _PwmS1:
  1448  0060                     	ds	2
  1449  0062                     _Estado_Actual:
  1450  0062                     	ds	1
  1451  0063                     _mod_tiempo:
  1452  0063                     	ds	1
  1453  0064                     _Pwm:
  1454  0064                     	ds	1
  1455  0065                     _Modo:
  1456  0065                     	ds	1
  1457                           
  1458                           	psect	dataBANK0
  1459  0066                     __pdataBANK0:
  1460  0066                     _Delay1s:
  1461  0066                     	ds	2
  1462  0068                     _Delay200ms:
  1463  0068                     	ds	2
  1464  006A                     _Delay100ms:
  1465  006A                     	ds	2
  1466                           
  1467                           	psect	bssBANK1
  1468  00A0                     __pbssBANK1:
  1469  00A0                     Pant_Inicio@F1336:
  1470  00A0                     	ds	8
  1471  00A8                     _Pw_PwmS1:
  1472  00A8                     	ds	3
  1473  00AB                     _Per_PwmS1:
  1474  00AB                     	ds	3
  1475  00AE                     _Rpm:
  1476  00AE                     	ds	2
  1477  00B0                     _PER_T_S1:
  1478  00B0                     	ds	2
  1479  00B2                     _P_W_T_S1:
  1480  00B2                     	ds	2
  1481  00B4                     _freqPwmS1:
  1482  00B4                     	ds	2
  1483  00B6                     _Subestado_Actual:
  1484  00B6                     	ds	1
  1485  00B7                     _Pwm_Seteado:
  1486  00B7                     	ds	1
  1487  00B8                     _Temporizador:
  1488  00B8                     	ds	1
  1489  00B9                     _Act_Variables:
  1490  00B9                     	ds	1
  1491  00BA                     _Mostrar:
  1492  00BA                     	ds	1
  1493  00BB                     _Temp:
  1494  00BB                     	ds	1
  1495  00BC                     _Act_PwmS1:
  1496  00BC                     	ds	1
  1497                           
  1498                           	psect	dataBANK1
  1499  00C8                     __pdataBANK1:
  1500  00C8                     Pant_Inicio@F1334:
  1501  00C8                     	ds	8
  1502                           
  1503                           	psect	inittext
  1504  1143                     init_fetch0:	
  1505                           ;	Called with low address in FSR and high address in W
  1506                           
  1507  1143  087E               	movf	126,w
  1508  1144  008A               	movwf	10
  1509  1145  087F               	movf	127,w
  1510  1146  0082               	movwf	2
  1511  1147                     init_ram0:	
  1512                           ;Called with:
  1513                           ;	high address of idata address in btemp 
  1514                           ;	low address of idata address in btemp+1 
  1515                           ;	low address of data in FSR
  1516                           ;	high address + 1 of data in btemp-1
  1517                           
  1518  1147  2143  160A  118A   	fcall	init_fetch0
  1519  114A  0080               	movwf	0
  1520  114B  0A84               	incf	4,f
  1521  114C  0804               	movf	4,w
  1522  114D  067D               	xorwf	125,w
  1523  114E  1903               	btfsc	3,2
  1524  114F  3400               	retlw	0
  1525  1150  0AFF               	incf	127,f
  1526  1151  1903               	btfsc	3,2
  1527  1152  0AFE               	incf	126,f
  1528  1153  2947               	goto	init_ram0
  1529                           
  1530                           	psect	clrtext
  1531  1104                     clear_ram0:	
  1532                           ;	Called with FSR containing the base address, and
  1533                           ;	W with the last address+1
  1534                           
  1535  1104  0064               	clrwdt	;clear the watchdog before getting into this loop
  1536  1105                     clrloop0:
  1537  1105  0180               	clrf	0	;clear RAM location pointed to by FSR
  1538  1106  0A84               	incf	4,f	;increment pointer
  1539  1107  0604               	xorwf	4,w	;XOR with final address
  1540  1108  1903               	btfsc	3,2	;have we reached the end yet?
  1541  1109  3400               	retlw	0	;all done for this memory range, return
  1542  110A  0604               	xorwf	4,w	;XOR again to restore value
  1543  110B  2905               	goto	clrloop0	;do the next byte
  1544                           
  1545                           	psect	cstackBANK1
  1546  00BD                     __pcstackBANK1:
  1547  00BD                     _Adc_Rpm_Read$1523:
  1548                           
  1549                           ; 3 bytes @ 0x0
  1550  00BD                     	ds	3
  1551  00C0                     Adc_Rpm_Read@cent:
  1552                           
  1553                           ; 2 bytes @ 0x3
  1554  00C0                     	ds	2
  1555  00C2                     Adc_Rpm_Read@uni_m:
  1556                           
  1557                           ; 2 bytes @ 0x5
  1558  00C2                     	ds	2
  1559  00C4                     Adc_Rpm_Read@dec_m:
  1560                           
  1561                           ; 2 bytes @ 0x7
  1562  00C4                     	ds	2
  1563  00C6                     Adc_Rpm_Read@valor:
  1564                           
  1565                           ; 2 bytes @ 0x9
  1566  00C6                     	ds	2
  1567                           
  1568                           	psect	cstackCOMMON
  1569  0070                     __pcstackCOMMON:
  1570  0070                     ?_isdigit:
  1571  0070                     ?_Pines_Init:	
  1572                           ; 1 bit 
  1573                           
  1574  0070                     ?_MEF_Init:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_LCD_init:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_Pwm_init:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_Adc_init:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_Pwm1_stop:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_MEF_Actualizacion:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_Task_Ready:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ??_Task_Ready:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_Pwm_Signal:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ??_Pwm_Signal:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_Pant_Inicio:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_Select_Modo:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_MEF_Subest_Actualizacion:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_Pant_Pulverizacion:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_Pant_Fuga:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_Pant_Flujo:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_Pant_Modos:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_Pant_Val_Act:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?_Lec_Adc_Modo_Pulv:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ?_Lec_Adc_Modo_Fuga:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_Lec_Adc_Modo_Flujo:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_Salida_Modo_Pulv:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?_Salida_Modo_Fuga:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_Salida_Modo_Flujo:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ?_Detener:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_Pant_Temporizador:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ?_Fin_Proceso:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_LCD_command:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ?_Pant_Menu:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ?_Pant_Selector:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_Pant_Detener:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_Proceso_Fin:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_Adc_Rpm_Read:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_Adc_Pwm_Read:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_Adc_Min_Read:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_Adc_Temp_Read:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_LCD_date:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_main:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_Antirrebote:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_ISR:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ??_ISR:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x0
  1699  0070                     	ds	3
  1700  0073                     ISR@f_pwmS1:
  1701                           
  1702                           ; 1 bytes @ 0x3
  1703  0073                     	ds	1
  1704  0074                     ??_Pines_Init:
  1705  0074                     ??_MEF_Init:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708  0074                     ??_Pwm_init:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     ??_Adc_init:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714  0074                     ??_Pwm1_stop:	
  1715                           ; 1 bytes @ 0x4
  1716                           
  1717  0074                     ??_Salida_Modo_Fuga:	
  1718                           ; 1 bytes @ 0x4
  1719                           
  1720  0074                     ??_Salida_Modo_Flujo:	
  1721                           ; 1 bytes @ 0x4
  1722                           
  1723  0074                     ??_LCD_command:	
  1724                           ; 1 bytes @ 0x4
  1725                           
  1726  0074                     ??_LCD_date:	
  1727                           ; 1 bytes @ 0x4
  1728                           
  1729  0074                     ??_isdigit:	
  1730                           ; 1 bytes @ 0x4
  1731                           
  1732  0074                     ??___wmul:	
  1733                           ; 1 bytes @ 0x4
  1734                           
  1735  0074                     ??___lwdiv:	
  1736                           ; 1 bytes @ 0x4
  1737                           
  1738  0074                     ??___lwmod:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0074                     ??___lwtoft:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0074                     ?_Adc:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0074                     ___lbtoft@c:	
  1748                           ; 2 bytes @ 0x4
  1749                           
  1750  0074                     ___lwmod@counter:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0074                     _isdigit$1337:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0074                     ___wmul@product:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x4
  1761  0074                     	ds	1
  1762  0075                     isdigit@c:
  1763                           
  1764                           ; 1 bytes @ 0x5
  1765  0075                     	ds	1
  1766  0076                     ??_Select_Modo:
  1767  0076                     ??_Pant_Modos:	
  1768                           ; 1 bytes @ 0x6
  1769                           
  1770  0076                     ??_Lec_Adc_Modo_Pulv:	
  1771                           ; 1 bytes @ 0x6
  1772                           
  1773  0076                     ??_Lec_Adc_Modo_Fuga:	
  1774                           ; 1 bytes @ 0x6
  1775                           
  1776  0076                     ??_Lec_Adc_Modo_Flujo:	
  1777                           ; 1 bytes @ 0x6
  1778                           
  1779  0076                     ??_Salida_Modo_Pulv:	
  1780                           ; 1 bytes @ 0x6
  1781                           
  1782  0076                     ??_Pant_Menu:	
  1783                           ; 1 bytes @ 0x6
  1784                           
  1785  0076                     ??_Pant_Selector:	
  1786                           ; 1 bytes @ 0x6
  1787                           
  1788  0076                     ??_Pant_Detener:	
  1789                           ; 1 bytes @ 0x6
  1790                           
  1791  0076                     ??_Proceso_Fin:	
  1792                           ; 1 bytes @ 0x6
  1793                           
  1794  0076                     ??_Adc_Pwm_Read:	
  1795                           ; 1 bytes @ 0x6
  1796                           
  1797  0076                     ??_Adc_Min_Read:	
  1798                           ; 1 bytes @ 0x6
  1799                           
  1800  0076                     ??_Adc_Temp_Read:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803  0076                     ??_Pwm1_init:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806  0076                     ??_Pwm1:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809  0076                     ??_LCD_xy:	
  1810                           ; 1 bytes @ 0x6
  1811                           
  1812  0076                     ??_main:	
  1813                           ; 1 bytes @ 0x6
  1814                           
  1815  0076                     ??___awtoft:	
  1816                           ; 1 bytes @ 0x6
  1817                           
  1818                           
  1819                           	psect	cstackBANK0
  1820  0020                     __pcstackBANK0:	
  1821                           ; 1 bytes @ 0x6
  1822                           
  1823  0020                     ??_Antirrebote:
  1824  0020                     ??_Adc:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827  0020                     ?___lwdiv:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830  0020                     ?___ftpack:	
  1831                           ; 2 bytes @ 0x0
  1832                           
  1833  0020                     LCD_command@cmd:	
  1834                           ; 3 bytes @ 0x0
  1835                           
  1836  0020                     LCD_date@date:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839  0020                     ___lwdiv@divisor:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842  0020                     ___ftpack@arg:	
  1843                           ; 2 bytes @ 0x0
  1844                           
  1845                           
  1846                           ; 3 bytes @ 0x0
  1847  0020                     	ds	1
  1848  0021                     ??_LCD_init:
  1849  0021                     ?_LCD_character:	
  1850                           ; 1 bytes @ 0x1
  1851                           
  1852  0021                     ?_LCD_array:	
  1853                           ; 1 bytes @ 0x1
  1854                           
  1855  0021                     ?_LCD_xy:	
  1856                           ; 1 bytes @ 0x1
  1857                           
  1858  0021                     LCD_character@caracter:	
  1859                           ; 1 bytes @ 0x1
  1860                           
  1861  0021                     LCD_array@x:	
  1862                           ; 1 bytes @ 0x1
  1863                           
  1864  0021                     LCD_xy@x:	
  1865                           ; 2 bytes @ 0x1
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x1
  1869  0021                     	ds	1
  1870  0022                     ??_LCD_character:
  1871  0022                     Adc@channel:	
  1872                           ; 1 bytes @ 0x2
  1873                           
  1874  0022                     ___lwdiv@dividend:	
  1875                           ; 1 bytes @ 0x2
  1876                           
  1877                           
  1878                           ; 2 bytes @ 0x2
  1879  0022                     	ds	1
  1880  0023                     LCD_init@i:
  1881  0023                     LCD_character@adress:	
  1882                           ; 1 bytes @ 0x3
  1883                           
  1884  0023                     ___ftpack@exp:	
  1885                           ; 1 bytes @ 0x3
  1886                           
  1887  0023                     LCD_array@y:	
  1888                           ; 1 bytes @ 0x3
  1889                           
  1890  0023                     LCD_xy@y:	
  1891                           ; 2 bytes @ 0x3
  1892                           
  1893  0023                     Adc@convertion:	
  1894                           ; 2 bytes @ 0x3
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0x3
  1898  0023                     	ds	1
  1899  0024                     LCD_character@i:
  1900  0024                     ___ftpack@sign:	
  1901                           ; 1 bytes @ 0x4
  1902                           
  1903  0024                     ___lwdiv@counter:	
  1904                           ; 1 bytes @ 0x4
  1905                           
  1906                           
  1907                           ; 1 bytes @ 0x4
  1908  0024                     	ds	1
  1909  0025                     ??___ftpack:
  1910  0025                     LCD_array@date:	
  1911                           ; 1 bytes @ 0x5
  1912                           
  1913  0025                     ___lwdiv@quotient:	
  1914                           ; 2 bytes @ 0x5
  1915                           
  1916                           
  1917                           ; 2 bytes @ 0x5
  1918  0025                     	ds	2
  1919  0027                     ??_LCD_array:
  1920  0027                     ?___wmul:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923  0027                     ?___lwmod:	
  1924                           ; 2 bytes @ 0x7
  1925                           
  1926  0027                     ___wmul@multiplier:	
  1927                           ; 2 bytes @ 0x7
  1928                           
  1929  0027                     ___lwmod@divisor:	
  1930                           ; 2 bytes @ 0x7
  1931                           
  1932                           
  1933                           ; 2 bytes @ 0x7
  1934  0027                     	ds	1
  1935  0028                     ?___awtoft:
  1936  0028                     ?___lbtoft:	
  1937                           ; 3 bytes @ 0x8
  1938                           
  1939  0028                     ?___lwtoft:	
  1940                           ; 3 bytes @ 0x8
  1941                           
  1942  0028                     ___awtoft@c:	
  1943                           ; 3 bytes @ 0x8
  1944                           
  1945  0028                     ___lwtoft@c:	
  1946                           ; 2 bytes @ 0x8
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x8
  1950  0028                     	ds	1
  1951  0029                     ??_Pant_Inicio:
  1952  0029                     ??_Pant_Pulverizacion:	
  1953                           ; 1 bytes @ 0x9
  1954                           
  1955  0029                     ??_Pant_Fuga:	
  1956                           ; 1 bytes @ 0x9
  1957                           
  1958  0029                     ??_Pant_Flujo:	
  1959                           ; 1 bytes @ 0x9
  1960                           
  1961  0029                     ??_Detener:	
  1962                           ; 1 bytes @ 0x9
  1963                           
  1964  0029                     ??_Fin_Proceso:	
  1965                           ; 1 bytes @ 0x9
  1966                           
  1967  0029                     ___wmul@multiplicand:	
  1968                           ; 1 bytes @ 0x9
  1969                           
  1970  0029                     ___lwmod@dividend:	
  1971                           ; 2 bytes @ 0x9
  1972                           
  1973                           
  1974                           ; 2 bytes @ 0x9
  1975  0029                     	ds	2
  1976  002B                     ??___lbtoft:
  1977  002B                     ?_sprintf:	
  1978                           ; 1 bytes @ 0xB
  1979                           
  1980  002B                     ___awtoft@sign:	
  1981                           ; 2 bytes @ 0xB
  1982                           
  1983  002B                     sprintf@f:	
  1984                           ; 1 bytes @ 0xB
  1985                           
  1986                           
  1987                           ; 2 bytes @ 0xB
  1988  002B                     	ds	1
  1989  002C                     ?___ftmul:
  1990  002C                     Detener@i:	
  1991                           ; 3 bytes @ 0xC
  1992                           
  1993  002C                     Fin_Proceso@i:	
  1994                           ; 1 bytes @ 0xC
  1995                           
  1996  002C                     ___ftmul@f1:	
  1997                           ; 1 bytes @ 0xC
  1998                           
  1999                           
  2000                           ; 3 bytes @ 0xC
  2001  002C                     	ds	1
  2002  002D                     Pant_Inicio@caracter1:
  2003                           
  2004                           ; 8 bytes @ 0xD
  2005  002D                     	ds	2
  2006  002F                     ??_sprintf:
  2007  002F                     ___ftmul@f2:	
  2008                           ; 1 bytes @ 0xF
  2009                           
  2010                           
  2011                           ; 3 bytes @ 0xF
  2012  002F                     	ds	3
  2013  0032                     ??___ftmul:
  2014                           
  2015                           ; 1 bytes @ 0x12
  2016  0032                     	ds	1
  2017  0033                     sprintf@prec:
  2018                           
  2019                           ; 1 bytes @ 0x13
  2020  0033                     	ds	1
  2021  0034                     sprintf@ap:
  2022                           
  2023                           ; 1 bytes @ 0x14
  2024  0034                     	ds	1
  2025  0035                     ___ftmul@exp:
  2026  0035                     sprintf@val:	
  2027                           ; 1 bytes @ 0x15
  2028                           
  2029  0035                     Pant_Inicio@caracter:	
  2030                           ; 2 bytes @ 0x15
  2031                           
  2032                           
  2033                           ; 8 bytes @ 0x15
  2034  0035                     	ds	1
  2035  0036                     ___ftmul@f3_as_product:
  2036                           
  2037                           ; 3 bytes @ 0x16
  2038  0036                     	ds	1
  2039  0037                     sprintf@flag:
  2040                           
  2041                           ; 1 bytes @ 0x17
  2042  0037                     	ds	1
  2043  0038                     sprintf@width:
  2044                           
  2045                           ; 2 bytes @ 0x18
  2046  0038                     	ds	1
  2047  0039                     ___ftmul@cntr:
  2048                           
  2049                           ; 1 bytes @ 0x19
  2050  0039                     	ds	1
  2051  003A                     sprintf@c:
  2052  003A                     ___ftmul@sign:	
  2053                           ; 1 bytes @ 0x1A
  2054                           
  2055                           
  2056                           ; 1 bytes @ 0x1A
  2057  003A                     	ds	1
  2058  003B                     ?___ftdiv:
  2059  003B                     sprintf@sp:	
  2060                           ; 3 bytes @ 0x1B
  2061                           
  2062  003B                     ___ftdiv@f2:	
  2063                           ; 1 bytes @ 0x1B
  2064                           
  2065                           
  2066                           ; 3 bytes @ 0x1B
  2067  003B                     	ds	1
  2068  003C                     ??_Pant_Val_Act:
  2069  003C                     ??_Pant_Temporizador:	
  2070                           ; 1 bytes @ 0x1C
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0x1C
  2074  003C                     	ds	2
  2075  003E                     ___ftdiv@f1:
  2076  003E                     Pant_Val_Act@buffer:	
  2077                           ; 3 bytes @ 0x1E
  2078                           
  2079  003E                     Pant_Temporizador@buffer:	
  2080                           ; 20 bytes @ 0x1E
  2081                           
  2082                           
  2083                           ; 20 bytes @ 0x1E
  2084  003E                     	ds	3
  2085  0041                     ??___ftdiv:
  2086                           
  2087                           ; 1 bytes @ 0x21
  2088  0041                     	ds	3
  2089  0044                     ___ftdiv@cntr:
  2090                           
  2091                           ; 1 bytes @ 0x24
  2092  0044                     	ds	1
  2093  0045                     ___ftdiv@f3:
  2094                           
  2095                           ; 3 bytes @ 0x25
  2096  0045                     	ds	3
  2097  0048                     ___ftdiv@exp:
  2098                           
  2099                           ; 1 bytes @ 0x28
  2100  0048                     	ds	1
  2101  0049                     ___ftdiv@sign:
  2102                           
  2103                           ; 1 bytes @ 0x29
  2104  0049                     	ds	1
  2105  004A                     ?___fttol:
  2106  004A                     ___fttol@f1:	
  2107                           ; 4 bytes @ 0x2A
  2108                           
  2109                           
  2110                           ; 3 bytes @ 0x2A
  2111  004A                     	ds	4
  2112  004E                     ??___fttol:
  2113                           
  2114                           ; 1 bytes @ 0x2E
  2115  004E                     	ds	3
  2116  0051                     ___fttol@sign1:
  2117                           
  2118                           ; 1 bytes @ 0x31
  2119  0051                     	ds	1
  2120  0052                     ___fttol@lval:
  2121                           
  2122                           ; 4 bytes @ 0x32
  2123  0052                     	ds	4
  2124  0056                     ___fttol@exp1:
  2125                           
  2126                           ; 1 bytes @ 0x36
  2127  0056                     	ds	1
  2128  0057                     ??_Adc_Rpm_Read:
  2129  0057                     ?_Pwm1_init:	
  2130                           ; 1 bytes @ 0x37
  2131                           
  2132  0057                     ?_Pwm1:	
  2133                           ; 1 bytes @ 0x37
  2134                           
  2135  0057                     Pwm1_init@frecuencia:	
  2136                           ; 1 bytes @ 0x37
  2137                           
  2138  0057                     Pwm1@duty:	
  2139                           ; 2 bytes @ 0x37
  2140                           
  2141  0057                     _Adc_Pwm_Read$1524:	
  2142                           ; 3 bytes @ 0x37
  2143                           
  2144  0057                     _Adc_Min_Read$1525:	
  2145                           ; 3 bytes @ 0x37
  2146                           
  2147  0057                     _Adc_Temp_Read$1526:	
  2148                           ; 3 bytes @ 0x37
  2149                           
  2150                           
  2151                           ; 3 bytes @ 0x37
  2152  0057                     	ds	3
  2153  005A                     _Salida_Modo_Pulv$1522:
  2154                           
  2155                           ; 2 bytes @ 0x3A
  2156  005A                     	ds	2
  2157  005C                     ??_MEF_Subest_Actualizacion:
  2158                           
  2159                           ; 1 bytes @ 0x3C
  2160  005C                     	ds	2
  2161  005E                     ??_MEF_Actualizacion:
  2162                           
  2163                           ; 1 bytes @ 0x3E
  2164  005E                     	ds	2
  2165                           
  2166                           	psect	maintext
  2167  12F4                     __pmaintext:	
  2168 ;;
  2169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2170 ;;
  2171 ;; *************** function _main *****************
  2172 ;; Defined at:
  2173 ;;		line 33 in file "Main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : B00/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels required when called:    8
  2193 ;; This function calls:
  2194 ;;		_Adc_init
  2195 ;;		_LCD_init
  2196 ;;		_MEF_Actualizacion
  2197 ;;		_MEF_Init
  2198 ;;		_Pines_Init
  2199 ;;		_Pwm1_stop
  2200 ;;		_Pwm_init
  2201 ;; This function is called by:
  2202 ;;		Startup code after reset
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _main
  2208  12F4                     _main:
  2209                           
  2210                           ;Main.c: 36:     Pines_Init();
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2214  12F4  160A  118A  2184  160A  118A  	fcall	_Pines_Init
  2215                           
  2216                           ;Main.c: 37:     MEF_Init();
  2217  12F9  160A  118A  20FD  160A  118A  	fcall	_MEF_Init
  2218                           
  2219                           ;Main.c: 38:     LCD_init();
  2220  12FE  120A  158A  2217  160A  118A  	fcall	_LCD_init
  2221                           
  2222                           ;Main.c: 39:     Pwm_init();
  2223  1303  160A  118A  219D  160A  118A  	fcall	_Pwm_init
  2224                           
  2225                           ;Main.c: 40:     Adc_init();
  2226  1308  160A  118A  21FE  160A  118A  	fcall	_Adc_init
  2227                           
  2228                           ;Main.c: 41:     Pwm1_stop();
  2229  130D  160A  118A  2134  160A  118A  	fcall	_Pwm1_stop
  2230                           
  2231                           ;Main.c: 43:     TMR1IE=1,TMR1IF=1;
  2232  1312  1683               	bsf	3,5	;RP0=1, select bank1
  2233  1313  1303               	bcf	3,6	;RP1=0, select bank1
  2234  1314  140C               	bsf	12,0	;volatile
  2235  1315  1283               	bcf	3,5	;RP0=0, select bank0
  2236  1316  1303               	bcf	3,6	;RP1=0, select bank0
  2237  1317  140C               	bsf	12,0	;volatile
  2238                           
  2239                           ;Main.c: 45:     WDTCONbits.SWDTEN = 1;
  2240  1318  1283               	bcf	3,5	;RP0=0, select bank2
  2241  1319  1703               	bsf	3,6	;RP1=1, select bank2
  2242  131A  1405               	bsf	5,0	;volatile
  2243                           
  2244                           ;Main.c: 46:     WDTCONbits.WDTPS = 0b1010;
  2245  131B  0805               	movf	5,w	;volatile
  2246  131C  39E1               	andlw	-31
  2247  131D  3814               	iorlw	20
  2248  131E  0085               	movwf	5	;volatile
  2249  131F                     l5026:
  2250                           
  2251                           ;Main.c: 49:     {;Main.c: 50:         MEF_Actualizacion();
  2252  131F  160A  118A  2663  160A  118A  	fcall	_MEF_Actualizacion
  2253  1324  2B1F               	goto	l5026
  2254  1325                     __end_of_main:
  2255                           
  2256                           	psect	text1
  2257  119D                     __ptext1:	
  2258 ;; *************** function _Pwm_init *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "Pwm_Soft.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _Pwm_init
  2290  119D                     _Pwm_init:
  2291                           
  2292                           ;Pwm_Soft.c: 7:     ANSELHbits.ANS11 = 0;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _Pwm_init: [wreg+status,2+status,0]
  2296  119D  1683               	bsf	3,5	;RP0=1, select bank3
  2297  119E  1703               	bsf	3,6	;RP1=1, select bank3
  2298  119F  1189               	bcf	9,3	;volatile
  2299                           
  2300                           ;Pwm_Soft.c: 10:     T1CONbits.TMR1GE = 0;
  2301  11A0  1283               	bcf	3,5	;RP0=0, select bank0
  2302  11A1  1303               	bcf	3,6	;RP1=0, select bank0
  2303  11A2  1310               	bcf	16,6	;volatile
  2304                           
  2305                           ;Pwm_Soft.c: 11:     T1CONbits.T1SYNC = 1;
  2306  11A3  1510               	bsf	16,2	;volatile
  2307                           
  2308                           ;Pwm_Soft.c: 12:     T1CONbits.TMR1CS = 0;
  2309  11A4  1090               	bcf	16,1	;volatile
  2310                           
  2311                           ;Pwm_Soft.c: 13:     T1CONbits.T1CKPS = 0b01;
  2312  11A5  0810               	movf	16,w	;volatile
  2313  11A6  39CF               	andlw	-49
  2314  11A7  3810               	iorlw	16
  2315  11A8  0090               	movwf	16	;volatile
  2316                           
  2317                           ;Pwm_Soft.c: 14:     T1CONbits.TMR1ON = 1;
  2318  11A9  1410               	bsf	16,0	;volatile
  2319                           
  2320                           ;Pwm_Soft.c: 16:     TMR1 = 65285;
  2321  11AA  30FF               	movlw	255
  2322  11AB  008F               	movwf	15	;volatile
  2323  11AC  3005               	movlw	5
  2324  11AD  008E               	movwf	14	;volatile
  2325                           
  2326                           ;Pwm_Soft.c: 19:     PEIE = 1;
  2327  11AE  170B               	bsf	11,6	;volatile
  2328                           
  2329                           ;Pwm_Soft.c: 20:     GIE = 1;
  2330  11AF  178B               	bsf	11,7	;volatile
  2331                           
  2332                           ;Pwm_Soft.c: 21:     TMR1IE = 0;
  2333  11B0  1683               	bsf	3,5	;RP0=1, select bank1
  2334  11B1  1303               	bcf	3,6	;RP1=0, select bank1
  2335  11B2  100C               	bcf	12,0	;volatile
  2336                           
  2337                           ;Pwm_Soft.c: 22:     TMR1IF = 1;
  2338  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  2339  11B4  1303               	bcf	3,6	;RP1=0, select bank0
  2340  11B5  140C               	bsf	12,0	;volatile
  2341  11B6  0008               	return
  2342  11B7                     __end_of_Pwm_init:
  2343                           
  2344                           	psect	text2
  2345  1184                     __ptext2:	
  2346 ;; *************** function _Pines_Init *****************
  2347 ;; Defined at:
  2348 ;;		line 56 in file "Main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _Pines_Init
  2378  1184                     _Pines_Init:
  2379                           
  2380                           ;Main.c: 59:     TRISAbits.TRISA5 = 0;
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _Pines_Init: [wreg+status,2]
  2384  1184  1683               	bsf	3,5	;RP0=1, select bank1
  2385  1185  1303               	bcf	3,6	;RP1=0, select bank1
  2386  1186  1285               	bcf	5,5	;volatile
  2387                           
  2388                           ;Main.c: 60:     PORTA = 0;
  2389  1187  1283               	bcf	3,5	;RP0=0, select bank0
  2390  1188  1303               	bcf	3,6	;RP1=0, select bank0
  2391  1189  0185               	clrf	5	;volatile
  2392                           
  2393                           ;Main.c: 61:     PORTB = 0;
  2394  118A  0186               	clrf	6	;volatile
  2395                           
  2396                           ;Main.c: 62:     PORTC = 0;
  2397  118B  0187               	clrf	7	;volatile
  2398                           
  2399                           ;Main.c: 63:     TRISB = 0xFF;
  2400  118C  30FF               	movlw	255
  2401  118D  1683               	bsf	3,5	;RP0=1, select bank1
  2402  118E  1303               	bcf	3,6	;RP1=0, select bank1
  2403  118F  0086               	movwf	6	;volatile
  2404                           
  2405                           ;Main.c: 64:     TRISC = 0x00;
  2406  1190  0187               	clrf	7	;volatile
  2407                           
  2408                           ;Main.c: 65:     ANSELHbits.ANS12 = 0;
  2409  1191  1683               	bsf	3,5	;RP0=1, select bank3
  2410  1192  1703               	bsf	3,6	;RP1=1, select bank3
  2411  1193  1209               	bcf	9,4	;volatile
  2412                           
  2413                           ;Main.c: 66:     ANSELHbits.ANS11 = 0;
  2414  1194  1189               	bcf	9,3	;volatile
  2415                           
  2416                           ;Main.c: 67:     ANSELHbits.ANS10 = 0;
  2417  1195  1109               	bcf	9,2	;volatile
  2418                           
  2419                           ;Main.c: 68:     ANSELHbits.ANS8 = 0;
  2420  1196  1009               	bcf	9,0	;volatile
  2421                           
  2422                           ;Main.c: 69:     ANSELHbits.ANS9 = 0;
  2423  1197  1089               	bcf	9,1	;volatile
  2424                           
  2425                           ;Main.c: 70:     ANSELbits.ANS4 = 0;
  2426  1198  1208               	bcf	8,4	;volatile
  2427                           
  2428                           ;Main.c: 72:     TRISBbits.TRISB4 = 0;
  2429  1199  1683               	bsf	3,5	;RP0=1, select bank1
  2430  119A  1303               	bcf	3,6	;RP1=0, select bank1
  2431  119B  1206               	bcf	6,4	;volatile
  2432  119C  0008               	return
  2433  119D                     __end_of_Pines_Init:
  2434                           
  2435                           	psect	text3
  2436  10FD                     __ptext3:	
  2437 ;; *************** function _MEF_Init *****************
  2438 ;; Defined at:
  2439 ;;		line 40 in file "MEF.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		status,2
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _MEF_Init
  2469  10FD                     _MEF_Init:
  2470                           
  2471                           ;MEF.c: 42:     Estado_Actual = ESTADO_INICIO;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _MEF_Init: [status,2]
  2475  10FD  1283               	bcf	3,5	;RP0=0, select bank0
  2476  10FE  1303               	bcf	3,6	;RP1=0, select bank0
  2477  10FF  01E2               	clrf	_Estado_Actual
  2478                           
  2479                           ;MEF.c: 43:     Subestado_Actual = SUBEST_INICIAL;
  2480  1100  1683               	bsf	3,5	;RP0=1, select bank1
  2481  1101  1303               	bcf	3,6	;RP1=0, select bank1
  2482  1102  01B6               	clrf	_Subestado_Actual^(0+128)
  2483  1103  0008               	return
  2484  1104                     __end_of_MEF_Init:
  2485                           
  2486                           	psect	text4
  2487  1663                     __ptext4:	
  2488 ;; *************** function _MEF_Actualizacion *****************
  2489 ;; Defined at:
  2490 ;;		line 48 in file "MEF.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       2       0       0       0
  2507 ;;      Totals:         0       2       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    7
  2511 ;; This function calls:
  2512 ;;		_Antirrebote
  2513 ;;		_MEF_Subest_Actualizacion
  2514 ;;		_Pant_Inicio
  2515 ;;		_Select_Modo
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _MEF_Actualizacion
  2523  1663                     _MEF_Actualizacion:
  2524                           
  2525                           ;MEF.c: 50:     switch(Estado_Actual)
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2529  1663  2EA5               	goto	l5000
  2530  1664                     l4950:
  2531                           
  2532                           ;MEF.c: 53:         {;MEF.c: 54:             Pant_Inicio();
  2533  1664  120A  158A  2462   	fcall	_Pant_Inicio
  2534  1667                     l4952:
  2535                           
  2536                           ;MEF.c: 56:             Estado_Actual = ESTADO_MENU;
  2537  1667  1283               	bcf	3,5	;RP0=0, select bank0
  2538  1668  1303               	bcf	3,6	;RP1=0, select bank0
  2539  1669  01E2               	clrf	_Estado_Actual
  2540  166A  0AE2               	incf	_Estado_Actual,f
  2541                           
  2542                           ;MEF.c: 57:         break;
  2543  166B  0008               	return
  2544  166C                     l4954:
  2545                           
  2546                           ;MEF.c: 60:         {;MEF.c: 61:             Select_Modo();
  2547  166C  160A  118A  229C  160A  118A  	fcall	_Select_Modo
  2548                           
  2549                           ;MEF.c: 63:             if(PORTBbits.RB1 && Modo==1) Estado_Actual = ESTADO_MODO_PULV,An
      +                          tirrebote();
  2550  1671  1283               	bcf	3,5	;RP0=0, select bank0
  2551  1672  1303               	bcf	3,6	;RP1=0, select bank0
  2552  1673  1C86               	btfss	6,1	;volatile
  2553  1674  2E86               	goto	l231
  2554  1675  0365               	decf	_Modo,w
  2555  1676  1D03               	btfss	3,2
  2556  1677  2E86               	goto	l231
  2557  1678  3002               	movlw	2
  2558  1679  2E7F               	goto	L1
  2559  167A                     l4964:
  2560  167A  3002               	movlw	2
  2561  167B  0665               	xorwf	_Modo,w
  2562  167C  1D03               	btfss	3,2
  2563  167D  2E88               	goto	l233
  2564  167E  3003               	movlw	3
  2565  167F                     L1:
  2566  167F  00FF               	movwf	127
  2567  1680  087F               	movf	127,w
  2568  1681  00E2               	movwf	_Estado_Actual
  2569  1682  160A  118A  2247   	fcall	_Antirrebote
  2570  1685  0008               	return
  2571  1686                     l231:	
  2572                           ;MEF.c: 64:             else if(PORTBbits.RB1 && Modo==2) Estado_Actual = ESTADO_MODO_FU
      +                          GA,Antirrebote();
  2573                           
  2574  1686  1886               	btfsc	6,1	;volatile
  2575  1687  2E7A               	goto	l4964
  2576  1688                     l233:	
  2577                           ;MEF.c: 65:             else if(PORTBbits.RB1 && Modo==3) Estado_Actual = ESTADO_MODO_FL
      +                          UJO,Antirrebote();
  2578                           
  2579  1688  1C86               	btfss	6,1	;volatile
  2580  1689  0008               	return
  2581  168A  3003               	movlw	3
  2582  168B  0665               	xorwf	_Modo,w
  2583  168C  1D03               	btfss	3,2
  2584  168D  0008               	return
  2585  168E  3004               	movlw	4
  2586  168F  2E7F               	goto	L1
  2587  1690                     l4976:	
  2588                           ;MEF.c: 66:         break;
  2589                           
  2590                           
  2591                           ;MEF.c: 69:         {;MEF.c: 70:             MEF_Subest_Actualizacion();
  2592  1690  120A  118A  250A  160A  118A  	fcall	_MEF_Subest_Actualizacion
  2593                           
  2594                           ;MEF.c: 72:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2595  1695  0876               	movf	_Reset,w
  2596  1696  1903               	btfsc	3,2
  2597  1697  0008               	return
  2598  1698  3005               	movlw	5
  2599  1699  00FF               	movwf	127
  2600  169A  087F               	movf	127,w
  2601  169B  1283               	bcf	3,5	;RP0=0, select bank0
  2602  169C  1303               	bcf	3,6	;RP1=0, select bank0
  2603  169D  00E2               	movwf	_Estado_Actual
  2604  169E  0008               	return
  2605  169F                     l4982:
  2606  169F                     l4988:	
  2607                           ;MEF.c: 79:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2608                           
  2609                           ;MEF.c: 76:         {;MEF.c: 77:             MEF_Subest_Actualizacion();
  2610                           
  2611  169F  2E90               	goto	l4976
  2612  16A0                     l4994:	
  2613                           ;MEF.c: 86:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2614                           
  2615                           ;MEF.c: 83:         {;MEF.c: 84:             MEF_Subest_Actualizacion();
  2616                           
  2617                           
  2618                           ;MEF.c: 90:         {;MEF.c: 91:             Subestado_Actual = SUBEST_INICIAL;
  2619  16A0  1683               	bsf	3,5	;RP0=1, select bank1
  2620  16A1  1303               	bcf	3,6	;RP1=0, select bank1
  2621  16A2  01B6               	clrf	_Subestado_Actual^(0+128)
  2622                           
  2623                           ;MEF.c: 92:             Reset = 0;
  2624  16A3  01F6               	clrf	_Reset
  2625  16A4  2E67               	goto	l4952
  2626  16A5                     l5000:
  2627  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2628  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2629  16A7  0862               	movf	_Estado_Actual,w
  2630  16A8  00DE               	movwf	??_MEF_Actualizacion
  2631  16A9  01DF               	clrf	??_MEF_Actualizacion+1
  2632                           
  2633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 1, Range of values is 0 to 0
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            4     3 (average)
  2639                           ; direct_byte           11     8 (fixed)
  2640                           ; jumptable            260     6 (fixed)
  2641                           ;	Chosen strategy is simple_byte
  2642  16AA  085F               	movf	??_MEF_Actualizacion+1,w
  2643  16AB  3A00               	xorlw	0	; case 0
  2644  16AC  1903               	skipnz
  2645  16AD  2EAF               	goto	l5162
  2646  16AE  2EC3               	goto	l243
  2647  16AF                     l5162:
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 6, Range of values is 0 to 5
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           19    10 (average)
  2654                           ; direct_byte           26     8 (fixed)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  16AF  085E               	movf	??_MEF_Actualizacion,w
  2658  16B0  3A00               	xorlw	0	; case 0
  2659  16B1  1903               	skipnz
  2660  16B2  2E64               	goto	l4950
  2661  16B3  3A01               	xorlw	1	; case 1
  2662  16B4  1903               	skipnz
  2663  16B5  2E6C               	goto	l4954
  2664  16B6  3A03               	xorlw	3	; case 2
  2665  16B7  1903               	skipnz
  2666  16B8  2E90               	goto	l4976
  2667  16B9  3A01               	xorlw	1	; case 3
  2668  16BA  1903               	skipnz
  2669  16BB  2E9F               	goto	l4982
  2670  16BC  3A07               	xorlw	7	; case 4
  2671  16BD  1903               	skipnz
  2672  16BE  2E9F               	goto	l4988
  2673  16BF  3A01               	xorlw	1	; case 5
  2674  16C0  1903               	skipnz
  2675  16C1  2EA0               	goto	l4994
  2676  16C2  2EC3               	goto	l243
  2677  16C3                     l243:
  2678  16C3  0008               	return
  2679  16C4                     __end_of_MEF_Actualizacion:
  2680                           
  2681                           	psect	text5
  2682  129C                     __ptext5:	
  2683 ;; *************** function _Select_Modo *****************
  2684 ;; Defined at:
  2685 ;;		line 14 in file "Menu_Modo.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    5
  2706 ;; This function calls:
  2707 ;;		_Antirrebote
  2708 ;;		_Pant_Menu
  2709 ;;		_Pant_Selector
  2710 ;; This function is called by:
  2711 ;;		_MEF_Actualizacion
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Select_Modo
  2717  129C                     _Select_Modo:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _Select_Modo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2721  129C  0064               	clrwdt	;# 
  2722                           
  2723                           ;Menu_Modo.c: 18:     if(Mostrar) Pant_Menu(),Mostrar=0;
  2724  129D  1683               	bsf	3,5	;RP0=1, select bank1
  2725  129E  1303               	bcf	3,6	;RP1=0, select bank1
  2726  129F  083A               	movf	_Mostrar^(0+128),w
  2727  12A0  1903               	btfsc	3,2
  2728  12A1  2AAA               	goto	l4794
  2729  12A2  160A  118A  2506  160A  118A  	fcall	_Pant_Menu
  2730  12A7  1683               	bsf	3,5	;RP0=1, select bank1
  2731  12A8  1303               	bcf	3,6	;RP1=0, select bank1
  2732  12A9  01BA               	clrf	_Mostrar^(0+128)
  2733  12AA                     l4794:
  2734                           
  2735                           ;Menu_Modo.c: 20:     if(PORTBbits.RB3 || Modo==0)
  2736  12AA  1283               	bcf	3,5	;RP0=0, select bank0
  2737  12AB  1303               	bcf	3,6	;RP1=0, select bank0
  2738  12AC  1986               	btfsc	6,3	;volatile
  2739  12AD  2AB1               	goto	l4798
  2740  12AE  0865               	movf	_Modo,w
  2741  12AF  1D03               	btfss	3,2
  2742  12B0  0008               	return
  2743  12B1                     l4798:
  2744                           
  2745                           ;Menu_Modo.c: 21:     {;Menu_Modo.c: 22:         Modo+=1;
  2746  12B1  3001               	movlw	1
  2747  12B2  00FF               	movwf	127
  2748  12B3  087F               	movf	127,w
  2749  12B4  07E5               	addwf	_Modo,f
  2750                           
  2751                           ;Menu_Modo.c: 23:         if(Modo>=5||Modo<1) Modo=1;
  2752  12B5  3005               	movlw	5
  2753  12B6  0265               	subwf	_Modo,w
  2754  12B7  1803               	skipnc
  2755  12B8  2ABC               	goto	l329
  2756  12B9  0865               	movf	_Modo,w
  2757  12BA  1D03               	btfss	3,2
  2758  12BB  2ABE               	goto	l4804
  2759  12BC                     l329:
  2760  12BC  01E5               	clrf	_Modo
  2761  12BD  0AE5               	incf	_Modo,f
  2762  12BE                     l4804:
  2763                           
  2764                           ;Menu_Modo.c: 24:         Pant_Selector(),Antirrebote();
  2765  12BE  120A  158A  23C5  160A  118A  	fcall	_Pant_Selector
  2766  12C3  160A  118A  2247   	fcall	_Antirrebote
  2767  12C6  0008               	return
  2768  12C7                     __end_of_Select_Modo:
  2769                           
  2770                           	psect	text6
  2771  0BC5                     __ptext6:	
  2772 ;; *************** function _Pant_Selector *****************
  2773 ;; Defined at:
  2774 ;;		line 44 in file "Display_Lcd.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    4
  2795 ;; This function calls:
  2796 ;;		_LCD_array
  2797 ;; This function is called by:
  2798 ;;		_Select_Modo
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _Pant_Selector
  2804  0BC5                     _Pant_Selector:
  2805                           
  2806                           ;Display_Lcd.c: 46:     if(Modo == 1) LCD_array(4,1," "),LCD_array(1,1,">");
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _Pant_Selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2810  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0BC7  0365               	decf	_Modo,w
  2813  0BC8  1D03               	btfss	3,2
  2814  0BC9  2BED               	goto	l4732
  2815  0BCA  3004               	movlw	4
  2816  0BCB  00A1               	movwf	LCD_array@x
  2817  0BCC  3000               	movlw	0
  2818  0BCD  00A2               	movwf	LCD_array@x+1
  2819  0BCE  3001               	movlw	1
  2820  0BCF  00A3               	movwf	LCD_array@y
  2821  0BD0  3000               	movlw	0
  2822  0BD1  00A4               	movwf	LCD_array@y+1
  2823  0BD2  302F               	movlw	low ((STR_38+19)| (0+32768))
  2824  0BD3  00A5               	movwf	LCD_array@date
  2825  0BD4  3084               	movlw	high ((STR_38+19)| (0+32768))
  2826  0BD5  00A6               	movwf	LCD_array@date+1
  2827  0BD6  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2828  0BDB  3001               	movlw	1
  2829  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0BDE  00A1               	movwf	LCD_array@x
  2832  0BDF  3000               	movlw	0
  2833  0BE0  00A2               	movwf	LCD_array@x+1
  2834  0BE1  3001               	movlw	1
  2835  0BE2  00A3               	movwf	LCD_array@y
  2836  0BE3  3000               	movlw	0
  2837  0BE4  00A4               	movwf	LCD_array@y+1
  2838  0BE5  3006               	movlw	low (STR_5| (0+32768))
  2839  0BE6  00A5               	movwf	LCD_array@date
  2840  0BE7  3085               	movlw	high (STR_5| (0+32768))
  2841  0BE8  00A6               	movwf	LCD_array@date+1
  2842  0BE9  160A  118A  2728   	fcall	_LCD_array
  2843  0BEC  0008               	return
  2844  0BED                     l4732:
  2845  0BED  3002               	movlw	2
  2846  0BEE  0665               	xorwf	_Modo,w
  2847  0BEF  1D03               	btfss	3,2
  2848  0BF0  2C14               	goto	l4736
  2849  0BF1  3001               	movlw	1
  2850  0BF2  00A1               	movwf	LCD_array@x
  2851  0BF3  3000               	movlw	0
  2852  0BF4  00A2               	movwf	LCD_array@x+1
  2853  0BF5  3001               	movlw	1
  2854  0BF6  00A3               	movwf	LCD_array@y
  2855  0BF7  3000               	movlw	0
  2856  0BF8  00A4               	movwf	LCD_array@y+1
  2857  0BF9  302F               	movlw	low ((STR_38+19)| (0+32768))
  2858  0BFA  00A5               	movwf	LCD_array@date
  2859  0BFB  3084               	movlw	high ((STR_38+19)| (0+32768))
  2860  0BFC  00A6               	movwf	LCD_array@date+1
  2861  0BFD  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2862  0C02  3002               	movlw	2
  2863  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0C05  00A1               	movwf	LCD_array@x
  2866  0C06  3000               	movlw	0
  2867  0C07  00A2               	movwf	LCD_array@x+1
  2868  0C08  3001               	movlw	1
  2869  0C09  00A3               	movwf	LCD_array@y
  2870  0C0A  3000               	movlw	0
  2871  0C0B  00A4               	movwf	LCD_array@y+1
  2872  0C0C  3006               	movlw	low (STR_5| (0+32768))
  2873  0C0D  00A5               	movwf	LCD_array@date
  2874  0C0E  3085               	movlw	high (STR_5| (0+32768))
  2875  0C0F  00A6               	movwf	LCD_array@date+1
  2876  0C10  160A  118A  2728   	fcall	_LCD_array
  2877  0C13  0008               	return
  2878  0C14                     l4736:
  2879  0C14  3003               	movlw	3
  2880  0C15  0665               	xorwf	_Modo,w
  2881  0C16  1D03               	btfss	3,2
  2882  0C17  2C3B               	goto	l4740
  2883  0C18  3002               	movlw	2
  2884  0C19  00A1               	movwf	LCD_array@x
  2885  0C1A  3000               	movlw	0
  2886  0C1B  00A2               	movwf	LCD_array@x+1
  2887  0C1C  3001               	movlw	1
  2888  0C1D  00A3               	movwf	LCD_array@y
  2889  0C1E  3000               	movlw	0
  2890  0C1F  00A4               	movwf	LCD_array@y+1
  2891  0C20  302F               	movlw	low ((STR_38+19)| (0+32768))
  2892  0C21  00A5               	movwf	LCD_array@date
  2893  0C22  3084               	movlw	high ((STR_38+19)| (0+32768))
  2894  0C23  00A6               	movwf	LCD_array@date+1
  2895  0C24  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2896  0C29  3003               	movlw	3
  2897  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0C2C  00A1               	movwf	LCD_array@x
  2900  0C2D  3000               	movlw	0
  2901  0C2E  00A2               	movwf	LCD_array@x+1
  2902  0C2F  3001               	movlw	1
  2903  0C30  00A3               	movwf	LCD_array@y
  2904  0C31  3000               	movlw	0
  2905  0C32  00A4               	movwf	LCD_array@y+1
  2906  0C33  3006               	movlw	low (STR_5| (0+32768))
  2907  0C34  00A5               	movwf	LCD_array@date
  2908  0C35  3085               	movlw	high (STR_5| (0+32768))
  2909  0C36  00A6               	movwf	LCD_array@date+1
  2910  0C37  160A  118A  2728   	fcall	_LCD_array
  2911  0C3A  0008               	return
  2912  0C3B                     l4740:
  2913  0C3B  3004               	movlw	4
  2914  0C3C  0665               	xorwf	_Modo,w
  2915  0C3D  1D03               	btfss	3,2
  2916  0C3E  0008               	return
  2917  0C3F  3003               	movlw	3
  2918  0C40  00A1               	movwf	LCD_array@x
  2919  0C41  3000               	movlw	0
  2920  0C42  00A2               	movwf	LCD_array@x+1
  2921  0C43  3001               	movlw	1
  2922  0C44  00A3               	movwf	LCD_array@y
  2923  0C45  3000               	movlw	0
  2924  0C46  00A4               	movwf	LCD_array@y+1
  2925  0C47  302F               	movlw	low ((STR_38+19)| (0+32768))
  2926  0C48  00A5               	movwf	LCD_array@date
  2927  0C49  3084               	movlw	high ((STR_38+19)| (0+32768))
  2928  0C4A  00A6               	movwf	LCD_array@date+1
  2929  0C4B  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2930  0C50  3004               	movlw	4
  2931  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0C53  00A1               	movwf	LCD_array@x
  2934  0C54  3000               	movlw	0
  2935  0C55  00A2               	movwf	LCD_array@x+1
  2936  0C56  3001               	movlw	1
  2937  0C57  00A3               	movwf	LCD_array@y
  2938  0C58  3000               	movlw	0
  2939  0C59  00A4               	movwf	LCD_array@y+1
  2940  0C5A  3006               	movlw	low (STR_5| (0+32768))
  2941  0C5B  00A5               	movwf	LCD_array@date
  2942  0C5C  3085               	movlw	high (STR_5| (0+32768))
  2943  0C5D  00A6               	movwf	LCD_array@date+1
  2944  0C5E  160A  118A  2728   	fcall	_LCD_array
  2945  0C61  0008               	return
  2946  0C62                     __end_of_Pant_Selector:
  2947                           
  2948                           	psect	text7
  2949  1506                     __ptext7:	
  2950 ;; *************** function _Pant_Menu *****************
  2951 ;; Defined at:
  2952 ;;		line 54 in file "Display_Lcd.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    4
  2973 ;; This function calls:
  2974 ;;		_LCD_array
  2975 ;; This function is called by:
  2976 ;;		_Select_Modo
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _Pant_Menu
  2982  1506                     _Pant_Menu:
  2983                           
  2984                           ;Display_Lcd.c: 56:     LCD_array(1,3,"PULVERIZACION");
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _Pant_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2988  1506  3001               	movlw	1
  2989  1507  1283               	bcf	3,5	;RP0=0, select bank0
  2990  1508  1303               	bcf	3,6	;RP1=0, select bank0
  2991  1509  00A1               	movwf	LCD_array@x
  2992  150A  3000               	movlw	0
  2993  150B  00A2               	movwf	LCD_array@x+1
  2994  150C  3003               	movlw	3
  2995  150D  00A3               	movwf	LCD_array@y
  2996  150E  3000               	movlw	0
  2997  150F  00A4               	movwf	LCD_array@y+1
  2998  1510  3088               	movlw	low ((STR_33+4)| (0+32768))
  2999  1511  00A5               	movwf	LCD_array@date
  3000  1512  3084               	movlw	high ((STR_33+4)| (0+32768))
  3001  1513  00A6               	movwf	LCD_array@date+1
  3002  1514  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3003                           
  3004                           ;Display_Lcd.c: 57:     LCD_array(2,3,"FUGA");
  3005  1519  3002               	movlw	2
  3006  151A  1283               	bcf	3,5	;RP0=0, select bank0
  3007  151B  1303               	bcf	3,6	;RP1=0, select bank0
  3008  151C  00A1               	movwf	LCD_array@x
  3009  151D  3000               	movlw	0
  3010  151E  00A2               	movwf	LCD_array@x+1
  3011  151F  3003               	movlw	3
  3012  1520  00A3               	movwf	LCD_array@y
  3013  1521  3000               	movlw	0
  3014  1522  00A4               	movwf	LCD_array@y+1
  3015  1523  30E5               	movlw	low ((STR_35+4)| (0+32768))
  3016  1524  00A5               	movwf	LCD_array@date
  3017  1525  3084               	movlw	high ((STR_35+4)| (0+32768))
  3018  1526  00A6               	movwf	LCD_array@date+1
  3019  1527  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3020                           
  3021                           ;Display_Lcd.c: 58:     LCD_array(3,3,"FLUJO");
  3022  152C  3003               	movlw	3
  3023  152D  1283               	bcf	3,5	;RP0=0, select bank0
  3024  152E  1303               	bcf	3,6	;RP1=0, select bank0
  3025  152F  00A1               	movwf	LCD_array@x
  3026  1530  3000               	movlw	0
  3027  1531  00A2               	movwf	LCD_array@x+1
  3028  1532  3003               	movlw	3
  3029  1533  00A3               	movwf	LCD_array@y
  3030  1534  3000               	movlw	0
  3031  1535  00A4               	movwf	LCD_array@y+1
  3032  1536  30DB               	movlw	low ((STR_37+4)| (0+32768))
  3033  1537  00A5               	movwf	LCD_array@date
  3034  1538  3084               	movlw	high ((STR_37+4)| (0+32768))
  3035  1539  00A6               	movwf	LCD_array@date+1
  3036  153A  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3037                           
  3038                           ;Display_Lcd.c: 59:     LCD_array(4,3,"LIMP. ULTRASONIDO");
  3039  153F  3004               	movlw	4
  3040  1540  1283               	bcf	3,5	;RP0=0, select bank0
  3041  1541  1303               	bcf	3,6	;RP1=0, select bank0
  3042  1542  00A1               	movwf	LCD_array@x
  3043  1543  3000               	movlw	0
  3044  1544  00A2               	movwf	LCD_array@x+1
  3045  1545  3003               	movlw	3
  3046  1546  00A3               	movwf	LCD_array@y
  3047  1547  3000               	movlw	0
  3048  1548  00A4               	movwf	LCD_array@y+1
  3049  1549  3096               	movlw	low (STR_17| (0+32768))
  3050  154A  00A5               	movwf	LCD_array@date
  3051  154B  3084               	movlw	high (STR_17| (0+32768))
  3052  154C  00A6               	movwf	LCD_array@date+1
  3053  154D  160A  118A  2728   	fcall	_LCD_array
  3054  1550  0008               	return
  3055  1551                     __end_of_Pant_Menu:
  3056                           
  3057                           	psect	text8
  3058  0C62                     __ptext8:	
  3059 ;; *************** function _Pant_Inicio *****************
  3060 ;; Defined at:
  3061 ;;		line 8 in file "Display_Lcd.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  caracter        8   21[BANK0 ] unsigned char [8]
  3066 ;;  caracter1       8   13[BANK0 ] unsigned char [8]
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0      16       0       0       0
  3078 ;;      Temps:          0       4       0       0       0
  3079 ;;      Totals:         0      20       0       0       0
  3080 ;;Total ram usage:       20 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    4
  3083 ;; This function calls:
  3084 ;;		_LCD_array
  3085 ;;		_LCD_character
  3086 ;;		_LCD_command
  3087 ;; This function is called by:
  3088 ;;		_MEF_Actualizacion
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _Pant_Inicio
  3094  0C62                     _Pant_Inicio:
  3095                           
  3096                           ;Display_Lcd.c: 11:     char caracter1[8] =
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3100  0C62  302D               	movlw	Pant_Inicio@caracter1& (0+255)
  3101  0C63  0084               	movwf	4
  3102  0C64  30C8               	movlw	low Pant_Inicio@F1334
  3103  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0C67  00A9               	movwf	??_Pant_Inicio
  3106  0C68  0804               	movf	4,w
  3107  0C69  00AA               	movwf	??_Pant_Inicio+1
  3108  0C6A  3008               	movlw	8
  3109  0C6B  00AB               	movwf	??_Pant_Inicio+2
  3110  0C6C                     u4860:
  3111  0C6C  0829               	movf	??_Pant_Inicio,w
  3112  0C6D  0084               	movwf	4
  3113  0C6E  1383               	bcf	3,7	;select IRP bank1
  3114  0C6F  0800               	movf	0,w
  3115  0C70  00AC               	movwf	??_Pant_Inicio+3
  3116  0C71  0AA9               	incf	??_Pant_Inicio,f
  3117  0C72  082A               	movf	??_Pant_Inicio+1,w
  3118  0C73  0084               	movwf	4
  3119  0C74  082C               	movf	??_Pant_Inicio+3,w
  3120  0C75  0080               	movwf	0
  3121  0C76  0AAA               	incf	??_Pant_Inicio+1,f
  3122  0C77  0BAB               	decfsz	??_Pant_Inicio+2,f
  3123  0C78  2C6C               	goto	u4860
  3124                           
  3125                           ;Display_Lcd.c: 22:     LCD_character(0x01,caracter1);
  3126  0C79  302D               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  3127  0C7A  00FF               	movwf	127
  3128  0C7B  087F               	movf	127,w
  3129  0C7C  00A1               	movwf	LCD_character@caracter
  3130  0C7D  3001               	movlw	1
  3131  0C7E  160A  118A  22C7  120A  158A  	fcall	_LCD_character
  3132                           
  3133                           ;Display_Lcd.c: 25:     char caracter[8] = {0,0,0,0,0,0,0,0};
  3134  0C83  3035               	movlw	Pant_Inicio@caracter& (0+255)
  3135  0C84  0084               	movwf	4
  3136  0C85  3008               	movlw	8
  3137  0C86  00FF               	movwf	127
  3138  0C87                     u4870:
  3139  0C87  1383               	bcf	3,7	;select IRP bank0
  3140  0C88  0180               	clrf	0
  3141  0C89  0A84               	incf	4,f
  3142  0C8A  0BFF               	decfsz	127,f
  3143  0C8B  2C87               	goto	u4870
  3144                           
  3145                           ;Display_Lcd.c: 26:     LCD_character(0x00,caracter);
  3146  0C8C  3035               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  3147  0C8D  00FF               	movwf	127
  3148  0C8E  087F               	movf	127,w
  3149  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0C91  00A1               	movwf	LCD_character@caracter
  3152  0C92  3000               	movlw	0
  3153  0C93  160A  118A  22C7  120A  158A  	fcall	_LCD_character
  3154                           
  3155                           ;Display_Lcd.c: 29:     LCD_command(0x01);
  3156  0C98  3001               	movlw	1
  3157  0C99  120A  158A  2680  120A  158A  	fcall	_LCD_command
  3158                           
  3159                           ;Display_Lcd.c: 30:     LCD_array(1,1,"====================");
  3160  0C9E  3001               	movlw	1
  3161  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0CA1  00A1               	movwf	LCD_array@x
  3164  0CA2  3000               	movlw	0
  3165  0CA3  00A2               	movwf	LCD_array@x+1
  3166  0CA4  3001               	movlw	1
  3167  0CA5  00A3               	movwf	LCD_array@y
  3168  0CA6  3000               	movlw	0
  3169  0CA7  00A4               	movwf	LCD_array@y+1
  3170  0CA8  305B               	movlw	low (STR_1| (0+32768))
  3171  0CA9  00A5               	movwf	LCD_array@date
  3172  0CAA  3084               	movlw	high (STR_1| (0+32768))
  3173  0CAB  00A6               	movwf	LCD_array@date+1
  3174  0CAC  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3175                           
  3176                           ;Display_Lcd.c: 31:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  3177  0CB1  3002               	movlw	2
  3178  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0CB4  00A1               	movwf	LCD_array@x
  3181  0CB5  3000               	movlw	0
  3182  0CB6  00A2               	movwf	LCD_array@x+1
  3183  0CB7  3001               	movlw	1
  3184  0CB8  00A3               	movwf	LCD_array@y
  3185  0CB9  3000               	movlw	0
  3186  0CBA  00A4               	movwf	LCD_array@y+1
  3187  0CBB  3046               	movlw	low (STR_2| (0+32768))
  3188  0CBC  00A5               	movwf	LCD_array@date
  3189  0CBD  3084               	movlw	high (STR_2| (0+32768))
  3190  0CBE  00A6               	movwf	LCD_array@date+1
  3191  0CBF  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3192                           
  3193                           ;Display_Lcd.c: 32:     LCD_array(3,1,"   DE INYECTORES    ");
  3194  0CC4  3003               	movlw	3
  3195  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0CC7  00A1               	movwf	LCD_array@x
  3198  0CC8  3000               	movlw	0
  3199  0CC9  00A2               	movwf	LCD_array@x+1
  3200  0CCA  3001               	movlw	1
  3201  0CCB  00A3               	movwf	LCD_array@y
  3202  0CCC  3000               	movlw	0
  3203  0CCD  00A4               	movwf	LCD_array@y+1
  3204  0CCE  3031               	movlw	low (STR_3| (0+32768))
  3205  0CCF  00A5               	movwf	LCD_array@date
  3206  0CD0  3084               	movlw	high (STR_3| (0+32768))
  3207  0CD1  00A6               	movwf	LCD_array@date+1
  3208  0CD2  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3209                           
  3210                           ;Display_Lcd.c: 33:     LCD_array(4,1,"====================");
  3211  0CD7  3004               	movlw	4
  3212  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0CDA  00A1               	movwf	LCD_array@x
  3215  0CDB  3000               	movlw	0
  3216  0CDC  00A2               	movwf	LCD_array@x+1
  3217  0CDD  3001               	movlw	1
  3218  0CDE  00A3               	movwf	LCD_array@y
  3219  0CDF  3000               	movlw	0
  3220  0CE0  00A4               	movwf	LCD_array@y+1
  3221  0CE1  305B               	movlw	low (STR_1| (0+32768))
  3222  0CE2  00A5               	movwf	LCD_array@date
  3223  0CE3  3084               	movlw	high (STR_1| (0+32768))
  3224  0CE4  00A6               	movwf	LCD_array@date+1
  3225  0CE5  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3226                           
  3227                           ;Display_Lcd.c: 34:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  3228  0CEA  3033               	movlw	51
  3229  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0CED  00AB               	movwf	??_Pant_Inicio+2
  3232  0CEE  30BB               	movlw	187
  3233  0CEF  00AA               	movwf	??_Pant_Inicio+1
  3234  0CF0  30DF               	movlw	223
  3235  0CF1  00A9               	movwf	??_Pant_Inicio
  3236  0CF2                     u5237:
  3237  0CF2  0BA9               	decfsz	??_Pant_Inicio,f
  3238  0CF3  2CF2               	goto	u5237
  3239  0CF4  0BAA               	decfsz	??_Pant_Inicio+1,f
  3240  0CF5  2CF2               	goto	u5237
  3241  0CF6  0BAB               	decfsz	??_Pant_Inicio+2,f
  3242  0CF7  2CF2               	goto	u5237
  3243                           
  3244                           ;Display_Lcd.c: 37:     LCD_command(0x01);
  3245  0CF8  3001               	movlw	1
  3246  0CF9  120A  158A  2680  120A  158A  	fcall	_LCD_command
  3247                           
  3248                           ;Display_Lcd.c: 39:     LCD_array(1,1,">");
  3249  0CFE  3001               	movlw	1
  3250  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0D01  00A1               	movwf	LCD_array@x
  3253  0D02  3000               	movlw	0
  3254  0D03  00A2               	movwf	LCD_array@x+1
  3255  0D04  3001               	movlw	1
  3256  0D05  00A3               	movwf	LCD_array@y
  3257  0D06  3000               	movlw	0
  3258  0D07  00A4               	movwf	LCD_array@y+1
  3259  0D08  3006               	movlw	low (STR_5| (0+32768))
  3260  0D09  00A5               	movwf	LCD_array@date
  3261  0D0A  3085               	movlw	high (STR_5| (0+32768))
  3262  0D0B  00A6               	movwf	LCD_array@date+1
  3263  0D0C  160A  118A  2728   	fcall	_LCD_array
  3264  0D0F  0008               	return
  3265  0D10                     __end_of_Pant_Inicio:
  3266                           
  3267                           	psect	text9
  3268  12C7                     __ptext9:	
  3269 ;; *************** function _LCD_character *****************
  3270 ;; Defined at:
  3271 ;;		line 197 in file "Lcd.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  adress          1    wreg     unsigned char 
  3274 ;;  caracter        1    1[BANK0 ] PTR unsigned char 
  3275 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  adress          1    3[BANK0 ] unsigned char 
  3278 ;;  i               1    4[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       1       0       0       0
  3289 ;;      Locals:         0       2       0       0       0
  3290 ;;      Temps:          0       1       0       0       0
  3291 ;;      Totals:         0       4       0       0       0
  3292 ;;Total ram usage:        4 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		_LCD_command
  3297 ;;		_LCD_date
  3298 ;; This function is called by:
  3299 ;;		_Pant_Inicio
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _LCD_character
  3305  12C7                     _LCD_character:
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3309                           ;LCD_character@adress stored from wreg
  3310  12C7  1283               	bcf	3,5	;RP0=0, select bank0
  3311  12C8  1303               	bcf	3,6	;RP1=0, select bank0
  3312  12C9  00A3               	movwf	LCD_character@adress
  3313                           
  3314                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  3315  12CA  0823               	movf	LCD_character@adress,w
  3316  12CB  00A2               	movwf	??_LCD_character
  3317  12CC  3002               	movlw	2
  3318  12CD                     u4845:
  3319  12CD  1003               	clrc
  3320  12CE  0DA2               	rlf	??_LCD_character,f
  3321  12CF  3EFF               	addlw	-1
  3322  12D0  1D03               	skipz
  3323  12D1  2ACD               	goto	u4845
  3324  12D2  1003               	clrc
  3325  12D3  0D22               	rlf	??_LCD_character,w
  3326  12D4  3E40               	addlw	64
  3327  12D5  120A  158A  2680  160A  118A  	fcall	_LCD_command
  3328                           
  3329                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  3330  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  3331  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  3332  12DC  01A4               	clrf	LCD_character@i
  3333  12DD                     l4754:
  3334                           
  3335                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  3336  12DD  0824               	movf	LCD_character@i,w
  3337  12DE  0721               	addwf	LCD_character@caracter,w
  3338  12DF  00A2               	movwf	??_LCD_character
  3339  12E0  0822               	movf	??_LCD_character,w
  3340  12E1  0084               	movwf	4
  3341  12E2  1383               	bcf	3,7	;select IRP bank0
  3342  12E3  0800               	movf	0,w
  3343  12E4  120A  158A  2510  160A  118A  	fcall	_LCD_date
  3344                           
  3345                           ;Lcd.c: 203:     }
  3346  12E9  3001               	movlw	1
  3347  12EA  00FF               	movwf	127
  3348  12EB  087F               	movf	127,w
  3349  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  3350  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  3351  12EE  07A4               	addwf	LCD_character@i,f
  3352  12EF  3008               	movlw	8
  3353  12F0  0224               	subwf	LCD_character@i,w
  3354  12F1  1803               	btfsc	3,0
  3355  12F2  0008               	return
  3356  12F3  2ADD               	goto	l4754
  3357  12F4                     __end_of_LCD_character:
  3358                           
  3359                           	psect	text10
  3360  050A                     __ptext10:	
  3361 ;; *************** function _MEF_Subest_Actualizacion *****************
  3362 ;; Defined at:
  3363 ;;		line 102 in file "MEF.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       2       0       0       0
  3380 ;;      Totals:         0       2       0       0       0
  3381 ;;Total ram usage:        2 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    6
  3384 ;; This function calls:
  3385 ;;		_Antirrebote
  3386 ;;		_Detener
  3387 ;;		_Fin_Proceso
  3388 ;;		_LCD_command
  3389 ;;		_Lec_Adc_Modo_Flujo
  3390 ;;		_Lec_Adc_Modo_Fuga
  3391 ;;		_Lec_Adc_Modo_Pulv
  3392 ;;		_Pant_Flujo
  3393 ;;		_Pant_Fuga
  3394 ;;		_Pant_Modos
  3395 ;;		_Pant_Pulverizacion
  3396 ;;		_Pant_Temporizador
  3397 ;;		_Pant_Val_Act
  3398 ;;		_Salida_Modo_Flujo
  3399 ;;		_Salida_Modo_Fuga
  3400 ;;		_Salida_Modo_Pulv
  3401 ;; This function is called by:
  3402 ;;		_MEF_Actualizacion
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _MEF_Subest_Actualizacion
  3408  050A                     _MEF_Subest_Actualizacion:
  3409                           
  3410                           ;MEF.c: 104:     switch(Subestado_Actual)
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _MEF_Subest_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  3414  050A  2DF3               	goto	l4904
  3415  050B                     l4812:
  3416                           
  3417                           ;MEF.c: 107:         {;MEF.c: 108:             if(Estado_Actual==ESTADO_MODO_PULV) Pant_
      +                          Pulverizacion();
  3418  050B  3002               	movlw	2
  3419  050C  0662               	xorwf	_Estado_Actual,w
  3420  050D  1D03               	btfss	3,2
  3421  050E  2D15               	goto	l4816
  3422  050F  160A  118A  2404  120A  118A  	fcall	_Pant_Pulverizacion
  3423  0514  2D28               	goto	l249
  3424  0515                     l4816:
  3425  0515  3003               	movlw	3
  3426  0516  0662               	xorwf	_Estado_Actual,w
  3427  0517  1D03               	btfss	3,2
  3428  0518  2D1F               	goto	l4820
  3429  0519  160A  118A  23C8  120A  118A  	fcall	_Pant_Fuga
  3430  051E  2D28               	goto	l249
  3431  051F                     l4820:
  3432  051F  3004               	movlw	4
  3433  0520  0662               	xorwf	_Estado_Actual,w
  3434  0521  1D03               	btfss	3,2
  3435  0522  2D28               	goto	l249
  3436  0523  160A  118A  238C  120A  118A  	fcall	_Pant_Flujo
  3437  0528                     l249:
  3438                           
  3439                           ;MEF.c: 112:             Pant_Modos();
  3440  0528  120A  158A  22A3   	fcall	_Pant_Modos
  3441                           
  3442                           ;MEF.c: 114:             Subestado_Actual = SUBEST_DISPLAY;
  3443  052B  1683               	bsf	3,5	;RP0=1, select bank1
  3444  052C  1303               	bcf	3,6	;RP1=0, select bank1
  3445  052D  01B6               	clrf	_Subestado_Actual^(0+128)
  3446  052E  0AB6               	incf	_Subestado_Actual^(0+128),f
  3447                           
  3448                           ;MEF.c: 115:         break;
  3449  052F  0008               	return
  3450  0530                     l4826:
  3451                           
  3452                           ;MEF.c: 118:         {;MEF.c: 119:             Pant_Val_Act();
  3453  0530  120A  158A  273A   	fcall	_Pant_Val_Act
  3454                           
  3455                           ;MEF.c: 121:             Subestado_Actual = SUBEST_ADC;
  3456  0533  3002               	movlw	2
  3457  0534  00FF               	movwf	127
  3458  0535  087F               	movf	127,w
  3459  0536  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0537  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0538  00B6               	movwf	_Subestado_Actual^(0+128)
  3462                           
  3463                           ;MEF.c: 122:         break;
  3464  0539  0008               	return
  3465  053A                     l4830:
  3466                           
  3467                           ;MEF.c: 125:         {;MEF.c: 126:             if(Estado_Actual==ESTADO_MODO_PULV) Lec_A
      +                          dc_Modo_Pulv();
  3468  053A  3002               	movlw	2
  3469  053B  0662               	xorwf	_Estado_Actual,w
  3470  053C  1D03               	btfss	3,2
  3471  053D  2D44               	goto	l4834
  3472  053E  120A  158A  2000  120A  118A  	fcall	_Lec_Adc_Modo_Pulv
  3473  0543  2D57               	goto	l4842
  3474  0544                     l4834:
  3475  0544  3003               	movlw	3
  3476  0545  0662               	xorwf	_Estado_Actual,w
  3477  0546  1D03               	btfss	3,2
  3478  0547  2D4E               	goto	l4838
  3479  0548  160A  118A  211D  120A  118A  	fcall	_Lec_Adc_Modo_Fuga
  3480  054D  2D57               	goto	l4842
  3481  054E                     l4838:
  3482  054E  3004               	movlw	4
  3483  054F  0662               	xorwf	_Estado_Actual,w
  3484  0550  1D03               	btfss	3,2
  3485  0551  2D57               	goto	l4842
  3486  0552  160A  118A  2114  120A  118A  	fcall	_Lec_Adc_Modo_Flujo
  3487  0557                     l4842:
  3488                           
  3489                           ;MEF.c: 130:             if(PORTBbits.RB3) mod_tiempo=!mod_tiempo,Antirrebote();
  3490  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0559  1D86               	btfss	6,3	;volatile
  3493  055A  2D69               	goto	l4848
  3494  055B  0863               	movf	_mod_tiempo,w
  3495  055C  1D03               	btfss	3,2
  3496  055D  2D60               	goto	u5000
  3497  055E  3001               	movlw	1
  3498  055F  2D61               	goto	u5010
  3499  0560                     u5000:
  3500  0560  3000               	movlw	0
  3501  0561                     u5010:
  3502  0561  00FF               	movwf	127
  3503  0562  087F               	movf	127,w
  3504  0563  00E3               	movwf	_mod_tiempo
  3505  0564  160A  118A  2247  120A  118A  	fcall	_Antirrebote
  3506  0569                     l4848:
  3507                           
  3508                           ;MEF.c: 132:             if(Act_Variables) Subestado_Actual = SUBEST_DISPLAY,Act_Variabl
      +                          es=0;
  3509  0569  1683               	bsf	3,5	;RP0=1, select bank1
  3510  056A  1303               	bcf	3,6	;RP1=0, select bank1
  3511  056B  0839               	movf	_Act_Variables^(0+128),w
  3512  056C  1903               	btfsc	3,2
  3513  056D  2D71               	goto	l4854
  3514  056E  01B6               	clrf	_Subestado_Actual^(0+128)
  3515  056F  0AB6               	incf	_Subestado_Actual^(0+128),f
  3516  0570  01B9               	clrf	_Act_Variables^(0+128)
  3517  0571                     l4854:
  3518                           
  3519                           ;MEF.c: 133:             if(PORTBbits.RB0) Subestado_Actual = SUBEST_SALIDA,Antirrebote(
      +                          ),Output=!Output;
  3520  0571  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0572  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0573  1C06               	btfss	6,0	;volatile
  3523  0574  0008               	return
  3524  0575  3003               	movlw	3
  3525  0576  00FF               	movwf	127
  3526  0577  087F               	movf	127,w
  3527  0578  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0579  1303               	bcf	3,6	;RP1=0, select bank1
  3529  057A  00B6               	movwf	_Subestado_Actual^(0+128)
  3530  057B  160A  118A  2247  120A  118A  	fcall	_Antirrebote
  3531  0580  0877               	movf	_Output,w
  3532  0581  1D03               	btfss	3,2
  3533  0582  2D85               	goto	u5040
  3534  0583  3001               	movlw	1
  3535  0584  2D86               	goto	u5050
  3536  0585                     u5040:
  3537  0585  3000               	movlw	0
  3538  0586                     u5050:
  3539  0586  00FF               	movwf	127
  3540  0587  087F               	movf	127,w
  3541  0588  00F7               	movwf	_Output
  3542  0589  0008               	return
  3543  058A                     l4862:
  3544                           
  3545                           ;MEF.c: 137:         {;MEF.c: 138:             if(Estado_Actual==ESTADO_MODO_PULV) Salid
      +                          a_Modo_Pulv();
  3546  058A  3002               	movlw	2
  3547  058B  0662               	xorwf	_Estado_Actual,w
  3548  058C  1D03               	btfss	3,2
  3549  058D  2D94               	goto	l4866
  3550  058E  160A  118A  25AC  120A  118A  	fcall	_Salida_Modo_Pulv
  3551  0593  2DA7               	goto	l4874
  3552  0594                     l4866:
  3553  0594  3003               	movlw	3
  3554  0595  0662               	xorwf	_Estado_Actual,w
  3555  0596  1D03               	btfss	3,2
  3556  0597  2D9E               	goto	l4870
  3557  0598  160A  118A  20F9  120A  118A  	fcall	_Salida_Modo_Fuga
  3558  059D  2DA7               	goto	l4874
  3559  059E                     l4870:
  3560  059E  3004               	movlw	4
  3561  059F  0662               	xorwf	_Estado_Actual,w
  3562  05A0  1D03               	btfss	3,2
  3563  05A1  2DA7               	goto	l4874
  3564  05A2  160A  118A  20F5  120A  118A  	fcall	_Salida_Modo_Flujo
  3565  05A7                     l4874:
  3566                           
  3567                           ;MEF.c: 142:             if(Temporizador) Subestado_Actual = SUBEST_TIEMPO;
  3568  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3569  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3570  05A9  0838               	movf	_Temporizador^(0+128),w
  3571  05AA  1903               	btfsc	3,2
  3572  05AB  2DB0               	goto	l4878
  3573  05AC  3004               	movlw	4
  3574  05AD  00FF               	movwf	127
  3575  05AE  087F               	movf	127,w
  3576  05AF  00B6               	movwf	_Subestado_Actual^(0+128)
  3577  05B0                     l4878:
  3578                           
  3579                           ;MEF.c: 143:             if(PORTBbits.RB2) Subestado_Actual = SUBEST_RESET,Detener();
  3580  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3581  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3582  05B2  1D06               	btfss	6,2	;volatile
  3583  05B3  0008               	return
  3584  05B4  3005               	movlw	5
  3585  05B5  00FF               	movwf	127
  3586  05B6  087F               	movf	127,w
  3587  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3588  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3589  05B9  00B6               	movwf	_Subestado_Actual^(0+128)
  3590  05BA  160A  118A  2551   	fcall	_Detener
  3591  05BD  0008               	return
  3592  05BE                     l4884:
  3593                           
  3594                           ;MEF.c: 147:         {;MEF.c: 148:             Pant_Temporizador();
  3595  05BE  160A  118A  24BB  120A  118A  	fcall	_Pant_Temporizador
  3596                           
  3597                           ;MEF.c: 149:             Fin_Proceso();
  3598  05C3  160A  118A  2607  120A  118A  	fcall	_Fin_Proceso
  3599                           
  3600                           ;MEF.c: 151:             if(Output) Subestado_Actual = SUBEST_SALIDA;
  3601  05C8  0877               	movf	_Output,w
  3602  05C9  1903               	btfsc	3,2
  3603  05CA  2DD2               	goto	l4890
  3604  05CB  3003               	movlw	3
  3605  05CC  00FF               	movwf	127
  3606  05CD  087F               	movf	127,w
  3607  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3608  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3609  05D0  00B6               	movwf	_Subestado_Actual^(0+128)
  3610  05D1  0008               	return
  3611  05D2                     l4890:
  3612  05D2  3005               	movlw	5
  3613  05D3  00FF               	movwf	127
  3614  05D4  087F               	movf	127,w
  3615  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3616  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  3617  05D7  00B6               	movwf	_Subestado_Actual^(0+128)
  3618  05D8  0008               	return
  3619  05D9                     l4892:
  3620                           
  3621                           ;MEF.c: 156:         {;MEF.c: 157:             Rpm=0,Pwm=0,Min=0,Seg=0,Temp=0,Modo=0;
  3622  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3623  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3624  05DB  01AE               	clrf	_Rpm^(0+128)
  3625  05DC  01AF               	clrf	(_Rpm+1)^(0+128)
  3626  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3627  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3628  05DF  01E4               	clrf	_Pwm
  3629  05E0  01F9               	clrf	_Min
  3630  05E1  01F8               	clrf	_Seg
  3631  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3632  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3633  05E4  01BB               	clrf	_Temp^(0+128)
  3634  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3635  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3636  05E7  01E5               	clrf	_Modo
  3637                           
  3638                           ;MEF.c: 158:             PORTBbits.RB4=0;
  3639  05E8  1206               	bcf	6,4	;volatile
  3640                           
  3641                           ;MEF.c: 159:             LCD_command(0x01);
  3642  05E9  3001               	movlw	1
  3643  05EA  120A  158A  2680   	fcall	_LCD_command
  3644                           
  3645                           ;MEF.c: 160:             Reset = 1;
  3646  05ED  01F6               	clrf	_Reset
  3647  05EE  0AF6               	incf	_Reset,f
  3648                           
  3649                           ;MEF.c: 162:             Subestado_Actual = SUBEST_INICIAL;
  3650  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3651  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3652  05F1  01B6               	clrf	_Subestado_Actual^(0+128)
  3653                           
  3654                           ;MEF.c: 163:         break;
  3655  05F2  0008               	return
  3656  05F3                     l4904:
  3657  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3658  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3659  05F5  0836               	movf	_Subestado_Actual^(0+128),w
  3660  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3661  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3662  05F8  00DC               	movwf	??_MEF_Subest_Actualizacion
  3663  05F9  01DD               	clrf	??_MEF_Subest_Actualizacion+1
  3664                           
  3665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3666                           ; Switch size 1, requested type "simple"
  3667                           ; Number of cases is 1, Range of values is 0 to 0
  3668                           ; switch strategies available:
  3669                           ; Name         Instructions Cycles
  3670                           ; simple_byte            4     3 (average)
  3671                           ; direct_byte           11     8 (fixed)
  3672                           ; jumptable            260     6 (fixed)
  3673                           ;	Chosen strategy is simple_byte
  3674  05FA  085D               	movf	??_MEF_Subest_Actualizacion+1,w
  3675  05FB  3A00               	xorlw	0	; case 0
  3676  05FC  1903               	skipnz
  3677  05FD  2DFF               	goto	l5164
  3678  05FE  2E13               	goto	l276
  3679  05FF                     l5164:
  3680                           
  3681                           ; Switch size 1, requested type "simple"
  3682                           ; Number of cases is 6, Range of values is 0 to 5
  3683                           ; switch strategies available:
  3684                           ; Name         Instructions Cycles
  3685                           ; simple_byte           19    10 (average)
  3686                           ; direct_byte           26     8 (fixed)
  3687                           ; jumptable            260     6 (fixed)
  3688                           ;	Chosen strategy is simple_byte
  3689  05FF  085C               	movf	??_MEF_Subest_Actualizacion,w
  3690  0600  3A00               	xorlw	0	; case 0
  3691  0601  1903               	skipnz
  3692  0602  2D0B               	goto	l4812
  3693  0603  3A01               	xorlw	1	; case 1
  3694  0604  1903               	skipnz
  3695  0605  2D30               	goto	l4826
  3696  0606  3A03               	xorlw	3	; case 2
  3697  0607  1903               	skipnz
  3698  0608  2D3A               	goto	l4830
  3699  0609  3A01               	xorlw	1	; case 3
  3700  060A  1903               	skipnz
  3701  060B  2D8A               	goto	l4862
  3702  060C  3A07               	xorlw	7	; case 4
  3703  060D  1903               	skipnz
  3704  060E  2DBE               	goto	l4884
  3705  060F  3A01               	xorlw	1	; case 5
  3706  0610  1903               	skipnz
  3707  0611  2DD9               	goto	l4892
  3708  0612  2E13               	goto	l276
  3709  0613                     l276:
  3710  0613  0008               	return
  3711  0614                     __end_of_MEF_Subest_Actualizacion:
  3712                           
  3713                           	psect	text11
  3714  15AC                     __ptext11:	
  3715 ;; *************** function _Salida_Modo_Pulv *****************
  3716 ;; Defined at:
  3717 ;;		line 21 in file "Modo_Pulverizacion.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         0       0       0       0       0
  3732 ;;      Locals:         0       2       0       0       0
  3733 ;;      Temps:          0       0       0       0       0
  3734 ;;      Totals:         0       2       0       0       0
  3735 ;;Total ram usage:        2 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    5
  3738 ;; This function calls:
  3739 ;;		_Pwm1
  3740 ;;		_Pwm1_init
  3741 ;;		___ftdiv
  3742 ;;		___fttol
  3743 ;;		___lbtoft
  3744 ;;		___lwtoft
  3745 ;; This function is called by:
  3746 ;;		_MEF_Subest_Actualizacion
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function _Salida_Modo_Pulv
  3752  15AC                     _Salida_Modo_Pulv:
  3753                           
  3754                           ;Modo_Pulverizacion.c: 23:     if(!Pwm_Seteado)
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _Salida_Modo_Pulv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3758  15AC  1683               	bsf	3,5	;RP0=1, select bank1
  3759  15AD  1303               	bcf	3,6	;RP1=0, select bank1
  3760  15AE  0837               	movf	_Pwm_Seteado^(0+128),w
  3761  15AF  1D03               	btfss	3,2
  3762  15B0  0008               	return
  3763                           
  3764                           ;Modo_Pulverizacion.c: 24:     {;Modo_Pulverizacion.c: 25:         Pwm1_init((int)(Rpm/6
      +                          0.0));
  3765  15B1  082F               	movf	(_Rpm+1)^(0+128),w
  3766  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  3767  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  3768  15B4  00A9               	movwf	___lwtoft@c+1
  3769  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  3770  15B6  1303               	bcf	3,6	;RP1=0, select bank1
  3771  15B7  082E               	movf	_Rpm^(0+128),w
  3772  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  3773  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  3774  15BA  00A8               	movwf	___lwtoft@c
  3775  15BB  160A  118A  216C  160A  118A  	fcall	___lwtoft
  3776  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  3777  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  3778  15C2  0828               	movf	?___lwtoft,w
  3779  15C3  00BE               	movwf	___ftdiv@f1
  3780  15C4  0829               	movf	?___lwtoft+1,w
  3781  15C5  00BF               	movwf	___ftdiv@f1+1
  3782  15C6  082A               	movf	?___lwtoft+2,w
  3783  15C7  00C0               	movwf	___ftdiv@f1+2
  3784  15C8  3000               	movlw	0
  3785  15C9  00BB               	movwf	___ftdiv@f2
  3786  15CA  3070               	movlw	112
  3787  15CB  00BC               	movwf	___ftdiv@f2+1
  3788  15CC  3042               	movlw	66
  3789  15CD  00BD               	movwf	___ftdiv@f2+2
  3790  15CE  120A  158A  25C8  160A  118A  	fcall	___ftdiv
  3791  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  3792  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  3793  15D5  083B               	movf	?___ftdiv,w
  3794  15D6  00CA               	movwf	___fttol@f1
  3795  15D7  083C               	movf	?___ftdiv+1,w
  3796  15D8  00CB               	movwf	___fttol@f1+1
  3797  15D9  083D               	movf	?___ftdiv+2,w
  3798  15DA  00CC               	movwf	___fttol@f1+2
  3799  15DB  120A  158A  2013  160A  118A  	fcall	___fttol
  3800  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  3801  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  3802  15E2  084B               	movf	?___fttol+1,w
  3803  15E3  00DB               	movwf	_Salida_Modo_Pulv$1522+1
  3804  15E4  084A               	movf	?___fttol,w
  3805  15E5  00DA               	movwf	_Salida_Modo_Pulv$1522
  3806                           
  3807                           ;Modo_Pulverizacion.c: 24:     {;Modo_Pulverizacion.c: 25:         Pwm1_init((int)(Rpm/6
      +                          0.0));
  3808  15E6  085B               	movf	_Salida_Modo_Pulv$1522+1,w
  3809  15E7  00D8               	movwf	Pwm1_init@frecuencia+1
  3810  15E8  085A               	movf	_Salida_Modo_Pulv$1522,w
  3811  15E9  00D7               	movwf	Pwm1_init@frecuencia
  3812  15EA  120A  158A  2090  160A  118A  	fcall	_Pwm1_init
  3813                           
  3814                           ;Modo_Pulverizacion.c: 26:         Pwm1(Pwm);
  3815  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  3816  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  3817  15F1  0864               	movf	_Pwm,w
  3818  15F2  120A  118A  27E2  160A  118A  	fcall	___lbtoft
  3819  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  3820  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  3821  15F9  0828               	movf	?___lbtoft,w
  3822  15FA  00D7               	movwf	Pwm1@duty
  3823  15FB  0829               	movf	?___lbtoft+1,w
  3824  15FC  00D8               	movwf	Pwm1@duty+1
  3825  15FD  082A               	movf	?___lbtoft+2,w
  3826  15FE  00D9               	movwf	Pwm1@duty+2
  3827  15FF  120A  158A  210D   	fcall	_Pwm1
  3828                           
  3829                           ;Modo_Pulverizacion.c: 27:         Pwm_Seteado = 1;
  3830  1602  1683               	bsf	3,5	;RP0=1, select bank1
  3831  1603  1303               	bcf	3,6	;RP1=0, select bank1
  3832  1604  01B7               	clrf	_Pwm_Seteado^(0+128)
  3833  1605  0AB7               	incf	_Pwm_Seteado^(0+128),f
  3834  1606  0008               	return
  3835  1607                     __end_of_Salida_Modo_Pulv:
  3836                           
  3837                           	psect	text12
  3838  07E2                     __ptext12:	
  3839 ;; *************** function ___lbtoft *****************
  3840 ;; Defined at:
  3841 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lbtoft.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  c               1    wreg     unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  c               1    4[COMMON] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  3    8[BANK0 ] float 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       3       0       0       0
  3856 ;;      Locals:         1       0       0       0       0
  3857 ;;      Temps:          0       3       0       0       0
  3858 ;;      Totals:         1       6       0       0       0
  3859 ;;Total ram usage:        7 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    3
  3862 ;; This function calls:
  3863 ;;		___ftpack
  3864 ;; This function is called by:
  3865 ;;		_Salida_Modo_Pulv
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function ___lbtoft
  3871  07E2                     ___lbtoft:
  3872                           
  3873                           ;incstack = 0
  3874                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3875                           ;___lbtoft@c stored from wreg
  3876  07E2  00F4               	movwf	___lbtoft@c
  3877  07E3  0874               	movf	___lbtoft@c,w
  3878  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3879  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3880  07E6  00AB               	movwf	??___lbtoft
  3881  07E7  01AC               	clrf	??___lbtoft+1
  3882  07E8  01AD               	clrf	??___lbtoft+2
  3883  07E9  082B               	movf	??___lbtoft,w
  3884  07EA  00A0               	movwf	___ftpack@arg
  3885  07EB  082C               	movf	??___lbtoft+1,w
  3886  07EC  00A1               	movwf	___ftpack@arg+1
  3887  07ED  082D               	movf	??___lbtoft+2,w
  3888  07EE  00A2               	movwf	___ftpack@arg+2
  3889  07EF  308E               	movlw	142
  3890  07F0  00FF               	movwf	127
  3891  07F1  087F               	movf	127,w
  3892  07F2  00A3               	movwf	___ftpack@exp
  3893  07F3  01A4               	clrf	___ftpack@sign
  3894  07F4  160A  118A  2792   	fcall	___ftpack
  3895  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3896  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3897  07F9  0820               	movf	?___ftpack,w
  3898  07FA  00A8               	movwf	?___lbtoft
  3899  07FB  0821               	movf	?___ftpack+1,w
  3900  07FC  00A9               	movwf	?___lbtoft+1
  3901  07FD  0822               	movf	?___ftpack+2,w
  3902  07FE  00AA               	movwf	?___lbtoft+2
  3903  07FF  0008               	return
  3904  0800                     __end_of___lbtoft:
  3905                           
  3906                           	psect	text13
  3907  0890                     __ptext13:	
  3908 ;; *************** function _Pwm1_init *****************
  3909 ;; Defined at:
  3910 ;;		line 29 in file "Pwm_Soft.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  frecuencia      2   55[BANK0 ] unsigned int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       2       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       2       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    4
  3931 ;; This function calls:
  3932 ;;		___ftdiv
  3933 ;;		___fttol
  3934 ;;		___lwtoft
  3935 ;; This function is called by:
  3936 ;;		_Salida_Modo_Pulv
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _Pwm1_init
  3942  0890                     _Pwm1_init:
  3943                           
  3944                           ;Pwm_Soft.c: 29: void Pwm1_init(unsigned int frecuencia);Pwm_Soft.c: 30: {;Pwm_Soft.c: 3
      +                          2:     TRISB4 = 0;
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _Pwm1_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3948  0890  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0891  1303               	bcf	3,6	;RP1=0, select bank1
  3950  0892  1206               	bcf	6,4	;volatile
  3951                           
  3952                           ;Pwm_Soft.c: 33:     RB4=0;
  3953  0893  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0894  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0895  1206               	bcf	6,4	;volatile
  3956                           
  3957                           ;Pwm_Soft.c: 40:     freqPwmS1 = frecuencia;
  3958  0896  0858               	movf	Pwm1_init@frecuencia+1,w
  3959  0897  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0898  1303               	bcf	3,6	;RP1=0, select bank1
  3961  0899  00B5               	movwf	(_freqPwmS1+1)^(0+128)
  3962  089A  1283               	bcf	3,5	;RP0=0, select bank0
  3963  089B  1303               	bcf	3,6	;RP1=0, select bank0
  3964  089C  0857               	movf	Pwm1_init@frecuencia,w
  3965  089D  1683               	bsf	3,5	;RP0=1, select bank1
  3966  089E  1303               	bcf	3,6	;RP1=0, select bank1
  3967  089F  00B4               	movwf	_freqPwmS1^(0+128)
  3968                           
  3969                           ;Pwm_Soft.c: 41:     Per_PwmS1 = 1.0/frecuencia;
  3970  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  3971  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  3972  08A2  0858               	movf	Pwm1_init@frecuencia+1,w
  3973  08A3  00A9               	movwf	___lwtoft@c+1
  3974  08A4  0857               	movf	Pwm1_init@frecuencia,w
  3975  08A5  00A8               	movwf	___lwtoft@c
  3976  08A6  160A  118A  216C  120A  158A  	fcall	___lwtoft
  3977  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  3978  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  3979  08AD  0828               	movf	?___lwtoft,w
  3980  08AE  00BB               	movwf	___ftdiv@f2
  3981  08AF  0829               	movf	?___lwtoft+1,w
  3982  08B0  00BC               	movwf	___ftdiv@f2+1
  3983  08B1  082A               	movf	?___lwtoft+2,w
  3984  08B2  00BD               	movwf	___ftdiv@f2+2
  3985  08B3  3000               	movlw	0
  3986  08B4  00BE               	movwf	___ftdiv@f1
  3987  08B5  3080               	movlw	128
  3988  08B6  00BF               	movwf	___ftdiv@f1+1
  3989  08B7  303F               	movlw	63
  3990  08B8  00C0               	movwf	___ftdiv@f1+2
  3991  08B9  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  3992  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  3993  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  3994  08C0  083B               	movf	?___ftdiv,w
  3995  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  3996  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  3997  08C3  00AB               	movwf	_Per_PwmS1^(0+128)
  3998  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  3999  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  4000  08C6  083C               	movf	?___ftdiv+1,w
  4001  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  4002  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  4003  08C9  00AC               	movwf	(_Per_PwmS1+1)^(0+128)
  4004  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  4005  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  4006  08CC  083D               	movf	?___ftdiv+2,w
  4007  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  4008  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  4009  08CF  00AD               	movwf	(_Per_PwmS1+2)^(0+128)
  4010                           
  4011                           ;Pwm_Soft.c: 42:     PER_T_S1 = Per_PwmS1 / 0.0001;
  4012  08D0  082B               	movf	_Per_PwmS1^(0+128),w
  4013  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  4014  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  4015  08D3  00BE               	movwf	___ftdiv@f1
  4016  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  4017  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  4018  08D6  082C               	movf	(_Per_PwmS1+1)^(0+128),w
  4019  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4020  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4021  08D9  00BF               	movwf	___ftdiv@f1+1
  4022  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  4023  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  4024  08DC  082D               	movf	(_Per_PwmS1+2)^(0+128),w
  4025  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  4026  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  4027  08DF  00C0               	movwf	___ftdiv@f1+2
  4028  08E0  30B7               	movlw	183
  4029  08E1  00BB               	movwf	___ftdiv@f2
  4030  08E2  30D1               	movlw	209
  4031  08E3  00BC               	movwf	___ftdiv@f2+1
  4032  08E4  3038               	movlw	56
  4033  08E5  00BD               	movwf	___ftdiv@f2+2
  4034  08E6  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4035  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  4036  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  4037  08ED  083B               	movf	?___ftdiv,w
  4038  08EE  00CA               	movwf	___fttol@f1
  4039  08EF  083C               	movf	?___ftdiv+1,w
  4040  08F0  00CB               	movwf	___fttol@f1+1
  4041  08F1  083D               	movf	?___ftdiv+2,w
  4042  08F2  00CC               	movwf	___fttol@f1+2
  4043  08F3  120A  158A  2013   	fcall	___fttol
  4044  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  4045  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  4046  08F8  084B               	movf	?___fttol+1,w
  4047  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  4048  08FA  1303               	bcf	3,6	;RP1=0, select bank1
  4049  08FB  00B1               	movwf	(_PER_T_S1+1)^(0+128)
  4050  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  4051  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  4052  08FE  084A               	movf	?___fttol,w
  4053  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  4054  0900  1303               	bcf	3,6	;RP1=0, select bank1
  4055  0901  00B0               	movwf	_PER_T_S1^(0+128)
  4056                           
  4057                           ;Pwm_Soft.c: 45:     Pw_PwmS1 = 0;
  4058  0902  3000               	movlw	0
  4059  0903  00A8               	movwf	_Pw_PwmS1^(0+128)
  4060  0904  3000               	movlw	0
  4061  0905  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  4062  0906  3000               	movlw	0
  4063  0907  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  4064                           
  4065                           ;Pwm_Soft.c: 46:     PwmS1 = 0;
  4066  0908  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0909  1303               	bcf	3,6	;RP1=0, select bank0
  4068  090A  01E0               	clrf	_PwmS1
  4069  090B  01E1               	clrf	_PwmS1+1
  4070  090C  0008               	return
  4071  090D                     __end_of_Pwm1_init:
  4072                           
  4073                           	psect	text14
  4074  116C                     __ptext14:	
  4075 ;; *************** function ___lwtoft *****************
  4076 ;; Defined at:
  4077 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwtoft.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  c               2    8[BANK0 ] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  3    8[BANK0 ] float 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         0       3       0       0       0
  4092 ;;      Locals:         0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0
  4094 ;;      Totals:         0       3       0       0       0
  4095 ;;Total ram usage:        3 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    3
  4098 ;; This function calls:
  4099 ;;		___ftpack
  4100 ;; This function is called by:
  4101 ;;		_Salida_Modo_Pulv
  4102 ;;		_Pwm1_init
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function ___lwtoft
  4108  116C                     ___lwtoft:
  4109                           
  4110                           ;incstack = 0
  4111                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4112  116C  1283               	bcf	3,5	;RP0=0, select bank0
  4113  116D  1303               	bcf	3,6	;RP1=0, select bank0
  4114  116E  0828               	movf	___lwtoft@c,w
  4115  116F  00A0               	movwf	___ftpack@arg
  4116  1170  0829               	movf	___lwtoft@c+1,w
  4117  1171  00A1               	movwf	___ftpack@arg+1
  4118  1172  01A2               	clrf	___ftpack@arg+2
  4119  1173  308E               	movlw	142
  4120  1174  00FF               	movwf	127
  4121  1175  087F               	movf	127,w
  4122  1176  00A3               	movwf	___ftpack@exp
  4123  1177  01A4               	clrf	___ftpack@sign
  4124  1178  160A  118A  2792   	fcall	___ftpack
  4125  117B  1283               	bcf	3,5	;RP0=0, select bank0
  4126  117C  1303               	bcf	3,6	;RP1=0, select bank0
  4127  117D  0820               	movf	?___ftpack,w
  4128  117E  00A8               	movwf	?___lwtoft
  4129  117F  0821               	movf	?___ftpack+1,w
  4130  1180  00A9               	movwf	?___lwtoft+1
  4131  1181  0822               	movf	?___ftpack+2,w
  4132  1182  00AA               	movwf	?___lwtoft+2
  4133  1183  0008               	return
  4134  1184                     __end_of___lwtoft:
  4135                           
  4136                           	psect	text15
  4137  090D                     __ptext15:	
  4138 ;; *************** function _Pwm1 *****************
  4139 ;; Defined at:
  4140 ;;		line 53 in file "Pwm_Soft.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  duty            3   55[BANK0 ] float 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4154 ;;      Params:         0       3       0       0       0
  4155 ;;      Locals:         0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0
  4157 ;;      Totals:         0       3       0       0       0
  4158 ;;Total ram usage:        3 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    4
  4161 ;; This function calls:
  4162 ;;		___ftdiv
  4163 ;;		___ftmul
  4164 ;;		___fttol
  4165 ;; This function is called by:
  4166 ;;		_Salida_Modo_Pulv
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function _Pwm1
  4172  090D                     _Pwm1:
  4173                           
  4174                           ;Pwm_Soft.c: 53: void Pwm1(float duty);Pwm_Soft.c: 54: {;Pwm_Soft.c: 56:     Act_PwmS1 =
      +                           1;
  4175                           
  4176                           ;incstack = 0
  4177                           ; Regs used in _Pwm1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4178  090D  1683               	bsf	3,5	;RP0=1, select bank1
  4179  090E  1303               	bcf	3,6	;RP1=0, select bank1
  4180  090F  01BC               	clrf	_Act_PwmS1^(0+128)
  4181  0910  0ABC               	incf	_Act_PwmS1^(0+128),f
  4182                           
  4183                           ;Pwm_Soft.c: 58:     Pw_PwmS1 = (duty * Per_PwmS1) / 100.0;
  4184  0911  3000               	movlw	0
  4185  0912  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0913  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0914  00BB               	movwf	___ftdiv@f2
  4188  0915  30C8               	movlw	200
  4189  0916  00BC               	movwf	___ftdiv@f2+1
  4190  0917  3042               	movlw	66
  4191  0918  00BD               	movwf	___ftdiv@f2+2
  4192  0919  1683               	bsf	3,5	;RP0=1, select bank1
  4193  091A  1303               	bcf	3,6	;RP1=0, select bank1
  4194  091B  082B               	movf	_Per_PwmS1^(0+128),w
  4195  091C  1283               	bcf	3,5	;RP0=0, select bank0
  4196  091D  1303               	bcf	3,6	;RP1=0, select bank0
  4197  091E  00AC               	movwf	___ftmul@f1
  4198  091F  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0920  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0921  082C               	movf	(_Per_PwmS1+1)^(0+128),w
  4201  0922  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0923  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0924  00AD               	movwf	___ftmul@f1+1
  4204  0925  1683               	bsf	3,5	;RP0=1, select bank1
  4205  0926  1303               	bcf	3,6	;RP1=0, select bank1
  4206  0927  082D               	movf	(_Per_PwmS1+2)^(0+128),w
  4207  0928  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0929  1303               	bcf	3,6	;RP1=0, select bank0
  4209  092A  00AE               	movwf	___ftmul@f1+2
  4210  092B  0857               	movf	Pwm1@duty,w
  4211  092C  00AF               	movwf	___ftmul@f2
  4212  092D  0858               	movf	Pwm1@duty+1,w
  4213  092E  00B0               	movwf	___ftmul@f2+1
  4214  092F  0859               	movf	Pwm1@duty+2,w
  4215  0930  00B1               	movwf	___ftmul@f2+2
  4216  0931  120A  118A  270F  120A  158A  	fcall	___ftmul
  4217  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0938  082C               	movf	?___ftmul,w
  4220  0939  00BE               	movwf	___ftdiv@f1
  4221  093A  082D               	movf	?___ftmul+1,w
  4222  093B  00BF               	movwf	___ftdiv@f1+1
  4223  093C  082E               	movf	?___ftmul+2,w
  4224  093D  00C0               	movwf	___ftdiv@f1+2
  4225  093E  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4226  0943  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0944  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0945  083B               	movf	?___ftdiv,w
  4229  0946  1683               	bsf	3,5	;RP0=1, select bank1
  4230  0947  1303               	bcf	3,6	;RP1=0, select bank1
  4231  0948  00A8               	movwf	_Pw_PwmS1^(0+128)
  4232  0949  1283               	bcf	3,5	;RP0=0, select bank0
  4233  094A  1303               	bcf	3,6	;RP1=0, select bank0
  4234  094B  083C               	movf	?___ftdiv+1,w
  4235  094C  1683               	bsf	3,5	;RP0=1, select bank1
  4236  094D  1303               	bcf	3,6	;RP1=0, select bank1
  4237  094E  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  4238  094F  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0950  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0951  083D               	movf	?___ftdiv+2,w
  4241  0952  1683               	bsf	3,5	;RP0=1, select bank1
  4242  0953  1303               	bcf	3,6	;RP1=0, select bank1
  4243  0954  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  4244                           
  4245                           ;Pwm_Soft.c: 59:     P_W_T_S1 = Pw_PwmS1 / 0.0001;
  4246  0955  0828               	movf	_Pw_PwmS1^(0+128),w
  4247  0956  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0957  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0958  00BE               	movwf	___ftdiv@f1
  4250  0959  1683               	bsf	3,5	;RP0=1, select bank1
  4251  095A  1303               	bcf	3,6	;RP1=0, select bank1
  4252  095B  0829               	movf	(_Pw_PwmS1+1)^(0+128),w
  4253  095C  1283               	bcf	3,5	;RP0=0, select bank0
  4254  095D  1303               	bcf	3,6	;RP1=0, select bank0
  4255  095E  00BF               	movwf	___ftdiv@f1+1
  4256  095F  1683               	bsf	3,5	;RP0=1, select bank1
  4257  0960  1303               	bcf	3,6	;RP1=0, select bank1
  4258  0961  082A               	movf	(_Pw_PwmS1+2)^(0+128),w
  4259  0962  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0963  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0964  00C0               	movwf	___ftdiv@f1+2
  4262  0965  30B7               	movlw	183
  4263  0966  00BB               	movwf	___ftdiv@f2
  4264  0967  30D1               	movlw	209
  4265  0968  00BC               	movwf	___ftdiv@f2+1
  4266  0969  3038               	movlw	56
  4267  096A  00BD               	movwf	___ftdiv@f2+2
  4268  096B  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4269  0970  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0971  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0972  083B               	movf	?___ftdiv,w
  4272  0973  00CA               	movwf	___fttol@f1
  4273  0974  083C               	movf	?___ftdiv+1,w
  4274  0975  00CB               	movwf	___fttol@f1+1
  4275  0976  083D               	movf	?___ftdiv+2,w
  4276  0977  00CC               	movwf	___fttol@f1+2
  4277  0978  120A  158A  2013   	fcall	___fttol
  4278  097B  1283               	bcf	3,5	;RP0=0, select bank0
  4279  097C  1303               	bcf	3,6	;RP1=0, select bank0
  4280  097D  084B               	movf	?___fttol+1,w
  4281  097E  1683               	bsf	3,5	;RP0=1, select bank1
  4282  097F  1303               	bcf	3,6	;RP1=0, select bank1
  4283  0980  00B3               	movwf	(_P_W_T_S1+1)^(0+128)
  4284  0981  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0982  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0983  084A               	movf	?___fttol,w
  4287  0984  1683               	bsf	3,5	;RP0=1, select bank1
  4288  0985  1303               	bcf	3,6	;RP1=0, select bank1
  4289  0986  00B2               	movwf	_P_W_T_S1^(0+128)
  4290                           
  4291                           ;Pwm_Soft.c: 61:     if(PwmS1 == 0) RB4=1;
  4292  0987  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0988  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0989  0860               	movf	_PwmS1,w
  4295  098A  0461               	iorwf	_PwmS1+1,w
  4296  098B  1903               	btfsc	3,2
  4297  098C  1606               	bsf	6,4	;volatile
  4298                           
  4299                           ;Pwm_Soft.c: 64:     TMR1ON = 1;
  4300  098D  1410               	bsf	16,0	;volatile
  4301                           
  4302                           ;Pwm_Soft.c: 66:     return;
  4303  098E  0008               	return
  4304  098F                     __end_of_Pwm1:
  4305                           
  4306                           	psect	text16
  4307  10F9                     __ptext16:	
  4308 ;; *************** function _Salida_Modo_Fuga *****************
  4309 ;; Defined at:
  4310 ;;		line 15 in file "Modo_Fuga.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		None
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    2
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_MEF_Subest_Actualizacion
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _Salida_Modo_Fuga
  4340  10F9                     _Salida_Modo_Fuga:
  4341                           
  4342                           ;Modo_Fuga.c: 17:     PORTBbits.RB4=0;
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in _Salida_Modo_Fuga: []
  4346  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  4347  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  4348  10FB  1206               	bcf	6,4	;volatile
  4349                           
  4350                           ;Modo_Fuga.c: 19:     return;
  4351  10FC  0008               	return
  4352  10FD                     __end_of_Salida_Modo_Fuga:
  4353                           
  4354                           	psect	text17
  4355  10F5                     __ptext17:	
  4356 ;; *************** function _Salida_Modo_Flujo *****************
  4357 ;; Defined at:
  4358 ;;		line 15 in file "Modo_Flujo.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		None
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0
  4375 ;;      Totals:         0       0       0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    2
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_MEF_Subest_Actualizacion
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _Salida_Modo_Flujo
  4388  10F5                     _Salida_Modo_Flujo:
  4389                           
  4390                           ;Modo_Flujo.c: 17:     PORTBbits.RB4=1;
  4391                           
  4392                           ;incstack = 0
  4393                           ; Regs used in _Salida_Modo_Flujo: []
  4394  10F5  1283               	bcf	3,5	;RP0=0, select bank0
  4395  10F6  1303               	bcf	3,6	;RP1=0, select bank0
  4396  10F7  1606               	bsf	6,4	;volatile
  4397                           
  4398                           ;Modo_Flujo.c: 19:     return;
  4399  10F8  0008               	return
  4400  10F9                     __end_of_Salida_Modo_Flujo:
  4401                           
  4402                           	psect	text18
  4403  0F3A                     __ptext18:	
  4404 ;; *************** function _Pant_Val_Act *****************
  4405 ;; Defined at:
  4406 ;;		line 76 in file "Display_Lcd.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  buffer         20   30[BANK0 ] unsigned char [20]
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         0      20       0       0       0
  4422 ;;      Temps:          0       2       0       0       0
  4423 ;;      Totals:         0      22       0       0       0
  4424 ;;Total ram usage:       22 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    4
  4427 ;; This function calls:
  4428 ;;		_LCD_array
  4429 ;;		_sprintf
  4430 ;; This function is called by:
  4431 ;;		_MEF_Subest_Actualizacion
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _Pant_Val_Act
  4437  0F3A                     _Pant_Val_Act:
  4438                           
  4439                           ;Display_Lcd.c: 78:     char buffer[20];;Display_Lcd.c: 80:     sprintf(buffer,"%05u",Rp
      +                          m);
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _Pant_Val_Act: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4443  0F3A  3001               	movlw	low (STR_24| (0+32768))
  4444  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0F3D  00AB               	movwf	sprintf@f
  4447  0F3E  3085               	movlw	high (STR_24| (0+32768))
  4448  0F3F  00AC               	movwf	sprintf@f+1
  4449  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0F42  082F               	movf	(_Rpm+1)^(0+128),w
  4452  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0F45  00AE               	movwf	?_sprintf+3
  4455  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  4457  0F48  082E               	movf	_Rpm^(0+128),w
  4458  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0F4B  00AD               	movwf	?_sprintf+2
  4461  0F4C  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4462  0F4D  120A  118A  2042  120A  158A  	fcall	_sprintf
  4463                           
  4464                           ;Display_Lcd.c: 81:     LCD_array(1,5,buffer);
  4465  0F52  3001               	movlw	1
  4466  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4467  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0F55  00A1               	movwf	LCD_array@x
  4469  0F56  3000               	movlw	0
  4470  0F57  00A2               	movwf	LCD_array@x+1
  4471  0F58  3005               	movlw	5
  4472  0F59  00A3               	movwf	LCD_array@y
  4473  0F5A  3000               	movlw	0
  4474  0F5B  00A4               	movwf	LCD_array@y+1
  4475  0F5C  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4476  0F5D  00A5               	movwf	LCD_array@date
  4477  0F5E  3000               	movlw	0
  4478  0F5F  00A6               	movwf	LCD_array@date+1
  4479  0F60  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4480                           
  4481                           ;Display_Lcd.c: 82:     sprintf(buffer,"%02d",Pwm);
  4482  0F65  30FC               	movlw	low (STR_25| (0+32768))
  4483  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0F68  00AB               	movwf	sprintf@f
  4486  0F69  3084               	movlw	high (STR_25| (0+32768))
  4487  0F6A  00AC               	movwf	sprintf@f+1
  4488  0F6B  0864               	movf	_Pwm,w
  4489  0F6C  00BC               	movwf	??_Pant_Val_Act
  4490  0F6D  01BD               	clrf	??_Pant_Val_Act+1
  4491  0F6E  083C               	movf	??_Pant_Val_Act,w
  4492  0F6F  00AD               	movwf	?_sprintf+2
  4493  0F70  083D               	movf	??_Pant_Val_Act+1,w
  4494  0F71  00AE               	movwf	?_sprintf+3
  4495  0F72  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4496  0F73  120A  118A  2042  120A  158A  	fcall	_sprintf
  4497                           
  4498                           ;Display_Lcd.c: 83:     LCD_array(2,5,buffer);
  4499  0F78  3002               	movlw	2
  4500  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0F7B  00A1               	movwf	LCD_array@x
  4503  0F7C  3000               	movlw	0
  4504  0F7D  00A2               	movwf	LCD_array@x+1
  4505  0F7E  3005               	movlw	5
  4506  0F7F  00A3               	movwf	LCD_array@y
  4507  0F80  3000               	movlw	0
  4508  0F81  00A4               	movwf	LCD_array@y+1
  4509  0F82  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4510  0F83  00A5               	movwf	LCD_array@date
  4511  0F84  3000               	movlw	0
  4512  0F85  00A6               	movwf	LCD_array@date+1
  4513  0F86  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4514                           
  4515                           ;Display_Lcd.c: 84:     sprintf(buffer,"%02d",Min);
  4516  0F8B  30FC               	movlw	low (STR_25| (0+32768))
  4517  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4518  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4519  0F8E  00AB               	movwf	sprintf@f
  4520  0F8F  3084               	movlw	high (STR_25| (0+32768))
  4521  0F90  00AC               	movwf	sprintf@f+1
  4522  0F91  0879               	movf	_Min,w
  4523  0F92  00BC               	movwf	??_Pant_Val_Act
  4524  0F93  01BD               	clrf	??_Pant_Val_Act+1
  4525  0F94  083C               	movf	??_Pant_Val_Act,w
  4526  0F95  00AD               	movwf	?_sprintf+2
  4527  0F96  083D               	movf	??_Pant_Val_Act+1,w
  4528  0F97  00AE               	movwf	?_sprintf+3
  4529  0F98  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4530  0F99  120A  118A  2042  120A  158A  	fcall	_sprintf
  4531                           
  4532                           ;Display_Lcd.c: 85:     LCD_array(3,8,buffer);
  4533  0F9E  3003               	movlw	3
  4534  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0FA1  00A1               	movwf	LCD_array@x
  4537  0FA2  3000               	movlw	0
  4538  0FA3  00A2               	movwf	LCD_array@x+1
  4539  0FA4  3008               	movlw	8
  4540  0FA5  00A3               	movwf	LCD_array@y
  4541  0FA6  3000               	movlw	0
  4542  0FA7  00A4               	movwf	LCD_array@y+1
  4543  0FA8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4544  0FA9  00A5               	movwf	LCD_array@date
  4545  0FAA  3000               	movlw	0
  4546  0FAB  00A6               	movwf	LCD_array@date+1
  4547  0FAC  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4548                           
  4549                           ;Display_Lcd.c: 86:     sprintf(buffer,"%02d",Seg);
  4550  0FB1  30FC               	movlw	low (STR_25| (0+32768))
  4551  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0FB4  00AB               	movwf	sprintf@f
  4554  0FB5  3084               	movlw	high (STR_25| (0+32768))
  4555  0FB6  00AC               	movwf	sprintf@f+1
  4556  0FB7  0878               	movf	_Seg,w
  4557  0FB8  00BC               	movwf	??_Pant_Val_Act
  4558  0FB9  01BD               	clrf	??_Pant_Val_Act+1
  4559  0FBA  083C               	movf	??_Pant_Val_Act,w
  4560  0FBB  00AD               	movwf	?_sprintf+2
  4561  0FBC  083D               	movf	??_Pant_Val_Act+1,w
  4562  0FBD  00AE               	movwf	?_sprintf+3
  4563  0FBE  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4564  0FBF  120A  118A  2042  120A  158A  	fcall	_sprintf
  4565                           
  4566                           ;Display_Lcd.c: 87:     LCD_array(3,11,buffer);
  4567  0FC4  3003               	movlw	3
  4568  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  4569  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  4570  0FC7  00A1               	movwf	LCD_array@x
  4571  0FC8  3000               	movlw	0
  4572  0FC9  00A2               	movwf	LCD_array@x+1
  4573  0FCA  300B               	movlw	11
  4574  0FCB  00A3               	movwf	LCD_array@y
  4575  0FCC  3000               	movlw	0
  4576  0FCD  00A4               	movwf	LCD_array@y+1
  4577  0FCE  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4578  0FCF  00A5               	movwf	LCD_array@date
  4579  0FD0  3000               	movlw	0
  4580  0FD1  00A6               	movwf	LCD_array@date+1
  4581  0FD2  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4582                           
  4583                           ;Display_Lcd.c: 88:     sprintf(buffer,"%02d",Temp);
  4584  0FD7  30FC               	movlw	low (STR_25| (0+32768))
  4585  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4587  0FDA  00AB               	movwf	sprintf@f
  4588  0FDB  3084               	movlw	high (STR_25| (0+32768))
  4589  0FDC  00AC               	movwf	sprintf@f+1
  4590  0FDD  1683               	bsf	3,5	;RP0=1, select bank1
  4591  0FDE  1303               	bcf	3,6	;RP1=0, select bank1
  4592  0FDF  083B               	movf	_Temp^(0+128),w
  4593  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0FE2  00BC               	movwf	??_Pant_Val_Act
  4596  0FE3  01BD               	clrf	??_Pant_Val_Act+1
  4597  0FE4  083C               	movf	??_Pant_Val_Act,w
  4598  0FE5  00AD               	movwf	?_sprintf+2
  4599  0FE6  083D               	movf	??_Pant_Val_Act+1,w
  4600  0FE7  00AE               	movwf	?_sprintf+3
  4601  0FE8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4602  0FE9  120A  118A  2042  120A  158A  	fcall	_sprintf
  4603                           
  4604                           ;Display_Lcd.c: 89:     LCD_array(4,13,buffer);
  4605  0FEE  3004               	movlw	4
  4606  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4608  0FF1  00A1               	movwf	LCD_array@x
  4609  0FF2  3000               	movlw	0
  4610  0FF3  00A2               	movwf	LCD_array@x+1
  4611  0FF4  300D               	movlw	13
  4612  0FF5  00A3               	movwf	LCD_array@y
  4613  0FF6  3000               	movlw	0
  4614  0FF7  00A4               	movwf	LCD_array@y+1
  4615  0FF8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4616  0FF9  00A5               	movwf	LCD_array@date
  4617  0FFA  3000               	movlw	0
  4618  0FFB  00A6               	movwf	LCD_array@date+1
  4619  0FFC  160A  118A  2728   	fcall	_LCD_array
  4620  0FFF  0008               	return
  4621  1000                     __end_of_Pant_Val_Act:
  4622                           
  4623                           	psect	text19
  4624  14BB                     __ptext19:	
  4625 ;; *************** function _Pant_Temporizador *****************
  4626 ;; Defined at:
  4627 ;;		line 94 in file "Display_Lcd.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  buffer         20   30[BANK0 ] unsigned char [20]
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         0       0       0       0       0
  4642 ;;      Locals:         0      20       0       0       0
  4643 ;;      Temps:          0       2       0       0       0
  4644 ;;      Totals:         0      22       0       0       0
  4645 ;;Total ram usage:       22 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    4
  4648 ;; This function calls:
  4649 ;;		_LCD_array
  4650 ;;		_sprintf
  4651 ;; This function is called by:
  4652 ;;		_MEF_Subest_Actualizacion
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _Pant_Temporizador
  4658  14BB                     _Pant_Temporizador:
  4659                           
  4660                           ;Display_Lcd.c: 96:     char buffer[20];;Display_Lcd.c: 98:     sprintf(buffer,"%02d",Mi
      +                          n);
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _Pant_Temporizador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4664  14BB  30FC               	movlw	low (STR_25| (0+32768))
  4665  14BC  1283               	bcf	3,5	;RP0=0, select bank0
  4666  14BD  1303               	bcf	3,6	;RP1=0, select bank0
  4667  14BE  00AB               	movwf	sprintf@f
  4668  14BF  3084               	movlw	high (STR_25| (0+32768))
  4669  14C0  00AC               	movwf	sprintf@f+1
  4670  14C1  0879               	movf	_Min,w
  4671  14C2  00BC               	movwf	??_Pant_Temporizador
  4672  14C3  01BD               	clrf	??_Pant_Temporizador+1
  4673  14C4  083C               	movf	??_Pant_Temporizador,w
  4674  14C5  00AD               	movwf	?_sprintf+2
  4675  14C6  083D               	movf	??_Pant_Temporizador+1,w
  4676  14C7  00AE               	movwf	?_sprintf+3
  4677  14C8  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4678  14C9  120A  118A  2042  160A  118A  	fcall	_sprintf
  4679                           
  4680                           ;Display_Lcd.c: 99:     LCD_array(3,8,buffer);
  4681  14CE  3003               	movlw	3
  4682  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  4683  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  4684  14D1  00A1               	movwf	LCD_array@x
  4685  14D2  3000               	movlw	0
  4686  14D3  00A2               	movwf	LCD_array@x+1
  4687  14D4  3008               	movlw	8
  4688  14D5  00A3               	movwf	LCD_array@y
  4689  14D6  3000               	movlw	0
  4690  14D7  00A4               	movwf	LCD_array@y+1
  4691  14D8  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4692  14D9  00A5               	movwf	LCD_array@date
  4693  14DA  3000               	movlw	0
  4694  14DB  00A6               	movwf	LCD_array@date+1
  4695  14DC  160A  118A  2728  160A  118A  	fcall	_LCD_array
  4696                           
  4697                           ;Display_Lcd.c: 100:     sprintf(buffer,"%02d",Seg);
  4698  14E1  30FC               	movlw	low (STR_25| (0+32768))
  4699  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  4700  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  4701  14E4  00AB               	movwf	sprintf@f
  4702  14E5  3084               	movlw	high (STR_25| (0+32768))
  4703  14E6  00AC               	movwf	sprintf@f+1
  4704  14E7  0878               	movf	_Seg,w
  4705  14E8  00BC               	movwf	??_Pant_Temporizador
  4706  14E9  01BD               	clrf	??_Pant_Temporizador+1
  4707  14EA  083C               	movf	??_Pant_Temporizador,w
  4708  14EB  00AD               	movwf	?_sprintf+2
  4709  14EC  083D               	movf	??_Pant_Temporizador+1,w
  4710  14ED  00AE               	movwf	?_sprintf+3
  4711  14EE  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4712  14EF  120A  118A  2042  160A  118A  	fcall	_sprintf
  4713                           
  4714                           ;Display_Lcd.c: 101:     LCD_array(3,11,buffer);
  4715  14F4  3003               	movlw	3
  4716  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  4717  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  4718  14F7  00A1               	movwf	LCD_array@x
  4719  14F8  3000               	movlw	0
  4720  14F9  00A2               	movwf	LCD_array@x+1
  4721  14FA  300B               	movlw	11
  4722  14FB  00A3               	movwf	LCD_array@y
  4723  14FC  3000               	movlw	0
  4724  14FD  00A4               	movwf	LCD_array@y+1
  4725  14FE  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4726  14FF  00A5               	movwf	LCD_array@date
  4727  1500  3000               	movlw	0
  4728  1501  00A6               	movwf	LCD_array@date+1
  4729  1502  160A  118A  2728   	fcall	_LCD_array
  4730  1505  0008               	return
  4731  1506                     __end_of_Pant_Temporizador:
  4732                           
  4733                           	psect	text20
  4734  0042                     __ptext20:	
  4735 ;; *************** function _sprintf *****************
  4736 ;; Defined at:
  4737 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  sp              1    wreg     PTR unsigned char 
  4740 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4741 ;;  f               2   11[BANK0 ] PTR const unsigned char 
  4742 ;;		 -> STR_30(5), STR_29(5), STR_28(5), STR_27(5), 
  4743 ;;		 -> STR_26(5), STR_25(5), STR_24(5), 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  4746 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4747 ;;  tmpval          4    0        struct .
  4748 ;;  width           2   24[BANK0 ] int 
  4749 ;;  val             2   21[BANK0 ] unsigned int 
  4750 ;;  cp              2    0        PTR const unsigned char 
  4751 ;;  len             2    0        unsigned int 
  4752 ;;  c               1   26[BANK0 ] unsigned char 
  4753 ;;  flag            1   23[BANK0 ] unsigned char 
  4754 ;;  ap              1   20[BANK0 ] PTR void [1]
  4755 ;;		 -> ?_sprintf(2), 
  4756 ;;  prec            1   19[BANK0 ] char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2   11[BANK0 ] int 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       4       0       0       0
  4767 ;;      Locals:         0       9       0       0       0
  4768 ;;      Temps:          0       4       0       0       0
  4769 ;;      Totals:         0      17       0       0       0
  4770 ;;Total ram usage:       17 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    3
  4773 ;; This function calls:
  4774 ;;		___lwdiv
  4775 ;;		___lwmod
  4776 ;;		___wmul
  4777 ;;		_isdigit
  4778 ;; This function is called by:
  4779 ;;		_Pant_Val_Act
  4780 ;;		_Pant_Temporizador
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _sprintf
  4786  0042                     _sprintf:
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4790                           ;sprintf@sp stored from wreg
  4791  0042  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0043  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0044  00BB               	movwf	sprintf@sp
  4794                           
  4795                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  4796  0045  302D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4797  0046  00FF               	movwf	127
  4798  0047  087F               	movf	127,w
  4799  0048  00B4               	movwf	sprintf@ap
  4800  0049                     l4566:	
  4801                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4802                           
  4803                           
  4804                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4805  0049  082C               	movf	sprintf@f+1,w
  4806  004A  00B0               	movwf	??_sprintf+1
  4807  004B  082B               	movf	sprintf@f,w
  4808  004C  00AF               	movwf	??_sprintf
  4809  004D  0AAB               	incf	sprintf@f,f
  4810  004E  1903               	skipnz
  4811  004F  0AAC               	incf	sprintf@f+1,f
  4812  0050  0830               	movf	??_sprintf+1,w
  4813  0051  00FF               	movwf	127
  4814  0052  082F               	movf	??_sprintf,w
  4815  0053  0084               	movwf	4
  4816  0054  120A  118A  2400  120A  118A  	fcall	stringtab
  4817  0059  00FF               	movwf	127
  4818  005A  087F               	movf	127,w
  4819  005B  00BA               	movwf	sprintf@c
  4820  005C  083A               	movf	sprintf@c,w
  4821  005D  1903               	btfsc	3,2
  4822  005E  2A1C               	goto	l4568
  4823                           
  4824                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4825  005F  3025               	movlw	37
  4826  0060  063A               	xorwf	sprintf@c,w
  4827  0061  1903               	btfsc	3,2
  4828  0062  286F               	goto	l4464
  4829                           
  4830                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4831  0063  083A               	movf	sprintf@c,w
  4832  0064  00FF               	movwf	127
  4833  0065  083B               	movf	sprintf@sp,w
  4834  0066  0084               	movwf	4
  4835  0067  087F               	movf	127,w
  4836  0068  1383               	bcf	3,7	;select IRP bank0
  4837  0069  0080               	movwf	0
  4838  006A  3001               	movlw	1
  4839  006B  00FF               	movwf	127
  4840  006C  087F               	movf	127,w
  4841  006D  07BB               	addwf	sprintf@sp,f
  4842                           
  4843                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  4844  006E  2849               	goto	l4566
  4845  006F                     l4464:
  4846                           
  4847                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  4848  006F  01B8               	clrf	sprintf@width
  4849  0070  01B9               	clrf	sprintf@width+1
  4850                           
  4851                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4852  0071  01B7               	clrf	sprintf@flag
  4853  0072  287A               	goto	l4470
  4854  0073                     l750:	
  4855                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 596:    case '0':
  4856                           
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  4859  0073  1537               	bsf	sprintf@flag,2
  4860                           
  4861                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 598:     f++;
  4862  0074  3001               	movlw	1
  4863  0075  07AB               	addwf	sprintf@f,f
  4864  0076  1803               	skipnc
  4865  0077  0AAC               	incf	sprintf@f+1,f
  4866  0078  3000               	movlw	0
  4867  0079  07AC               	addwf	sprintf@f+1,f
  4868  007A                     l4470:	
  4869                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  4870                           
  4871  007A  082C               	movf	sprintf@f+1,w
  4872  007B  00FF               	movwf	127
  4873  007C  082B               	movf	sprintf@f,w
  4874  007D  0084               	movwf	4
  4875  007E  120A  118A  2400  120A  118A  	fcall	stringtab
  4876  0083  00AF               	movwf	??_sprintf
  4877  0084  01B0               	clrf	??_sprintf+1
  4878                           
  4879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4880                           ; Switch size 1, requested type "simple"
  4881                           ; Number of cases is 1, Range of values is 0 to 0
  4882                           ; switch strategies available:
  4883                           ; Name         Instructions Cycles
  4884                           ; simple_byte            4     3 (average)
  4885                           ; direct_byte           11     8 (fixed)
  4886                           ; jumptable            260     6 (fixed)
  4887                           ;	Chosen strategy is simple_byte
  4888  0085  0830               	movf	??_sprintf+1,w
  4889  0086  3A00               	xorlw	0	; case 0
  4890  0087  1903               	skipnz
  4891  0088  288A               	goto	l5166
  4892  0089  288F               	goto	l4472
  4893  008A                     l5166:
  4894                           
  4895                           ; Switch size 1, requested type "simple"
  4896                           ; Number of cases is 1, Range of values is 48 to 48
  4897                           ; switch strategies available:
  4898                           ; Name         Instructions Cycles
  4899                           ; simple_byte            4     3 (average)
  4900                           ; direct_byte           14    11 (fixed)
  4901                           ; jumptable            263     9 (fixed)
  4902                           ;	Chosen strategy is simple_byte
  4903  008A  082F               	movf	??_sprintf,w
  4904  008B  3A30               	xorlw	48	; case 48
  4905  008C  1903               	skipnz
  4906  008D  2873               	goto	l750
  4907  008E  288F               	goto	l4472
  4908  008F                     l4472:
  4909                           
  4910                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  4911  008F  082C               	movf	sprintf@f+1,w
  4912  0090  00FF               	movwf	127
  4913  0091  082B               	movf	sprintf@f,w
  4914  0092  0084               	movwf	4
  4915  0093  120A  118A  2400  120A  118A  	fcall	stringtab
  4916  0098  160A  118A  2126  120A  118A  	fcall	_isdigit
  4917  009D  1C03               	btfss	3,0
  4918  009E  28E6               	goto	l4486
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  4921  009F  1283               	bcf	3,5	;RP0=0, select bank0
  4922  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  4923  00A1  01B8               	clrf	sprintf@width
  4924  00A2  01B9               	clrf	sprintf@width+1
  4925  00A3                     l4476:
  4926                           
  4927                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  4928  00A3  300A               	movlw	10
  4929  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  4930  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  4931  00A6  00A7               	movwf	___wmul@multiplier
  4932  00A7  3000               	movlw	0
  4933  00A8  00A8               	movwf	___wmul@multiplier+1
  4934  00A9  0839               	movf	sprintf@width+1,w
  4935  00AA  00AA               	movwf	___wmul@multiplicand+1
  4936  00AB  0838               	movf	sprintf@width,w
  4937  00AC  00A9               	movwf	___wmul@multiplicand
  4938  00AD  160A  118A  21B7  120A  118A  	fcall	___wmul
  4939  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  4940  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  4941  00B4  0828               	movf	?___wmul+1,w
  4942  00B5  00B9               	movwf	sprintf@width+1
  4943  00B6  0827               	movf	?___wmul,w
  4944  00B7  00B8               	movwf	sprintf@width
  4945                           
  4946                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  4947  00B8  082C               	movf	sprintf@f+1,w
  4948  00B9  00FF               	movwf	127
  4949  00BA  082B               	movf	sprintf@f,w
  4950  00BB  0084               	movwf	4
  4951  00BC  120A  118A  2400  120A  118A  	fcall	stringtab
  4952  00C1  3ED0               	addlw	208
  4953  00C2  00AF               	movwf	??_sprintf
  4954  00C3  30FF               	movlw	255
  4955  00C4  1803               	skipnc
  4956  00C5  3000               	movlw	0
  4957  00C6  00B0               	movwf	??_sprintf+1
  4958  00C7  082F               	movf	??_sprintf,w
  4959  00C8  07B8               	addwf	sprintf@width,f
  4960  00C9  1803               	skipnc
  4961  00CA  0AB9               	incf	sprintf@width+1,f
  4962  00CB  0830               	movf	??_sprintf+1,w
  4963  00CC  07B9               	addwf	sprintf@width+1,f
  4964  00CD  3001               	movlw	1
  4965  00CE  07AB               	addwf	sprintf@f,f
  4966  00CF  1803               	skipnc
  4967  00D0  0AAC               	incf	sprintf@f+1,f
  4968  00D1  3000               	movlw	0
  4969  00D2  07AC               	addwf	sprintf@f+1,f
  4970                           
  4971                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  4972  00D3  082C               	movf	sprintf@f+1,w
  4973  00D4  00FF               	movwf	127
  4974  00D5  082B               	movf	sprintf@f,w
  4975  00D6  0084               	movwf	4
  4976  00D7  120A  118A  2400  120A  118A  	fcall	stringtab
  4977  00DC  160A  118A  2126  120A  118A  	fcall	_isdigit
  4978  00E1  1C03               	btfss	3,0
  4979  00E2  28E6               	goto	l4486
  4980  00E3  28A3               	goto	l4476
  4981  00E4                     l764:	
  4982                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  4983                           
  4984                           
  4985                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  4986  00E4  1737               	bsf	sprintf@flag,6
  4987                           
  4988                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 845:    break;
  4989  00E5  290E               	goto	l762
  4990  00E6                     l4486:
  4991  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  4992  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  4993  00E8  082C               	movf	sprintf@f+1,w
  4994  00E9  00B0               	movwf	??_sprintf+1
  4995  00EA  082B               	movf	sprintf@f,w
  4996  00EB  00AF               	movwf	??_sprintf
  4997  00EC  0AAB               	incf	sprintf@f,f
  4998  00ED  1903               	skipnz
  4999  00EE  0AAC               	incf	sprintf@f+1,f
  5000  00EF  0830               	movf	??_sprintf+1,w
  5001  00F0  00FF               	movwf	127
  5002  00F1  082F               	movf	??_sprintf,w
  5003  00F2  0084               	movwf	4
  5004  00F3  120A  118A  2400  120A  118A  	fcall	stringtab
  5005  00F8  00BA               	movwf	sprintf@c
  5006  00F9  00B1               	movwf	??_sprintf+2
  5007  00FA  01B2               	clrf	??_sprintf+3
  5008                           
  5009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5010                           ; Switch size 1, requested type "simple"
  5011                           ; Number of cases is 1, Range of values is 0 to 0
  5012                           ; switch strategies available:
  5013                           ; Name         Instructions Cycles
  5014                           ; simple_byte            4     3 (average)
  5015                           ; direct_byte           11     8 (fixed)
  5016                           ; jumptable            260     6 (fixed)
  5017                           ;	Chosen strategy is simple_byte
  5018  00FB  0832               	movf	??_sprintf+3,w
  5019  00FC  3A00               	xorlw	0	; case 0
  5020  00FD  1903               	skipnz
  5021  00FE  2900               	goto	l5168
  5022  00FF  2849               	goto	l4566
  5023  0100                     l5168:
  5024                           
  5025                           ; Switch size 1, requested type "simple"
  5026                           ; Number of cases is 4, Range of values is 0 to 117
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte           13     7 (average)
  5030                           ; jumptable            260     6 (fixed)
  5031                           ;	Chosen strategy is simple_byte
  5032  0100  0831               	movf	??_sprintf+2,w
  5033  0101  3A00               	xorlw	0	; case 0
  5034  0102  1903               	skipnz
  5035  0103  2A1C               	goto	l4568
  5036  0104  3A64               	xorlw	100	; case 100
  5037  0105  1903               	skipnz
  5038  0106  290E               	goto	l762
  5039  0107  3A0D               	xorlw	13	; case 105
  5040  0108  1903               	skipnz
  5041  0109  290E               	goto	l762
  5042  010A  3A1C               	xorlw	28	; case 117
  5043  010B  1903               	skipnz
  5044  010C  28E4               	goto	l764
  5045  010D  2849               	goto	l4566
  5046  010E                     l762:
  5047                           
  5048                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  5049  010E  1B37               	btfsc	sprintf@flag,6
  5050  010F  2928               	goto	l4498
  5051                           
  5052                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5053  0110  0834               	movf	sprintf@ap,w
  5054  0111  0084               	movwf	4
  5055  0112  1383               	bcf	3,7	;select IRP bank0
  5056  0113  0800               	movf	0,w
  5057  0114  00B5               	movwf	sprintf@val
  5058  0115  0A84               	incf	4,f
  5059  0116  0800               	movf	0,w
  5060  0117  00B6               	movwf	sprintf@val+1
  5061  0118  3002               	movlw	2
  5062  0119  00FF               	movwf	127
  5063  011A  087F               	movf	127,w
  5064  011B  07B4               	addwf	sprintf@ap,f
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  5067  011C  1FB6               	btfss	sprintf@val+1,7
  5068  011D  2934               	goto	l4502
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  5071  011E  3003               	movlw	3
  5072  011F  00FF               	movwf	127
  5073  0120  087F               	movf	127,w
  5074  0121  04B7               	iorwf	sprintf@flag,f
  5075                           
  5076                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  5077  0122  09B5               	comf	sprintf@val,f
  5078  0123  09B6               	comf	sprintf@val+1,f
  5079  0124  0AB5               	incf	sprintf@val,f
  5080  0125  1903               	skipnz
  5081  0126  0AB6               	incf	sprintf@val+1,f
  5082  0127  2934               	goto	l4502
  5083  0128                     l4498:
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5086  0128  0834               	movf	sprintf@ap,w
  5087  0129  0084               	movwf	4
  5088  012A  1383               	bcf	3,7	;select IRP bank0
  5089  012B  0800               	movf	0,w
  5090  012C  00B5               	movwf	sprintf@val
  5091  012D  0A84               	incf	4,f
  5092  012E  0800               	movf	0,w
  5093  012F  00B6               	movwf	sprintf@val+1
  5094  0130  3002               	movlw	2
  5095  0131  00FF               	movwf	127
  5096  0132  087F               	movf	127,w
  5097  0133  07B4               	addwf	sprintf@ap,f
  5098  0134                     l4502:
  5099                           
  5100                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5101  0134  01BA               	clrf	sprintf@c
  5102  0135  0ABA               	incf	sprintf@c,f
  5103  0136                     l4508:
  5104                           
  5105                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  5106  0136  083A               	movf	sprintf@c,w
  5107  0137  00AF               	movwf	??_sprintf
  5108  0138  072F               	addwf	??_sprintf,w
  5109  0139  3E12               	addlw	low (_dpowers| (0+32768))
  5110  013A  0084               	movwf	4
  5111  013B  3084               	movlw	high (_dpowers| (0+32768))
  5112  013C  1803               	skipnc
  5113  013D  3E01               	addlw	1
  5114  013E  00FF               	movwf	127
  5115  013F  120A  118A  2400  120A  118A  	fcall	stringtab
  5116  0144  00B0               	movwf	??_sprintf+1
  5117  0145  120A  118A  2400  120A  118A  	fcall	stringtab
  5118  014A  00B1               	movwf	??_sprintf+2
  5119  014B  0831               	movf	??_sprintf+2,w
  5120  014C  0236               	subwf	sprintf@val+1,w
  5121  014D  1D03               	skipz
  5122  014E  2951               	goto	u4575
  5123  014F  0830               	movf	??_sprintf+1,w
  5124  0150  0235               	subwf	sprintf@val,w
  5125  0151                     u4575:
  5126  0151  1C03               	btfss	3,0
  5127  0152  295B               	goto	l4516
  5128  0153  3001               	movlw	1
  5129  0154  00FF               	movwf	127
  5130  0155  087F               	movf	127,w
  5131  0156  07BA               	addwf	sprintf@c,f
  5132  0157  3005               	movlw	5
  5133  0158  063A               	xorwf	sprintf@c,w
  5134  0159  1D03               	btfss	3,2
  5135  015A  2936               	goto	l4508
  5136  015B                     l4516:
  5137                           
  5138                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  5139  015B  0838               	movf	sprintf@width,w
  5140  015C  0439               	iorwf	sprintf@width+1,w
  5141  015D  1903               	btfsc	3,2
  5142  015E  2969               	goto	l771
  5143  015F  0837               	movf	sprintf@flag,w
  5144  0160  3903               	andlw	3
  5145  0161  1903               	btfsc	3,2
  5146  0162  2969               	goto	l771
  5147                           
  5148                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1372:    width--;
  5149  0163  30FF               	movlw	255
  5150  0164  07B8               	addwf	sprintf@width,f
  5151  0165  1803               	skipnc
  5152  0166  0AB9               	incf	sprintf@width+1,f
  5153  0167  30FF               	movlw	255
  5154  0168  07B9               	addwf	sprintf@width+1,f
  5155  0169                     l771:
  5156                           
  5157                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  5158  0169  0839               	movf	sprintf@width+1,w
  5159  016A  3A80               	xorlw	128
  5160  016B  3C80               	sublw	128
  5161  016C  1D03               	skipz
  5162  016D  2970               	goto	u4615
  5163  016E  0838               	movf	sprintf@width,w
  5164  016F  023A               	subwf	sprintf@c,w
  5165  0170                     u4615:
  5166  0170  1803               	skipnc
  5167  0171  297E               	goto	l4524
  5168                           
  5169                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  5170  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0173  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0174  083A               	movf	sprintf@c,w
  5173  0175  00AF               	movwf	??_sprintf
  5174  0176  01B0               	clrf	??_sprintf+1
  5175  0177  082F               	movf	??_sprintf,w
  5176  0178  02B8               	subwf	sprintf@width,f
  5177  0179  0830               	movf	??_sprintf+1,w
  5178  017A  1C03               	skipc
  5179  017B  03B9               	decf	sprintf@width+1,f
  5180  017C  02B9               	subwf	sprintf@width+1,f
  5181  017D  2982               	goto	l4526
  5182  017E                     l4524:
  5183                           
  5184                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  5185  017E  1283               	bcf	3,5	;RP0=0, select bank0
  5186  017F  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0180  01B8               	clrf	sprintf@width
  5188  0181  01B9               	clrf	sprintf@width+1
  5189  0182                     l4526:
  5190                           
  5191                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  5192  0182  1D37               	btfss	sprintf@flag,2
  5193  0183  29A9               	goto	l4542
  5194                           
  5195                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  5196  0184  0837               	movf	sprintf@flag,w
  5197  0185  3903               	andlw	3
  5198  0186  1903               	btfsc	3,2
  5199  0187  2993               	goto	l4534
  5200                           
  5201                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  5202  0188  302D               	movlw	45
  5203  0189  00FF               	movwf	127
  5204  018A  083B               	movf	sprintf@sp,w
  5205  018B  0084               	movwf	4
  5206  018C  087F               	movf	127,w
  5207  018D  1383               	bcf	3,7	;select IRP bank0
  5208  018E  0080               	movwf	0
  5209  018F  3001               	movlw	1
  5210  0190  00FF               	movwf	127
  5211  0191  087F               	movf	127,w
  5212  0192  07BB               	addwf	sprintf@sp,f
  5213  0193                     l4534:
  5214                           
  5215                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  5216  0193  0838               	movf	sprintf@width,w
  5217  0194  0439               	iorwf	sprintf@width+1,w
  5218  0195  1903               	btfsc	3,2
  5219  0196  29D1               	goto	l4556
  5220                           
  5221                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  5222  0197  3030               	movlw	48
  5223  0198  00FF               	movwf	127
  5224  0199  083B               	movf	sprintf@sp,w
  5225  019A  0084               	movwf	4
  5226  019B  087F               	movf	127,w
  5227  019C  1383               	bcf	3,7	;select IRP bank0
  5228  019D  0080               	movwf	0
  5229  019E  3001               	movlw	1
  5230  019F  00FF               	movwf	127
  5231  01A0  087F               	movf	127,w
  5232  01A1  07BB               	addwf	sprintf@sp,f
  5233  01A2  30FF               	movlw	255
  5234  01A3  07B8               	addwf	sprintf@width,f
  5235  01A4  1803               	skipnc
  5236  01A5  0AB9               	incf	sprintf@width+1,f
  5237  01A6  30FF               	movlw	255
  5238  01A7  07B9               	addwf	sprintf@width+1,f
  5239  01A8  2993               	goto	l4534
  5240  01A9                     l4542:
  5241                           
  5242                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1450:    if(width
  5243  01A9  0838               	movf	sprintf@width,w
  5244  01AA  0439               	iorwf	sprintf@width+1,w
  5245  01AB  1903               	btfsc	3,2
  5246  01AC  29C2               	goto	l4550
  5247  01AD                     l4544:
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  5250  01AD  3020               	movlw	32
  5251  01AE  00FF               	movwf	127
  5252  01AF  083B               	movf	sprintf@sp,w
  5253  01B0  0084               	movwf	4
  5254  01B1  087F               	movf	127,w
  5255  01B2  1383               	bcf	3,7	;select IRP bank0
  5256  01B3  0080               	movwf	0
  5257  01B4  3001               	movlw	1
  5258  01B5  00FF               	movwf	127
  5259  01B6  087F               	movf	127,w
  5260  01B7  07BB               	addwf	sprintf@sp,f
  5261  01B8  30FF               	movlw	255
  5262  01B9  07B8               	addwf	sprintf@width,f
  5263  01BA  1803               	skipnc
  5264  01BB  0AB9               	incf	sprintf@width+1,f
  5265  01BC  30FF               	movlw	255
  5266  01BD  07B9               	addwf	sprintf@width+1,f
  5267  01BE  0838               	movf	sprintf@width,w
  5268  01BF  0439               	iorwf	sprintf@width+1,w
  5269  01C0  1D03               	btfss	3,2
  5270  01C1  29AD               	goto	l4544
  5271  01C2                     l4550:
  5272                           
  5273                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  5274  01C2  0837               	movf	sprintf@flag,w
  5275  01C3  3903               	andlw	3
  5276  01C4  1903               	btfsc	3,2
  5277  01C5  29D1               	goto	l4556
  5278                           
  5279                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  5280  01C6  302D               	movlw	45
  5281  01C7  00FF               	movwf	127
  5282  01C8  083B               	movf	sprintf@sp,w
  5283  01C9  0084               	movwf	4
  5284  01CA  087F               	movf	127,w
  5285  01CB  1383               	bcf	3,7	;select IRP bank0
  5286  01CC  0080               	movwf	0
  5287  01CD  3001               	movlw	1
  5288  01CE  00FF               	movwf	127
  5289  01CF  087F               	movf	127,w
  5290  01D0  07BB               	addwf	sprintf@sp,f
  5291  01D1                     l4556:
  5292                           
  5293                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  5294  01D1  083A               	movf	sprintf@c,w
  5295  01D2  00FF               	movwf	127
  5296  01D3  087F               	movf	127,w
  5297  01D4  00B3               	movwf	sprintf@prec
  5298  01D5                     l4564:	
  5299                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  5300                           
  5301                           
  5302                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  5303  01D5  30FF               	movlw	255
  5304  01D6  00FF               	movwf	127
  5305  01D7  087F               	movf	127,w
  5306  01D8  07B3               	addwf	sprintf@prec,f
  5307  01D9  0A33               	incf	sprintf@prec,w
  5308  01DA  1903               	btfsc	3,2
  5309  01DB  2849               	goto	l4566
  5310                           
  5311                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  5312  01DC  300A               	movlw	10
  5313  01DD  00A7               	movwf	___lwmod@divisor
  5314  01DE  3000               	movlw	0
  5315  01DF  00A8               	movwf	___lwmod@divisor+1
  5316  01E0  0833               	movf	sprintf@prec,w
  5317  01E1  00AF               	movwf	??_sprintf
  5318  01E2  072F               	addwf	??_sprintf,w
  5319  01E3  3E12               	addlw	low (_dpowers| (0+32768))
  5320  01E4  0084               	movwf	4
  5321  01E5  3084               	movlw	high (_dpowers| (0+32768))
  5322  01E6  1803               	skipnc
  5323  01E7  3E01               	addlw	1
  5324  01E8  00FF               	movwf	127
  5325  01E9  120A  118A  2400  120A  118A  	fcall	stringtab
  5326  01EE  00A0               	movwf	___lwdiv@divisor
  5327  01EF  120A  118A  2400  120A  118A  	fcall	stringtab
  5328  01F4  00A1               	movwf	___lwdiv@divisor+1
  5329  01F5  0836               	movf	sprintf@val+1,w
  5330  01F6  00A3               	movwf	___lwdiv@dividend+1
  5331  01F7  0835               	movf	sprintf@val,w
  5332  01F8  00A2               	movwf	___lwdiv@dividend
  5333  01F9  160A  118A  247D  120A  118A  	fcall	___lwdiv
  5334  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  5335  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  5336  0200  0821               	movf	?___lwdiv+1,w
  5337  0201  00AA               	movwf	___lwmod@dividend+1
  5338  0202  0820               	movf	?___lwdiv,w
  5339  0203  00A9               	movwf	___lwmod@dividend
  5340  0204  160A  118A  2358  120A  118A  	fcall	___lwmod
  5341  0209  1283               	bcf	3,5	;RP0=0, select bank0
  5342  020A  1303               	bcf	3,6	;RP1=0, select bank0
  5343  020B  0827               	movf	?___lwmod,w
  5344  020C  3E30               	addlw	48
  5345  020D  00FF               	movwf	127
  5346  020E  087F               	movf	127,w
  5347  020F  00BA               	movwf	sprintf@c
  5348                           
  5349                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  5350  0210  083A               	movf	sprintf@c,w
  5351  0211  00FF               	movwf	127
  5352  0212  083B               	movf	sprintf@sp,w
  5353  0213  0084               	movwf	4
  5354  0214  087F               	movf	127,w
  5355  0215  1383               	bcf	3,7	;select IRP bank0
  5356  0216  0080               	movwf	0
  5357  0217  3001               	movlw	1
  5358  0218  00FF               	movwf	127
  5359  0219  087F               	movf	127,w
  5360  021A  07BB               	addwf	sprintf@sp,f
  5361  021B  29D5               	goto	l4564
  5362  021C                     l4568:
  5363                           
  5364                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  5365  021C  083B               	movf	sprintf@sp,w
  5366  021D  0084               	movwf	4
  5367  021E  1383               	bcf	3,7	;select IRP bank0
  5368  021F  0180               	clrf	0
  5369  0220  0008               	return
  5370  0221                     __end_of_sprintf:
  5371                           
  5372                           	psect	text21
  5373  1126                     __ptext21:	
  5374 ;; *************** function _isdigit *****************
  5375 ;; Defined at:
  5376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\isdigit.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  c               1    wreg     unsigned char 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  c               1    5[COMMON] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;		None               void
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       0       0       0       0
  5391 ;;      Locals:         2       0       0       0       0
  5392 ;;      Temps:          0       0       0       0       0
  5393 ;;      Totals:         2       0       0       0       0
  5394 ;;Total ram usage:        2 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    2
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_sprintf
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           
  5405                           ;psect for function _isdigit
  5406  1126                     _isdigit:
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5410                           ;isdigit@c stored from wreg
  5411  1126  00F5               	movwf	isdigit@c
  5412  1127  01F4               	clrf	_isdigit$1337
  5413  1128  303A               	movlw	58
  5414  1129  0275               	subwf	isdigit@c,w
  5415  112A  1803               	skipnc
  5416  112B  2932               	goto	l2806
  5417  112C  3030               	movlw	48
  5418  112D  0275               	subwf	isdigit@c,w
  5419  112E  1C03               	skipc
  5420  112F  2932               	goto	l2806
  5421  1130  01F4               	clrf	_isdigit$1337
  5422  1131  0AF4               	incf	_isdigit$1337,f
  5423  1132                     l2806:
  5424  1132  0C74               	rrf	_isdigit$1337,w
  5425  1133  0008               	return
  5426  1134                     __end_of_isdigit:
  5427                           
  5428                           	psect	text22
  5429  1358                     __ptext22:	
  5430 ;; *************** function ___lwmod *****************
  5431 ;; Defined at:
  5432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwmod.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  divisor         2    7[BANK0 ] unsigned int 
  5435 ;;  dividend        2    9[BANK0 ] unsigned int 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  counter         1    4[COMMON] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  2    7[BANK0 ] unsigned int 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0, btemp+1
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5447 ;;      Params:         0       4       0       0       0
  5448 ;;      Locals:         1       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0
  5450 ;;      Totals:         1       4       0       0       0
  5451 ;;Total ram usage:        5 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_sprintf
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function ___lwmod
  5463  1358                     ___lwmod:
  5464                           
  5465                           ;incstack = 0
  5466                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5467  1358  1283               	bcf	3,5	;RP0=0, select bank0
  5468  1359  1303               	bcf	3,6	;RP1=0, select bank0
  5469  135A  0827               	movf	___lwmod@divisor,w
  5470  135B  0428               	iorwf	___lwmod@divisor+1,w
  5471  135C  1903               	btfsc	3,2
  5472  135D  2B87               	goto	l3020
  5473  135E  01F4               	clrf	___lwmod@counter
  5474  135F  0AF4               	incf	___lwmod@counter,f
  5475  1360                     l3010:
  5476  1360  1BA8               	btfsc	___lwmod@divisor+1,7
  5477  1361  2B6E               	goto	l3012
  5478  1362  3001               	movlw	1
  5479  1363                     u2595:
  5480  1363  1003               	clrc
  5481  1364  0DA7               	rlf	___lwmod@divisor,f
  5482  1365  0DA8               	rlf	___lwmod@divisor+1,f
  5483  1366  3EFF               	addlw	-1
  5484  1367  1D03               	skipz
  5485  1368  2B63               	goto	u2595
  5486  1369  3001               	movlw	1
  5487  136A  00FF               	movwf	127
  5488  136B  087F               	movf	127,w
  5489  136C  07F4               	addwf	___lwmod@counter,f
  5490  136D  2B60               	goto	l3010
  5491  136E                     l3012:
  5492  136E  0828               	movf	___lwmod@divisor+1,w
  5493  136F  022A               	subwf	___lwmod@dividend+1,w
  5494  1370  1D03               	skipz
  5495  1371  2B74               	goto	u2615
  5496  1372  0827               	movf	___lwmod@divisor,w
  5497  1373  0229               	subwf	___lwmod@dividend,w
  5498  1374                     u2615:
  5499  1374  1C03               	skipc
  5500  1375  2B7C               	goto	l3016
  5501  1376  0827               	movf	___lwmod@divisor,w
  5502  1377  02A9               	subwf	___lwmod@dividend,f
  5503  1378  0828               	movf	___lwmod@divisor+1,w
  5504  1379  1C03               	skipc
  5505  137A  03AA               	decf	___lwmod@dividend+1,f
  5506  137B  02AA               	subwf	___lwmod@dividend+1,f
  5507  137C                     l3016:
  5508  137C  3001               	movlw	1
  5509  137D                     u2625:
  5510  137D  1003               	clrc
  5511  137E  0CA8               	rrf	___lwmod@divisor+1,f
  5512  137F  0CA7               	rrf	___lwmod@divisor,f
  5513  1380  3EFF               	addlw	-1
  5514  1381  1D03               	skipz
  5515  1382  2B7D               	goto	u2625
  5516  1383  3001               	movlw	1
  5517  1384  02F4               	subwf	___lwmod@counter,f
  5518  1385  1D03               	btfss	3,2
  5519  1386  2B6E               	goto	l3012
  5520  1387                     l3020:
  5521  1387  082A               	movf	___lwmod@dividend+1,w
  5522  1388  00A8               	movwf	?___lwmod+1
  5523  1389  0829               	movf	___lwmod@dividend,w
  5524  138A  00A7               	movwf	?___lwmod
  5525  138B  0008               	return
  5526  138C                     __end_of___lwmod:
  5527                           
  5528                           	psect	text23
  5529  1404                     __ptext23:	
  5530 ;; *************** function _Pant_Pulverizacion *****************
  5531 ;; Defined at:
  5532 ;;		line 114 in file "Display_Lcd.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5546 ;;      Params:         0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0
  5548 ;;      Temps:          0       3       0       0       0
  5549 ;;      Totals:         0       3       0       0       0
  5550 ;;Total ram usage:        3 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    4
  5553 ;; This function calls:
  5554 ;;		_LCD_array
  5555 ;;		_LCD_command
  5556 ;; This function is called by:
  5557 ;;		_MEF_Subest_Actualizacion
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function _Pant_Pulverizacion
  5563  1404                     _Pant_Pulverizacion:
  5564                           
  5565                           ;Display_Lcd.c: 116:     LCD_command(0x01);
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _Pant_Pulverizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5569  1404  3001               	movlw	1
  5570  1405  120A  158A  2680  160A  118A  	fcall	_LCD_command
  5571                           
  5572                           ;Display_Lcd.c: 117:     LCD_array(2,1,"    Modo Prueba:");
  5573  140A  3002               	movlw	2
  5574  140B  1283               	bcf	3,5	;RP0=0, select bank0
  5575  140C  1303               	bcf	3,6	;RP1=0, select bank0
  5576  140D  00A1               	movwf	LCD_array@x
  5577  140E  3000               	movlw	0
  5578  140F  00A2               	movwf	LCD_array@x+1
  5579  1410  3001               	movlw	1
  5580  1411  00A3               	movwf	LCD_array@y
  5581  1412  3000               	movlw	0
  5582  1413  00A4               	movwf	LCD_array@y+1
  5583  1414  30A8               	movlw	low (STR_32| (0+32768))
  5584  1415  00A5               	movwf	LCD_array@date
  5585  1416  3084               	movlw	high (STR_32| (0+32768))
  5586  1417  00A6               	movwf	LCD_array@date+1
  5587  1418  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5588                           
  5589                           ;Display_Lcd.c: 118:     LCD_array(3,1,"    PULVERIZACION");
  5590  141D  3003               	movlw	3
  5591  141E  1283               	bcf	3,5	;RP0=0, select bank0
  5592  141F  1303               	bcf	3,6	;RP1=0, select bank0
  5593  1420  00A1               	movwf	LCD_array@x
  5594  1421  3000               	movlw	0
  5595  1422  00A2               	movwf	LCD_array@x+1
  5596  1423  3001               	movlw	1
  5597  1424  00A3               	movwf	LCD_array@y
  5598  1425  3000               	movlw	0
  5599  1426  00A4               	movwf	LCD_array@y+1
  5600  1427  3084               	movlw	low (STR_33| (0+32768))
  5601  1428  00A5               	movwf	LCD_array@date
  5602  1429  3084               	movlw	high (STR_33| (0+32768))
  5603  142A  00A6               	movwf	LCD_array@date+1
  5604  142B  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5605                           
  5606                           ;Display_Lcd.c: 119:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  5607  1430  3027               	movlw	39
  5608  1431  1283               	bcf	3,5	;RP0=0, select bank0
  5609  1432  1303               	bcf	3,6	;RP1=0, select bank0
  5610  1433  00AB               	movwf	??_Pant_Pulverizacion+2
  5611  1434  300D               	movlw	13
  5612  1435  00AA               	movwf	??_Pant_Pulverizacion+1
  5613  1436  3025               	movlw	37
  5614  1437  00A9               	movwf	??_Pant_Pulverizacion
  5615  1438                     u5247:
  5616  1438  0BA9               	decfsz	??_Pant_Pulverizacion,f
  5617  1439  2C38               	goto	u5247
  5618  143A  0BAA               	decfsz	??_Pant_Pulverizacion+1,f
  5619  143B  2C38               	goto	u5247
  5620  143C  0BAB               	decfsz	??_Pant_Pulverizacion+2,f
  5621  143D  2C38               	goto	u5247
  5622  143E  2C3F               	nop2
  5623  143F  0008               	return
  5624  1440                     __end_of_Pant_Pulverizacion:
  5625                           
  5626                           	psect	text24
  5627  0AA3                     __ptext24:	
  5628 ;; *************** function _Pant_Modos *****************
  5629 ;; Defined at:
  5630 ;;		line 64 in file "Display_Lcd.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5644 ;;      Params:         0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    4
  5651 ;; This function calls:
  5652 ;;		_LCD_array
  5653 ;;		_LCD_command
  5654 ;;		_LCD_date
  5655 ;;		_LCD_xy
  5656 ;; This function is called by:
  5657 ;;		_MEF_Subest_Actualizacion
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _Pant_Modos
  5663  0AA3                     _Pant_Modos:
  5664                           
  5665                           ;Display_Lcd.c: 66:     LCD_command(0x01);
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _Pant_Modos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5669  0AA3  3001               	movlw	1
  5670  0AA4  120A  158A  2680  120A  158A  	fcall	_LCD_command
  5671                           
  5672                           ;Display_Lcd.c: 67:     LCD_array(1,1,"RPM:");
  5673  0AA9  3001               	movlw	1
  5674  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0AAC  00A1               	movwf	LCD_array@x
  5677  0AAD  3000               	movlw	0
  5678  0AAE  00A2               	movwf	LCD_array@x+1
  5679  0AAF  3001               	movlw	1
  5680  0AB0  00A3               	movwf	LCD_array@y
  5681  0AB1  3000               	movlw	0
  5682  0AB2  00A4               	movwf	LCD_array@y+1
  5683  0AB3  30F2               	movlw	low (STR_18| (0+32768))
  5684  0AB4  00A5               	movwf	LCD_array@date
  5685  0AB5  3084               	movlw	high (STR_18| (0+32768))
  5686  0AB6  00A6               	movwf	LCD_array@date+1
  5687  0AB7  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5688                           
  5689                           ;Display_Lcd.c: 68:     LCD_array(2,1,"PWM:");
  5690  0ABC  3002               	movlw	2
  5691  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  5692  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  5693  0ABF  00A1               	movwf	LCD_array@x
  5694  0AC0  3000               	movlw	0
  5695  0AC1  00A2               	movwf	LCD_array@x+1
  5696  0AC2  3001               	movlw	1
  5697  0AC3  00A3               	movwf	LCD_array@y
  5698  0AC4  3000               	movlw	0
  5699  0AC5  00A4               	movwf	LCD_array@y+1
  5700  0AC6  30F7               	movlw	low (STR_19| (0+32768))
  5701  0AC7  00A5               	movwf	LCD_array@date
  5702  0AC8  3084               	movlw	high (STR_19| (0+32768))
  5703  0AC9  00A6               	movwf	LCD_array@date+1
  5704  0ACA  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5705                           
  5706                           ;Display_Lcd.c: 69:     LCD_array(3,1,"TIEMPO:"),LCD_array(3,10,":");
  5707  0ACF  3003               	movlw	3
  5708  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  5709  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  5710  0AD2  00A1               	movwf	LCD_array@x
  5711  0AD3  3000               	movlw	0
  5712  0AD4  00A2               	movwf	LCD_array@x+1
  5713  0AD5  3001               	movlw	1
  5714  0AD6  00A3               	movwf	LCD_array@y
  5715  0AD7  3000               	movlw	0
  5716  0AD8  00A4               	movwf	LCD_array@y+1
  5717  0AD9  30EA               	movlw	low (STR_20| (0+32768))
  5718  0ADA  00A5               	movwf	LCD_array@date
  5719  0ADB  3084               	movlw	high (STR_20| (0+32768))
  5720  0ADC  00A6               	movwf	LCD_array@date+1
  5721  0ADD  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5722  0AE2  3003               	movlw	3
  5723  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0AE5  00A1               	movwf	LCD_array@x
  5726  0AE6  3000               	movlw	0
  5727  0AE7  00A2               	movwf	LCD_array@x+1
  5728  0AE8  300A               	movlw	10
  5729  0AE9  00A3               	movwf	LCD_array@y
  5730  0AEA  3000               	movlw	0
  5731  0AEB  00A4               	movwf	LCD_array@y+1
  5732  0AEC  30D5               	movlw	low ((STR_22+11)| (0+32768))
  5733  0AED  00A5               	movwf	LCD_array@date
  5734  0AEE  3084               	movlw	high ((STR_22+11)| (0+32768))
  5735  0AEF  00A6               	movwf	LCD_array@date+1
  5736  0AF0  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5737                           
  5738                           ;Display_Lcd.c: 70:     LCD_array(4,1,"TEMPERATURA:"),LCD_xy(4,16),LCD_date(0x01);
  5739  0AF5  3004               	movlw	4
  5740  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0AF8  00A1               	movwf	LCD_array@x
  5743  0AF9  3000               	movlw	0
  5744  0AFA  00A2               	movwf	LCD_array@x+1
  5745  0AFB  3001               	movlw	1
  5746  0AFC  00A3               	movwf	LCD_array@y
  5747  0AFD  3000               	movlw	0
  5748  0AFE  00A4               	movwf	LCD_array@y+1
  5749  0AFF  30CA               	movlw	low (STR_22| (0+32768))
  5750  0B00  00A5               	movwf	LCD_array@date
  5751  0B01  3084               	movlw	high (STR_22| (0+32768))
  5752  0B02  00A6               	movwf	LCD_array@date+1
  5753  0B03  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5754  0B08  3004               	movlw	4
  5755  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  5756  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  5757  0B0B  00A1               	movwf	LCD_xy@x
  5758  0B0C  3000               	movlw	0
  5759  0B0D  00A2               	movwf	LCD_xy@x+1
  5760  0B0E  3010               	movlw	16
  5761  0B0F  00A3               	movwf	LCD_xy@y
  5762  0B10  3000               	movlw	0
  5763  0B11  00A4               	movwf	LCD_xy@y+1
  5764  0B12  160A  118A  2325  120A  158A  	fcall	_LCD_xy
  5765  0B17  3001               	movlw	1
  5766  0B18  120A  158A  2510  120A  158A  	fcall	_LCD_date
  5767                           
  5768                           ;Display_Lcd.c: 71:     LCD_array(4,17,"C");
  5769  0B1D  3004               	movlw	4
  5770  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  5771  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  5772  0B20  00A1               	movwf	LCD_array@x
  5773  0B21  3000               	movlw	0
  5774  0B22  00A2               	movwf	LCD_array@x+1
  5775  0B23  3011               	movlw	17
  5776  0B24  00A3               	movwf	LCD_array@y
  5777  0B25  3000               	movlw	0
  5778  0B26  00A4               	movwf	LCD_array@y+1
  5779  0B27  3008               	movlw	low (STR_23| (0+32768))
  5780  0B28  00A5               	movwf	LCD_array@date
  5781  0B29  3085               	movlw	high (STR_23| (0+32768))
  5782  0B2A  00A6               	movwf	LCD_array@date+1
  5783  0B2B  160A  118A  2728   	fcall	_LCD_array
  5784  0B2E  0008               	return
  5785  0B2F                     __end_of_Pant_Modos:
  5786                           
  5787                           	psect	text25
  5788  1325                     __ptext25:	
  5789 ;; *************** function _LCD_xy *****************
  5790 ;; Defined at:
  5791 ;;		line 163 in file "Lcd.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  x               2    1[BANK0 ] int 
  5794 ;;  y               2    3[BANK0 ] int 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5806 ;;      Params:         0       4       0       0       0
  5807 ;;      Locals:         0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0
  5809 ;;      Totals:         0       4       0       0       0
  5810 ;;Total ram usage:        4 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    3
  5813 ;; This function calls:
  5814 ;;		_LCD_command
  5815 ;; This function is called by:
  5816 ;;		_Pant_Modos
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _LCD_xy
  5822  1325                     _LCD_xy:
  5823                           
  5824                           ;Lcd.c: 163: void LCD_xy(int x,int y);Lcd.c: 164: {;Lcd.c: 165:     switch(x)
  5825                           
  5826                           ;incstack = 0
  5827                           ; Regs used in _LCD_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5828  1325  2B42               	goto	l4450
  5829  1326                     l4440:
  5830  1326  0823               	movf	LCD_xy@y,w
  5831  1327  3EFF               	addlw	255
  5832  1328  3880               	iorlw	128
  5833  1329  120A  158A  2680   	fcall	_LCD_command
  5834                           
  5835                           ;Lcd.c: 168:         break;
  5836  132C  0008               	return
  5837  132D                     l4442:
  5838  132D  0823               	movf	LCD_xy@y,w
  5839  132E  3E3F               	addlw	63
  5840  132F  3880               	iorlw	128
  5841  1330  120A  158A  2680   	fcall	_LCD_command
  5842                           
  5843                           ;Lcd.c: 170:         break;
  5844  1333  0008               	return
  5845  1334                     l4444:
  5846  1334  0823               	movf	LCD_xy@y,w
  5847  1335  3E13               	addlw	19
  5848  1336  3880               	iorlw	128
  5849  1337  120A  158A  2680   	fcall	_LCD_command
  5850                           
  5851                           ;Lcd.c: 172:         break;
  5852  133A  0008               	return
  5853  133B                     l4446:
  5854  133B  0823               	movf	LCD_xy@y,w
  5855  133C  3E53               	addlw	83
  5856  133D  3880               	iorlw	128
  5857  133E  120A  158A  2680   	fcall	_LCD_command
  5858                           
  5859                           ;Lcd.c: 174:         break;
  5860  1341  0008               	return
  5861  1342                     l4450:
  5862                           
  5863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5864                           ; Switch size 1, requested type "simple"
  5865                           ; Number of cases is 1, Range of values is 0 to 0
  5866                           ; switch strategies available:
  5867                           ; Name         Instructions Cycles
  5868                           ; simple_byte            4     3 (average)
  5869                           ; direct_byte           11     8 (fixed)
  5870                           ; jumptable            260     6 (fixed)
  5871                           ;	Chosen strategy is simple_byte
  5872  1342  1283               	bcf	3,5	;RP0=0, select bank0
  5873  1343  1303               	bcf	3,6	;RP1=0, select bank0
  5874  1344  0822               	movf	LCD_xy@x+1,w
  5875  1345  3A00               	xorlw	0	; case 0
  5876  1346  1903               	skipnz
  5877  1347  2B49               	goto	l5170
  5878  1348  2B57               	goto	l528
  5879  1349                     l5170:
  5880                           
  5881                           ; Switch size 1, requested type "simple"
  5882                           ; Number of cases is 4, Range of values is 1 to 4
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           13     7 (average)
  5886                           ; direct_byte           23    11 (fixed)
  5887                           ; jumptable            263     9 (fixed)
  5888                           ;	Chosen strategy is simple_byte
  5889  1349  0821               	movf	LCD_xy@x,w
  5890  134A  3A01               	xorlw	1	; case 1
  5891  134B  1903               	skipnz
  5892  134C  2B26               	goto	l4440
  5893  134D  3A03               	xorlw	3	; case 2
  5894  134E  1903               	skipnz
  5895  134F  2B2D               	goto	l4442
  5896  1350  3A01               	xorlw	1	; case 3
  5897  1351  1903               	skipnz
  5898  1352  2B34               	goto	l4444
  5899  1353  3A07               	xorlw	7	; case 4
  5900  1354  1903               	skipnz
  5901  1355  2B3B               	goto	l4446
  5902  1356  2B57               	goto	l528
  5903  1357                     l528:
  5904  1357  0008               	return
  5905  1358                     __end_of_LCD_xy:
  5906                           
  5907                           	psect	text26
  5908  13C8                     __ptext26:	
  5909 ;; *************** function _Pant_Fuga *****************
  5910 ;; Defined at:
  5911 ;;		line 124 in file "Display_Lcd.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5925 ;;      Params:         0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0
  5927 ;;      Temps:          0       3       0       0       0
  5928 ;;      Totals:         0       3       0       0       0
  5929 ;;Total ram usage:        3 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    4
  5932 ;; This function calls:
  5933 ;;		_LCD_array
  5934 ;;		_LCD_command
  5935 ;; This function is called by:
  5936 ;;		_MEF_Subest_Actualizacion
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _Pant_Fuga
  5942  13C8                     _Pant_Fuga:
  5943                           
  5944                           ;Display_Lcd.c: 126:     LCD_command(0x01);
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in _Pant_Fuga: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5948  13C8  3001               	movlw	1
  5949  13C9  120A  158A  2680  160A  118A  	fcall	_LCD_command
  5950                           
  5951                           ;Display_Lcd.c: 127:     LCD_array(2,1,"    Modo Prueba:");
  5952  13CE  3002               	movlw	2
  5953  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  5954  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  5955  13D1  00A1               	movwf	LCD_array@x
  5956  13D2  3000               	movlw	0
  5957  13D3  00A2               	movwf	LCD_array@x+1
  5958  13D4  3001               	movlw	1
  5959  13D5  00A3               	movwf	LCD_array@y
  5960  13D6  3000               	movlw	0
  5961  13D7  00A4               	movwf	LCD_array@y+1
  5962  13D8  30A8               	movlw	low (STR_32| (0+32768))
  5963  13D9  00A5               	movwf	LCD_array@date
  5964  13DA  3084               	movlw	high (STR_32| (0+32768))
  5965  13DB  00A6               	movwf	LCD_array@date+1
  5966  13DC  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5967                           
  5968                           ;Display_Lcd.c: 128:     LCD_array(3,1,"    FUGA");
  5969  13E1  3003               	movlw	3
  5970  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  5971  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  5972  13E4  00A1               	movwf	LCD_array@x
  5973  13E5  3000               	movlw	0
  5974  13E6  00A2               	movwf	LCD_array@x+1
  5975  13E7  3001               	movlw	1
  5976  13E8  00A3               	movwf	LCD_array@y
  5977  13E9  3000               	movlw	0
  5978  13EA  00A4               	movwf	LCD_array@y+1
  5979  13EB  30E1               	movlw	low (STR_35| (0+32768))
  5980  13EC  00A5               	movwf	LCD_array@date
  5981  13ED  3084               	movlw	high (STR_35| (0+32768))
  5982  13EE  00A6               	movwf	LCD_array@date+1
  5983  13EF  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5984                           
  5985                           ;Display_Lcd.c: 129:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  5986  13F4  3027               	movlw	39
  5987  13F5  1283               	bcf	3,5	;RP0=0, select bank0
  5988  13F6  1303               	bcf	3,6	;RP1=0, select bank0
  5989  13F7  00AB               	movwf	??_Pant_Fuga+2
  5990  13F8  300D               	movlw	13
  5991  13F9  00AA               	movwf	??_Pant_Fuga+1
  5992  13FA  3025               	movlw	37
  5993  13FB  00A9               	movwf	??_Pant_Fuga
  5994  13FC                     u5257:
  5995  13FC  0BA9               	decfsz	??_Pant_Fuga,f
  5996  13FD  2BFC               	goto	u5257
  5997  13FE  0BAA               	decfsz	??_Pant_Fuga+1,f
  5998  13FF  2BFC               	goto	u5257
  5999  1400  0BAB               	decfsz	??_Pant_Fuga+2,f
  6000  1401  2BFC               	goto	u5257
  6001  1402  2C03               	nop2
  6002  1403  0008               	return
  6003  1404                     __end_of_Pant_Fuga:
  6004                           
  6005                           	psect	text27
  6006  138C                     __ptext27:	
  6007 ;; *************** function _Pant_Flujo *****************
  6008 ;; Defined at:
  6009 ;;		line 134 in file "Display_Lcd.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0
  6025 ;;      Temps:          0       3       0       0       0
  6026 ;;      Totals:         0       3       0       0       0
  6027 ;;Total ram usage:        3 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    4
  6030 ;; This function calls:
  6031 ;;		_LCD_array
  6032 ;;		_LCD_command
  6033 ;; This function is called by:
  6034 ;;		_MEF_Subest_Actualizacion
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _Pant_Flujo
  6040  138C                     _Pant_Flujo:
  6041                           
  6042                           ;Display_Lcd.c: 136:     LCD_command(0x01);
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _Pant_Flujo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6046  138C  3001               	movlw	1
  6047  138D  120A  158A  2680  160A  118A  	fcall	_LCD_command
  6048                           
  6049                           ;Display_Lcd.c: 138:     LCD_array(2,1,"    Modo Prueba:");
  6050  1392  3002               	movlw	2
  6051  1393  1283               	bcf	3,5	;RP0=0, select bank0
  6052  1394  1303               	bcf	3,6	;RP1=0, select bank0
  6053  1395  00A1               	movwf	LCD_array@x
  6054  1396  3000               	movlw	0
  6055  1397  00A2               	movwf	LCD_array@x+1
  6056  1398  3001               	movlw	1
  6057  1399  00A3               	movwf	LCD_array@y
  6058  139A  3000               	movlw	0
  6059  139B  00A4               	movwf	LCD_array@y+1
  6060  139C  30A8               	movlw	low (STR_32| (0+32768))
  6061  139D  00A5               	movwf	LCD_array@date
  6062  139E  3084               	movlw	high (STR_32| (0+32768))
  6063  139F  00A6               	movwf	LCD_array@date+1
  6064  13A0  160A  118A  2728  160A  118A  	fcall	_LCD_array
  6065                           
  6066                           ;Display_Lcd.c: 139:     LCD_array(3,1,"    FLUJO");
  6067  13A5  3003               	movlw	3
  6068  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  6069  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  6070  13A8  00A1               	movwf	LCD_array@x
  6071  13A9  3000               	movlw	0
  6072  13AA  00A2               	movwf	LCD_array@x+1
  6073  13AB  3001               	movlw	1
  6074  13AC  00A3               	movwf	LCD_array@y
  6075  13AD  3000               	movlw	0
  6076  13AE  00A4               	movwf	LCD_array@y+1
  6077  13AF  30D7               	movlw	low (STR_37| (0+32768))
  6078  13B0  00A5               	movwf	LCD_array@date
  6079  13B1  3084               	movlw	high (STR_37| (0+32768))
  6080  13B2  00A6               	movwf	LCD_array@date+1
  6081  13B3  160A  118A  2728  160A  118A  	fcall	_LCD_array
  6082                           
  6083                           ;Display_Lcd.c: 140:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  6084  13B8  3027               	movlw	39
  6085  13B9  1283               	bcf	3,5	;RP0=0, select bank0
  6086  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  6087  13BB  00AB               	movwf	??_Pant_Flujo+2
  6088  13BC  300D               	movlw	13
  6089  13BD  00AA               	movwf	??_Pant_Flujo+1
  6090  13BE  3025               	movlw	37
  6091  13BF  00A9               	movwf	??_Pant_Flujo
  6092  13C0                     u5267:
  6093  13C0  0BA9               	decfsz	??_Pant_Flujo,f
  6094  13C1  2BC0               	goto	u5267
  6095  13C2  0BAA               	decfsz	??_Pant_Flujo+1,f
  6096  13C3  2BC0               	goto	u5267
  6097  13C4  0BAB               	decfsz	??_Pant_Flujo+2,f
  6098  13C5  2BC0               	goto	u5267
  6099  13C6  2BC7               	nop2
  6100  13C7  0008               	return
  6101  13C8                     __end_of_Pant_Flujo:
  6102                           
  6103                           	psect	text28
  6104  0800                     __ptext28:	
  6105 ;; *************** function _Lec_Adc_Modo_Pulv *****************
  6106 ;; Defined at:
  6107 ;;		line 4 in file "Modo_Pulverizacion.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6121 ;;      Params:         0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    5
  6128 ;; This function calls:
  6129 ;;		_Adc_Min_Read
  6130 ;;		_Adc_Pwm_Read
  6131 ;;		_Adc_Rpm_Read
  6132 ;;		_Adc_Temp_Read
  6133 ;; This function is called by:
  6134 ;;		_MEF_Subest_Actualizacion
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _Lec_Adc_Modo_Pulv
  6140  0800                     _Lec_Adc_Modo_Pulv:
  6141                           
  6142                           ;Modo_Pulverizacion.c: 7:     Adc_Rpm_Read();
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in _Lec_Adc_Modo_Pulv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6146  0800  120A  118A  2221  120A  158A  	fcall	_Adc_Rpm_Read
  6147                           
  6148                           ;Modo_Pulverizacion.c: 10:     Adc_Pwm_Read();
  6149  0805  120A  158A  218F  120A  158A  	fcall	_Adc_Pwm_Read
  6150                           
  6151                           ;Modo_Pulverizacion.c: 13:     Adc_Min_Read();
  6152  080A  120A  118A  2614  120A  158A  	fcall	_Adc_Min_Read
  6153                           
  6154                           ;Modo_Pulverizacion.c: 16:     Adc_Temp_Read();
  6155  080F  160A  118A  26C4   	fcall	_Adc_Temp_Read
  6156  0812  0008               	return
  6157  0813                     __end_of_Lec_Adc_Modo_Pulv:
  6158                           
  6159                           	psect	text29
  6160  0221                     __ptext29:	
  6161 ;; *************** function _Adc_Rpm_Read *****************
  6162 ;; Defined at:
  6163 ;;		line 9 in file "Adc_Read.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  valor           2    9[BANK1 ] unsigned int 
  6168 ;;  dec_m           2    7[BANK1 ] unsigned int 
  6169 ;;  uni_m           2    5[BANK1 ] unsigned int 
  6170 ;;  cent            2    3[BANK1 ] unsigned int 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6180 ;;      Params:         0       0       0       0       0
  6181 ;;      Locals:         0       0      11       0       0
  6182 ;;      Temps:          0       4       0       0       0
  6183 ;;      Totals:         0       4      11       0       0
  6184 ;;Total ram usage:       15 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    4
  6187 ;; This function calls:
  6188 ;;		_Adc
  6189 ;;		___awtoft
  6190 ;;		___ftdiv
  6191 ;;		___ftmul
  6192 ;;		___fttol
  6193 ;;		___lwdiv
  6194 ;;		___wmul
  6195 ;; This function is called by:
  6196 ;;		_Lec_Adc_Modo_Pulv
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function _Adc_Rpm_Read
  6202  0221                     _Adc_Rpm_Read:
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _Adc_Rpm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6206  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6207  0222  1303               	bcf	3,6	;RP1=0, select bank1
  6208  0223  01C4               	clrf	Adc_Rpm_Read@dec_m^(0+128)
  6209  0224  01C5               	clrf	(Adc_Rpm_Read@dec_m+1)^(0+128)
  6210  0225  01C2               	clrf	Adc_Rpm_Read@uni_m^(0+128)
  6211  0226  01C3               	clrf	(Adc_Rpm_Read@uni_m+1)^(0+128)
  6212                           
  6213                           ;Adc_Read.c: 13:     valor = (int)((Adc(0)*5.0/1023.0)*10000.0/5.0);
  6214  0227  3000               	movlw	0
  6215  0228  120A  118A  23AD  120A  118A  	fcall	_Adc
  6216  022D  0875               	movf	?_Adc+1,w
  6217  022E  1283               	bcf	3,5	;RP0=0, select bank0
  6218  022F  1303               	bcf	3,6	;RP1=0, select bank0
  6219  0230  00A9               	movwf	___awtoft@c+1
  6220  0231  0874               	movf	?_Adc,w
  6221  0232  00A8               	movwf	___awtoft@c
  6222  0233  160A  118A  2222  120A  118A  	fcall	___awtoft
  6223  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6224  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6225  023A  0828               	movf	?___awtoft,w
  6226  023B  00AF               	movwf	___ftmul@f2
  6227  023C  0829               	movf	?___awtoft+1,w
  6228  023D  00B0               	movwf	___ftmul@f2+1
  6229  023E  082A               	movf	?___awtoft+2,w
  6230  023F  00B1               	movwf	___ftmul@f2+2
  6231  0240  3000               	movlw	0
  6232  0241  00AC               	movwf	___ftmul@f1
  6233  0242  30A0               	movlw	160
  6234  0243  00AD               	movwf	___ftmul@f1+1
  6235  0244  3040               	movlw	64
  6236  0245  00AE               	movwf	___ftmul@f1+2
  6237  0246  120A  118A  270F  120A  118A  	fcall	___ftmul
  6238  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6239  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6240  024D  082C               	movf	?___ftmul,w
  6241  024E  00BE               	movwf	___ftdiv@f1
  6242  024F  082D               	movf	?___ftmul+1,w
  6243  0250  00BF               	movwf	___ftdiv@f1+1
  6244  0251  082E               	movf	?___ftmul+2,w
  6245  0252  00C0               	movwf	___ftdiv@f1+2
  6246  0253  30C0               	movlw	192
  6247  0254  00BB               	movwf	___ftdiv@f2
  6248  0255  307F               	movlw	127
  6249  0256  00BC               	movwf	___ftdiv@f2+1
  6250  0257  3044               	movlw	68
  6251  0258  00BD               	movwf	___ftdiv@f2+2
  6252  0259  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  6253  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6254  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6255  0260  083B               	movf	?___ftdiv,w
  6256  0261  1683               	bsf	3,5	;RP0=1, select bank1
  6257  0262  1303               	bcf	3,6	;RP1=0, select bank1
  6258  0263  00BD               	movwf	_Adc_Rpm_Read$1523^(0+128)
  6259  0264  1283               	bcf	3,5	;RP0=0, select bank0
  6260  0265  1303               	bcf	3,6	;RP1=0, select bank0
  6261  0266  083C               	movf	?___ftdiv+1,w
  6262  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6263  0268  1303               	bcf	3,6	;RP1=0, select bank1
  6264  0269  00BE               	movwf	(_Adc_Rpm_Read$1523+1)^(0+128)
  6265  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6266  026B  1303               	bcf	3,6	;RP1=0, select bank0
  6267  026C  083D               	movf	?___ftdiv+2,w
  6268  026D  1683               	bsf	3,5	;RP0=1, select bank1
  6269  026E  1303               	bcf	3,6	;RP1=0, select bank1
  6270  026F  00BF               	movwf	(_Adc_Rpm_Read$1523+2)^(0+128)
  6271                           
  6272                           ;Adc_Read.c: 13:     valor = (int)((Adc(0)*5.0/1023.0)*10000.0/5.0);
  6273  0270  083D               	movf	_Adc_Rpm_Read$1523^(0+128),w
  6274  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6275  0272  1303               	bcf	3,6	;RP1=0, select bank0
  6276  0273  00AF               	movwf	___ftmul@f2
  6277  0274  1683               	bsf	3,5	;RP0=1, select bank1
  6278  0275  1303               	bcf	3,6	;RP1=0, select bank1
  6279  0276  083E               	movf	(_Adc_Rpm_Read$1523+1)^(0+128),w
  6280  0277  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0278  1303               	bcf	3,6	;RP1=0, select bank0
  6282  0279  00B0               	movwf	___ftmul@f2+1
  6283  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6284  027B  1303               	bcf	3,6	;RP1=0, select bank1
  6285  027C  083F               	movf	(_Adc_Rpm_Read$1523+2)^(0+128),w
  6286  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6287  027E  1303               	bcf	3,6	;RP1=0, select bank0
  6288  027F  00B1               	movwf	___ftmul@f2+2
  6289  0280  3040               	movlw	64
  6290  0281  00AC               	movwf	___ftmul@f1
  6291  0282  301C               	movlw	28
  6292  0283  00AD               	movwf	___ftmul@f1+1
  6293  0284  3046               	movlw	70
  6294  0285  00AE               	movwf	___ftmul@f1+2
  6295  0286  120A  118A  270F  120A  118A  	fcall	___ftmul
  6296  028B  1283               	bcf	3,5	;RP0=0, select bank0
  6297  028C  1303               	bcf	3,6	;RP1=0, select bank0
  6298  028D  082C               	movf	?___ftmul,w
  6299  028E  00BE               	movwf	___ftdiv@f1
  6300  028F  082D               	movf	?___ftmul+1,w
  6301  0290  00BF               	movwf	___ftdiv@f1+1
  6302  0291  082E               	movf	?___ftmul+2,w
  6303  0292  00C0               	movwf	___ftdiv@f1+2
  6304  0293  3000               	movlw	0
  6305  0294  00BB               	movwf	___ftdiv@f2
  6306  0295  30A0               	movlw	160
  6307  0296  00BC               	movwf	___ftdiv@f2+1
  6308  0297  3040               	movlw	64
  6309  0298  00BD               	movwf	___ftdiv@f2+2
  6310  0299  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  6311  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6312  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6313  02A0  083B               	movf	?___ftdiv,w
  6314  02A1  00CA               	movwf	___fttol@f1
  6315  02A2  083C               	movf	?___ftdiv+1,w
  6316  02A3  00CB               	movwf	___fttol@f1+1
  6317  02A4  083D               	movf	?___ftdiv+2,w
  6318  02A5  00CC               	movwf	___fttol@f1+2
  6319  02A6  120A  158A  2013  120A  118A  	fcall	___fttol
  6320  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  6321  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  6322  02AD  084B               	movf	?___fttol+1,w
  6323  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  6324  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  6325  02B0  00C7               	movwf	(Adc_Rpm_Read@valor+1)^(0+128)
  6326  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6327  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6328  02B3  084A               	movf	?___fttol,w
  6329  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6330  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  6331  02B6  00C6               	movwf	Adc_Rpm_Read@valor^(0+128)
  6332                           
  6333                           ;Adc_Read.c: 15:     dec_m = (int)(valor/10000)*10000;
  6334  02B7  3010               	movlw	16
  6335  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  6336  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  6337  02BA  00A0               	movwf	___lwdiv@divisor
  6338  02BB  3027               	movlw	39
  6339  02BC  00A1               	movwf	___lwdiv@divisor+1
  6340  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  6341  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  6342  02BF  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6343  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  6344  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  6345  02C2  00A3               	movwf	___lwdiv@dividend+1
  6346  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6347  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  6348  02C5  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6349  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  6350  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  6351  02C8  00A2               	movwf	___lwdiv@dividend
  6352  02C9  160A  118A  247D  120A  118A  	fcall	___lwdiv
  6353  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  6354  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  6355  02D0  0821               	movf	?___lwdiv+1,w
  6356  02D1  00A8               	movwf	___wmul@multiplier+1
  6357  02D2  0820               	movf	?___lwdiv,w
  6358  02D3  00A7               	movwf	___wmul@multiplier
  6359  02D4  3010               	movlw	16
  6360  02D5  00A9               	movwf	___wmul@multiplicand
  6361  02D6  3027               	movlw	39
  6362  02D7  00AA               	movwf	___wmul@multiplicand+1
  6363  02D8  160A  118A  21B7  120A  118A  	fcall	___wmul
  6364  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  6365  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  6366  02DF  0828               	movf	?___wmul+1,w
  6367  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6368  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  6369  02E2  00C5               	movwf	(Adc_Rpm_Read@dec_m+1)^(0+128)
  6370  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6371  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6372  02E5  0827               	movf	?___wmul,w
  6373  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  6374  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  6375  02E8  00C4               	movwf	Adc_Rpm_Read@dec_m^(0+128)
  6376                           
  6377                           ;Adc_Read.c: 16:     uni_m = (int)((valor-dec_m)/1000)*1000;
  6378  02E9  30E8               	movlw	232
  6379  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6380  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6381  02EC  00A0               	movwf	___lwdiv@divisor
  6382  02ED  3003               	movlw	3
  6383  02EE  00A1               	movwf	___lwdiv@divisor+1
  6384  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  6385  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  6386  02F1  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6387  02F2  0246               	subwf	Adc_Rpm_Read@valor^(0+128),w
  6388  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  6389  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  6390  02F5  00A2               	movwf	___lwdiv@dividend
  6391  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  6392  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  6393  02F8  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6394  02F9  1C03               	skipc
  6395  02FA  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6396  02FB  0247               	subwf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6397  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6398  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6399  02FE  00A3               	movwf	___lwdiv@dividend+1
  6400  02FF  160A  118A  247D  120A  118A  	fcall	___lwdiv
  6401  0304  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0305  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0306  0821               	movf	?___lwdiv+1,w
  6404  0307  00A8               	movwf	___wmul@multiplier+1
  6405  0308  0820               	movf	?___lwdiv,w
  6406  0309  00A7               	movwf	___wmul@multiplier
  6407  030A  30E8               	movlw	232
  6408  030B  00A9               	movwf	___wmul@multiplicand
  6409  030C  3003               	movlw	3
  6410  030D  00AA               	movwf	___wmul@multiplicand+1
  6411  030E  160A  118A  21B7  120A  118A  	fcall	___wmul
  6412  0313  1283               	bcf	3,5	;RP0=0, select bank0
  6413  0314  1303               	bcf	3,6	;RP1=0, select bank0
  6414  0315  0828               	movf	?___wmul+1,w
  6415  0316  1683               	bsf	3,5	;RP0=1, select bank1
  6416  0317  1303               	bcf	3,6	;RP1=0, select bank1
  6417  0318  00C3               	movwf	(Adc_Rpm_Read@uni_m+1)^(0+128)
  6418  0319  1283               	bcf	3,5	;RP0=0, select bank0
  6419  031A  1303               	bcf	3,6	;RP1=0, select bank0
  6420  031B  0827               	movf	?___wmul,w
  6421  031C  1683               	bsf	3,5	;RP0=1, select bank1
  6422  031D  1303               	bcf	3,6	;RP1=0, select bank1
  6423  031E  00C2               	movwf	Adc_Rpm_Read@uni_m^(0+128)
  6424                           
  6425                           ;Adc_Read.c: 17:     cent = (int)((valor-(uni_m+dec_m))/100)*100;
  6426  031F  3064               	movlw	100
  6427  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6428  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6429  0322  00A0               	movwf	___lwdiv@divisor
  6430  0323  3000               	movlw	0
  6431  0324  00A1               	movwf	___lwdiv@divisor+1
  6432  0325  1683               	bsf	3,5	;RP0=1, select bank1
  6433  0326  1303               	bcf	3,6	;RP1=0, select bank1
  6434  0327  0942               	comf	Adc_Rpm_Read@uni_m^(0+128),w
  6435  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6437  032A  00D7               	movwf	??_Adc_Rpm_Read
  6438  032B  1683               	bsf	3,5	;RP0=1, select bank1
  6439  032C  1303               	bcf	3,6	;RP1=0, select bank1
  6440  032D  0943               	comf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6441  032E  1283               	bcf	3,5	;RP0=0, select bank0
  6442  032F  1303               	bcf	3,6	;RP1=0, select bank0
  6443  0330  00D8               	movwf	??_Adc_Rpm_Read+1
  6444  0331  0AD7               	incf	??_Adc_Rpm_Read,f
  6445  0332  1903               	skipnz
  6446  0333  0AD8               	incf	??_Adc_Rpm_Read+1,f
  6447  0334  1683               	bsf	3,5	;RP0=1, select bank1
  6448  0335  1303               	bcf	3,6	;RP1=0, select bank1
  6449  0336  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6450  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6452  0339  0257               	subwf	??_Adc_Rpm_Read,w
  6453  033A  00D9               	movwf	??_Adc_Rpm_Read+2
  6454  033B  1683               	bsf	3,5	;RP0=1, select bank1
  6455  033C  1303               	bcf	3,6	;RP1=0, select bank1
  6456  033D  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6457  033E  1C03               	skipc
  6458  033F  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6459  0340  1283               	bcf	3,5	;RP0=0, select bank0
  6460  0341  1303               	bcf	3,6	;RP1=0, select bank0
  6461  0342  0258               	subwf	??_Adc_Rpm_Read+1,w
  6462  0343  00DA               	movwf	??_Adc_Rpm_Read+3
  6463  0344  1683               	bsf	3,5	;RP0=1, select bank1
  6464  0345  1303               	bcf	3,6	;RP1=0, select bank1
  6465  0346  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6466  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6468  0349  0759               	addwf	??_Adc_Rpm_Read+2,w
  6469  034A  00A2               	movwf	___lwdiv@dividend
  6470  034B  1683               	bsf	3,5	;RP0=1, select bank1
  6471  034C  1303               	bcf	3,6	;RP1=0, select bank1
  6472  034D  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6473  034E  1803               	skipnc
  6474  034F  0A47               	incf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6475  0350  1283               	bcf	3,5	;RP0=0, select bank0
  6476  0351  1303               	bcf	3,6	;RP1=0, select bank0
  6477  0352  075A               	addwf	??_Adc_Rpm_Read+3,w
  6478  0353  00A3               	movwf	___lwdiv@dividend+1
  6479  0354  160A  118A  247D  120A  118A  	fcall	___lwdiv
  6480  0359  1283               	bcf	3,5	;RP0=0, select bank0
  6481  035A  1303               	bcf	3,6	;RP1=0, select bank0
  6482  035B  0821               	movf	?___lwdiv+1,w
  6483  035C  00A8               	movwf	___wmul@multiplier+1
  6484  035D  0820               	movf	?___lwdiv,w
  6485  035E  00A7               	movwf	___wmul@multiplier
  6486  035F  3064               	movlw	100
  6487  0360  00A9               	movwf	___wmul@multiplicand
  6488  0361  3000               	movlw	0
  6489  0362  00AA               	movwf	___wmul@multiplicand+1
  6490  0363  160A  118A  21B7  120A  118A  	fcall	___wmul
  6491  0368  1283               	bcf	3,5	;RP0=0, select bank0
  6492  0369  1303               	bcf	3,6	;RP1=0, select bank0
  6493  036A  0828               	movf	?___wmul+1,w
  6494  036B  1683               	bsf	3,5	;RP0=1, select bank1
  6495  036C  1303               	bcf	3,6	;RP1=0, select bank1
  6496  036D  00C1               	movwf	(Adc_Rpm_Read@cent+1)^(0+128)
  6497  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6498  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0370  0827               	movf	?___wmul,w
  6500  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6501  0372  1303               	bcf	3,6	;RP1=0, select bank1
  6502  0373  00C0               	movwf	Adc_Rpm_Read@cent^(0+128)
  6503                           
  6504                           ;Adc_Read.c: 19:     valor = cent+uni_m+dec_m;
  6505  0374  0842               	movf	Adc_Rpm_Read@uni_m^(0+128),w
  6506  0375  0740               	addwf	Adc_Rpm_Read@cent^(0+128),w
  6507  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0378  00D7               	movwf	??_Adc_Rpm_Read
  6510  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6511  037A  1303               	bcf	3,6	;RP1=0, select bank1
  6512  037B  0843               	movf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6513  037C  1803               	skipnc
  6514  037D  0A43               	incf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6515  037E  0741               	addwf	(Adc_Rpm_Read@cent+1)^(0+128),w
  6516  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0380  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0381  00D8               	movwf	??_Adc_Rpm_Read+1
  6519  0382  1683               	bsf	3,5	;RP0=1, select bank1
  6520  0383  1303               	bcf	3,6	;RP1=0, select bank1
  6521  0384  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6522  0385  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0386  1303               	bcf	3,6	;RP1=0, select bank0
  6524  0387  0757               	addwf	??_Adc_Rpm_Read,w
  6525  0388  1683               	bsf	3,5	;RP0=1, select bank1
  6526  0389  1303               	bcf	3,6	;RP1=0, select bank1
  6527  038A  00C6               	movwf	Adc_Rpm_Read@valor^(0+128)
  6528  038B  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6529  038C  1803               	skipnc
  6530  038D  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6531  038E  1283               	bcf	3,5	;RP0=0, select bank0
  6532  038F  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0390  0758               	addwf	??_Adc_Rpm_Read+1,w
  6534  0391  1683               	bsf	3,5	;RP0=1, select bank1
  6535  0392  1303               	bcf	3,6	;RP1=0, select bank1
  6536  0393  00C7               	movwf	(Adc_Rpm_Read@valor+1)^(0+128)
  6537                           
  6538                           ;Adc_Read.c: 20:     Rpm = valor;
  6539  0394  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6540  0395  00AF               	movwf	(_Rpm+1)^(0+128)
  6541  0396  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6542  0397  00AE               	movwf	_Rpm^(0+128)
  6543                           
  6544                           ;Adc_Read.c: 22:     if(Rpm == 0) Rpm = 60;
  6545  0398  082E               	movf	_Rpm^(0+128),w
  6546  0399  042F               	iorwf	(_Rpm+1)^(0+128),w
  6547  039A  1D03               	btfss	3,2
  6548  039B  2BA1               	goto	l4384
  6549  039C  303C               	movlw	60
  6550  039D  00AE               	movwf	_Rpm^(0+128)
  6551  039E  3000               	movlw	0
  6552  039F  00AF               	movwf	(_Rpm^(0+128)+1)
  6553  03A0  0008               	return
  6554  03A1                     l4384:
  6555  03A1  3027               	movlw	39
  6556  03A2  022F               	subwf	(_Rpm+1)^(0+128),w
  6557  03A3  3011               	movlw	17
  6558  03A4  1903               	skipnz
  6559  03A5  022E               	subwf	_Rpm^(0+128),w
  6560  03A6  1C03               	skipc
  6561  03A7  0008               	return
  6562  03A8  3010               	movlw	16
  6563  03A9  00AE               	movwf	_Rpm^(0+128)
  6564  03AA  3027               	movlw	39
  6565  03AB  00AF               	movwf	(_Rpm^(0+128)+1)
  6566  03AC  0008               	return
  6567  03AD                     __end_of_Adc_Rpm_Read:
  6568                           
  6569                           	psect	text30
  6570  11B7                     __ptext30:	
  6571 ;; *************** function ___wmul *****************
  6572 ;; Defined at:
  6573 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\Umul16.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  multiplier      2    7[BANK0 ] unsigned int 
  6576 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  product         2    4[COMMON] unsigned int 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  2    7[BANK0 ] unsigned int 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       4       0       0       0
  6589 ;;      Locals:         2       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0
  6591 ;;      Totals:         2       4       0       0       0
  6592 ;;Total ram usage:        6 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    2
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_Adc_Rpm_Read
  6599 ;;		_sprintf
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function ___wmul
  6605  11B7                     ___wmul:
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6609  11B7  01F4               	clrf	___wmul@product
  6610  11B8  01F5               	clrf	___wmul@product+1
  6611  11B9                     l4130:
  6612  11B9  1283               	bcf	3,5	;RP0=0, select bank0
  6613  11BA  1303               	bcf	3,6	;RP1=0, select bank0
  6614  11BB  1C27               	btfss	___wmul@multiplier,0
  6615  11BC  29C3               	goto	l792
  6616  11BD  0829               	movf	___wmul@multiplicand,w
  6617  11BE  07F4               	addwf	___wmul@product,f
  6618  11BF  1803               	skipnc
  6619  11C0  0AF5               	incf	___wmul@product+1,f
  6620  11C1  082A               	movf	___wmul@multiplicand+1,w
  6621  11C2  07F5               	addwf	___wmul@product+1,f
  6622  11C3                     l792:
  6623  11C3  3001               	movlw	1
  6624  11C4                     u3975:
  6625  11C4  1003               	clrc
  6626  11C5  0DA9               	rlf	___wmul@multiplicand,f
  6627  11C6  0DAA               	rlf	___wmul@multiplicand+1,f
  6628  11C7  3EFF               	addlw	-1
  6629  11C8  1D03               	skipz
  6630  11C9  29C4               	goto	u3975
  6631  11CA  3001               	movlw	1
  6632  11CB                     u3985:
  6633  11CB  1003               	clrc
  6634  11CC  0CA8               	rrf	___wmul@multiplier+1,f
  6635  11CD  0CA7               	rrf	___wmul@multiplier,f
  6636  11CE  3EFF               	addlw	-1
  6637  11CF  1D03               	skipz
  6638  11D0  29CB               	goto	u3985
  6639  11D1  0827               	movf	___wmul@multiplier,w
  6640  11D2  0428               	iorwf	___wmul@multiplier+1,w
  6641  11D3  1D03               	btfss	3,2
  6642  11D4  29B9               	goto	l4130
  6643  11D5  0875               	movf	___wmul@product+1,w
  6644  11D6  00A8               	movwf	?___wmul+1
  6645  11D7  0874               	movf	___wmul@product,w
  6646  11D8  00A7               	movwf	?___wmul
  6647  11D9  0008               	return
  6648  11DA                     __end_of___wmul:
  6649                           
  6650                           	psect	text31
  6651  147D                     __ptext31:	
  6652 ;; *************** function ___lwdiv *****************
  6653 ;; Defined at:
  6654 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwdiv.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  divisor         2    0[BANK0 ] unsigned int 
  6657 ;;  dividend        2    2[BANK0 ] unsigned int 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  quotient        2    5[BANK0 ] unsigned int 
  6660 ;;  counter         1    4[BANK0 ] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  2    0[BANK0 ] unsigned int 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0, btemp+1
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6670 ;;      Params:         0       4       0       0       0
  6671 ;;      Locals:         0       3       0       0       0
  6672 ;;      Temps:          0       0       0       0       0
  6673 ;;      Totals:         0       7       0       0       0
  6674 ;;Total ram usage:        7 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    2
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_Adc_Rpm_Read
  6681 ;;		_sprintf
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function ___lwdiv
  6687  147D                     ___lwdiv:
  6688                           
  6689                           ;incstack = 0
  6690                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  6691  147D  1283               	bcf	3,5	;RP0=0, select bank0
  6692  147E  1303               	bcf	3,6	;RP1=0, select bank0
  6693  147F  01A5               	clrf	___lwdiv@quotient
  6694  1480  01A6               	clrf	___lwdiv@quotient+1
  6695  1481  0820               	movf	___lwdiv@divisor,w
  6696  1482  0421               	iorwf	___lwdiv@divisor+1,w
  6697  1483  1903               	btfsc	3,2
  6698  1484  2CB6               	goto	l4316
  6699  1485  01A4               	clrf	___lwdiv@counter
  6700  1486  0AA4               	incf	___lwdiv@counter,f
  6701  1487                     l4304:
  6702  1487  1BA1               	btfsc	___lwdiv@divisor+1,7
  6703  1488  2C95               	goto	l4306
  6704  1489  3001               	movlw	1
  6705  148A                     u4345:
  6706  148A  1003               	clrc
  6707  148B  0DA0               	rlf	___lwdiv@divisor,f
  6708  148C  0DA1               	rlf	___lwdiv@divisor+1,f
  6709  148D  3EFF               	addlw	-1
  6710  148E  1D03               	skipz
  6711  148F  2C8A               	goto	u4345
  6712  1490  3001               	movlw	1
  6713  1491  00FF               	movwf	127
  6714  1492  087F               	movf	127,w
  6715  1493  07A4               	addwf	___lwdiv@counter,f
  6716  1494  2C87               	goto	l4304
  6717  1495                     l4306:
  6718  1495  3001               	movlw	1
  6719  1496                     u4365:
  6720  1496  1003               	clrc
  6721  1497  0DA5               	rlf	___lwdiv@quotient,f
  6722  1498  0DA6               	rlf	___lwdiv@quotient+1,f
  6723  1499  3EFF               	addlw	-1
  6724  149A  1D03               	skipz
  6725  149B  2C96               	goto	u4365
  6726  149C  0821               	movf	___lwdiv@divisor+1,w
  6727  149D  0223               	subwf	___lwdiv@dividend+1,w
  6728  149E  1D03               	skipz
  6729  149F  2CA2               	goto	u4375
  6730  14A0  0820               	movf	___lwdiv@divisor,w
  6731  14A1  0222               	subwf	___lwdiv@dividend,w
  6732  14A2                     u4375:
  6733  14A2  1C03               	skipc
  6734  14A3  2CAB               	goto	l4312
  6735  14A4  0820               	movf	___lwdiv@divisor,w
  6736  14A5  02A2               	subwf	___lwdiv@dividend,f
  6737  14A6  0821               	movf	___lwdiv@divisor+1,w
  6738  14A7  1C03               	skipc
  6739  14A8  03A3               	decf	___lwdiv@dividend+1,f
  6740  14A9  02A3               	subwf	___lwdiv@dividend+1,f
  6741  14AA  1425               	bsf	___lwdiv@quotient,0
  6742  14AB                     l4312:
  6743  14AB  3001               	movlw	1
  6744  14AC                     u4385:
  6745  14AC  1003               	clrc
  6746  14AD  0CA1               	rrf	___lwdiv@divisor+1,f
  6747  14AE  0CA0               	rrf	___lwdiv@divisor,f
  6748  14AF  3EFF               	addlw	-1
  6749  14B0  1D03               	skipz
  6750  14B1  2CAC               	goto	u4385
  6751  14B2  3001               	movlw	1
  6752  14B3  02A4               	subwf	___lwdiv@counter,f
  6753  14B4  1D03               	btfss	3,2
  6754  14B5  2C95               	goto	l4306
  6755  14B6                     l4316:
  6756  14B6  0826               	movf	___lwdiv@quotient+1,w
  6757  14B7  00A1               	movwf	?___lwdiv+1
  6758  14B8  0825               	movf	___lwdiv@quotient,w
  6759  14B9  00A0               	movwf	?___lwdiv
  6760  14BA  0008               	return
  6761  14BB                     __end_of___lwdiv:
  6762                           
  6763                           	psect	text32
  6764  098F                     __ptext32:	
  6765 ;; *************** function _Adc_Pwm_Read *****************
  6766 ;; Defined at:
  6767 ;;		line 28 in file "Adc_Read.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6781 ;;      Params:         0       0       0       0       0
  6782 ;;      Locals:         0       3       0       0       0
  6783 ;;      Temps:          0       0       0       0       0
  6784 ;;      Totals:         0       3       0       0       0
  6785 ;;Total ram usage:        3 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    4
  6788 ;; This function calls:
  6789 ;;		_Adc
  6790 ;;		___awtoft
  6791 ;;		___ftdiv
  6792 ;;		___ftmul
  6793 ;;		___fttol
  6794 ;; This function is called by:
  6795 ;;		_Lec_Adc_Modo_Pulv
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           
  6800                           ;psect for function _Adc_Pwm_Read
  6801  098F                     _Adc_Pwm_Read:
  6802                           
  6803                           ;Adc_Read.c: 30:     Pwm = (int)((Adc(1)*5.0/1023.0)*100.0/5.0);
  6804                           
  6805                           ;incstack = 0
  6806                           ; Regs used in _Adc_Pwm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6807  098F  3001               	movlw	1
  6808  0990  120A  118A  23AD  120A  158A  	fcall	_Adc
  6809  0995  0875               	movf	?_Adc+1,w
  6810  0996  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0997  1303               	bcf	3,6	;RP1=0, select bank0
  6812  0998  00A9               	movwf	___awtoft@c+1
  6813  0999  0874               	movf	?_Adc,w
  6814  099A  00A8               	movwf	___awtoft@c
  6815  099B  160A  118A  2222  120A  158A  	fcall	___awtoft
  6816  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  6817  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  6818  09A2  0828               	movf	?___awtoft,w
  6819  09A3  00AF               	movwf	___ftmul@f2
  6820  09A4  0829               	movf	?___awtoft+1,w
  6821  09A5  00B0               	movwf	___ftmul@f2+1
  6822  09A6  082A               	movf	?___awtoft+2,w
  6823  09A7  00B1               	movwf	___ftmul@f2+2
  6824  09A8  3000               	movlw	0
  6825  09A9  00AC               	movwf	___ftmul@f1
  6826  09AA  30A0               	movlw	160
  6827  09AB  00AD               	movwf	___ftmul@f1+1
  6828  09AC  3040               	movlw	64
  6829  09AD  00AE               	movwf	___ftmul@f1+2
  6830  09AE  120A  118A  270F  120A  158A  	fcall	___ftmul
  6831  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  6832  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  6833  09B5  082C               	movf	?___ftmul,w
  6834  09B6  00BE               	movwf	___ftdiv@f1
  6835  09B7  082D               	movf	?___ftmul+1,w
  6836  09B8  00BF               	movwf	___ftdiv@f1+1
  6837  09B9  082E               	movf	?___ftmul+2,w
  6838  09BA  00C0               	movwf	___ftdiv@f1+2
  6839  09BB  30C0               	movlw	192
  6840  09BC  00BB               	movwf	___ftdiv@f2
  6841  09BD  307F               	movlw	127
  6842  09BE  00BC               	movwf	___ftdiv@f2+1
  6843  09BF  3044               	movlw	68
  6844  09C0  00BD               	movwf	___ftdiv@f2+2
  6845  09C1  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  6846  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  6847  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  6848  09C8  083B               	movf	?___ftdiv,w
  6849  09C9  00D7               	movwf	_Adc_Pwm_Read$1524
  6850  09CA  083C               	movf	?___ftdiv+1,w
  6851  09CB  00D8               	movwf	_Adc_Pwm_Read$1524+1
  6852  09CC  083D               	movf	?___ftdiv+2,w
  6853  09CD  00D9               	movwf	_Adc_Pwm_Read$1524+2
  6854                           
  6855                           ;Adc_Read.c: 30:     Pwm = (int)((Adc(1)*5.0/1023.0)*100.0/5.0);
  6856  09CE  0857               	movf	_Adc_Pwm_Read$1524,w
  6857  09CF  00AF               	movwf	___ftmul@f2
  6858  09D0  0858               	movf	_Adc_Pwm_Read$1524+1,w
  6859  09D1  00B0               	movwf	___ftmul@f2+1
  6860  09D2  0859               	movf	_Adc_Pwm_Read$1524+2,w
  6861  09D3  00B1               	movwf	___ftmul@f2+2
  6862  09D4  3000               	movlw	0
  6863  09D5  00AC               	movwf	___ftmul@f1
  6864  09D6  30C8               	movlw	200
  6865  09D7  00AD               	movwf	___ftmul@f1+1
  6866  09D8  3042               	movlw	66
  6867  09D9  00AE               	movwf	___ftmul@f1+2
  6868  09DA  120A  118A  270F  120A  158A  	fcall	___ftmul
  6869  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  6870  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  6871  09E1  082C               	movf	?___ftmul,w
  6872  09E2  00BE               	movwf	___ftdiv@f1
  6873  09E3  082D               	movf	?___ftmul+1,w
  6874  09E4  00BF               	movwf	___ftdiv@f1+1
  6875  09E5  082E               	movf	?___ftmul+2,w
  6876  09E6  00C0               	movwf	___ftdiv@f1+2
  6877  09E7  3000               	movlw	0
  6878  09E8  00BB               	movwf	___ftdiv@f2
  6879  09E9  30A0               	movlw	160
  6880  09EA  00BC               	movwf	___ftdiv@f2+1
  6881  09EB  3040               	movlw	64
  6882  09EC  00BD               	movwf	___ftdiv@f2+2
  6883  09ED  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  6884  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  6885  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  6886  09F4  083B               	movf	?___ftdiv,w
  6887  09F5  00CA               	movwf	___fttol@f1
  6888  09F6  083C               	movf	?___ftdiv+1,w
  6889  09F7  00CB               	movwf	___fttol@f1+1
  6890  09F8  083D               	movf	?___ftdiv+2,w
  6891  09F9  00CC               	movwf	___fttol@f1+2
  6892  09FA  120A  158A  2013  120A  158A  	fcall	___fttol
  6893  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  6894  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  6895  0A01  084A               	movf	?___fttol,w
  6896  0A02  00FF               	movwf	127
  6897  0A03  087F               	movf	127,w
  6898  0A04  00E4               	movwf	_Pwm
  6899                           
  6900                           ;Adc_Read.c: 31:     if(Pwm > 95) Pwm = 95;
  6901  0A05  3060               	movlw	96
  6902  0A06  0264               	subwf	_Pwm,w
  6903  0A07  1C03               	skipc
  6904  0A08  2A0E               	goto	l4396
  6905  0A09  305F               	movlw	95
  6906  0A0A  00FF               	movwf	127
  6907  0A0B  087F               	movf	127,w
  6908  0A0C  00E4               	movwf	_Pwm
  6909  0A0D  0008               	return
  6910  0A0E                     l4396:
  6911  0A0E  3005               	movlw	5
  6912  0A0F  0264               	subwf	_Pwm,w
  6913  0A10  1803               	skipnc
  6914  0A11  0008               	return
  6915  0A12  3005               	movlw	5
  6916  0A13  00FF               	movwf	127
  6917  0A14  087F               	movf	127,w
  6918  0A15  00E4               	movwf	_Pwm
  6919  0A16  0008               	return
  6920  0A17                     __end_of_Adc_Pwm_Read:
  6921                           
  6922                           	psect	text33
  6923  111D                     __ptext33:	
  6924 ;; *************** function _Lec_Adc_Modo_Fuga *****************
  6925 ;; Defined at:
  6926 ;;		line 4 in file "Modo_Fuga.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6940 ;;      Params:         0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    5
  6947 ;; This function calls:
  6948 ;;		_Adc_Min_Read
  6949 ;;		_Adc_Temp_Read
  6950 ;; This function is called by:
  6951 ;;		_MEF_Subest_Actualizacion
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _Lec_Adc_Modo_Fuga
  6957  111D                     _Lec_Adc_Modo_Fuga:
  6958                           
  6959                           ;Modo_Fuga.c: 7:     Adc_Min_Read();
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _Lec_Adc_Modo_Fuga: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6963  111D  120A  118A  2614  160A  118A  	fcall	_Adc_Min_Read
  6964                           
  6965                           ;Modo_Fuga.c: 10:     Adc_Temp_Read();
  6966  1122  160A  118A  26C4   	fcall	_Adc_Temp_Read
  6967  1125  0008               	return
  6968  1126                     __end_of_Lec_Adc_Modo_Fuga:
  6969                           
  6970                           	psect	text34
  6971  1114                     __ptext34:	
  6972 ;; *************** function _Lec_Adc_Modo_Flujo *****************
  6973 ;; Defined at:
  6974 ;;		line 4 in file "Modo_Flujo.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6988 ;;      Params:         0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0
  6991 ;;      Totals:         0       0       0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    5
  6995 ;; This function calls:
  6996 ;;		_Adc_Min_Read
  6997 ;;		_Adc_Temp_Read
  6998 ;; This function is called by:
  6999 ;;		_MEF_Subest_Actualizacion
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           
  7004                           ;psect for function _Lec_Adc_Modo_Flujo
  7005  1114                     _Lec_Adc_Modo_Flujo:
  7006                           
  7007                           ;Modo_Flujo.c: 7:     Adc_Min_Read();
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in _Lec_Adc_Modo_Flujo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7011  1114  120A  118A  2614  160A  118A  	fcall	_Adc_Min_Read
  7012                           
  7013                           ;Modo_Flujo.c: 10:     Adc_Temp_Read();
  7014  1119  160A  118A  26C4   	fcall	_Adc_Temp_Read
  7015  111C  0008               	return
  7016  111D                     __end_of_Lec_Adc_Modo_Flujo:
  7017                           
  7018                           	psect	text35
  7019  16C4                     __ptext35:	
  7020 ;; *************** function _Adc_Temp_Read *****************
  7021 ;; Defined at:
  7022 ;;		line 47 in file "Adc_Read.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7036 ;;      Params:         0       0       0       0       0
  7037 ;;      Locals:         0       3       0       0       0
  7038 ;;      Temps:          0       0       0       0       0
  7039 ;;      Totals:         0       3       0       0       0
  7040 ;;Total ram usage:        3 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    4
  7043 ;; This function calls:
  7044 ;;		_Adc
  7045 ;;		___awtoft
  7046 ;;		___ftdiv
  7047 ;;		___ftmul
  7048 ;;		___fttol
  7049 ;; This function is called by:
  7050 ;;		_Lec_Adc_Modo_Pulv
  7051 ;;		_Lec_Adc_Modo_Fuga
  7052 ;;		_Lec_Adc_Modo_Flujo
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _Adc_Temp_Read
  7058  16C4                     _Adc_Temp_Read:
  7059                           
  7060                           ;Adc_Read.c: 49:     Temp = (int)((Adc(3)*5.0/1023.0)*100.0);
  7061                           
  7062                           ;incstack = 0
  7063                           ; Regs used in _Adc_Temp_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7064  16C4  3003               	movlw	3
  7065  16C5  120A  118A  23AD  160A  118A  	fcall	_Adc
  7066  16CA  0875               	movf	?_Adc+1,w
  7067  16CB  1283               	bcf	3,5	;RP0=0, select bank0
  7068  16CC  1303               	bcf	3,6	;RP1=0, select bank0
  7069  16CD  00A9               	movwf	___awtoft@c+1
  7070  16CE  0874               	movf	?_Adc,w
  7071  16CF  00A8               	movwf	___awtoft@c
  7072  16D0  160A  118A  2222  160A  118A  	fcall	___awtoft
  7073  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  7074  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  7075  16D7  0828               	movf	?___awtoft,w
  7076  16D8  00AF               	movwf	___ftmul@f2
  7077  16D9  0829               	movf	?___awtoft+1,w
  7078  16DA  00B0               	movwf	___ftmul@f2+1
  7079  16DB  082A               	movf	?___awtoft+2,w
  7080  16DC  00B1               	movwf	___ftmul@f2+2
  7081  16DD  3000               	movlw	0
  7082  16DE  00AC               	movwf	___ftmul@f1
  7083  16DF  30A0               	movlw	160
  7084  16E0  00AD               	movwf	___ftmul@f1+1
  7085  16E1  3040               	movlw	64
  7086  16E2  00AE               	movwf	___ftmul@f1+2
  7087  16E3  120A  118A  270F  160A  118A  	fcall	___ftmul
  7088  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  7089  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  7090  16EA  082C               	movf	?___ftmul,w
  7091  16EB  00BE               	movwf	___ftdiv@f1
  7092  16EC  082D               	movf	?___ftmul+1,w
  7093  16ED  00BF               	movwf	___ftdiv@f1+1
  7094  16EE  082E               	movf	?___ftmul+2,w
  7095  16EF  00C0               	movwf	___ftdiv@f1+2
  7096  16F0  30C0               	movlw	192
  7097  16F1  00BB               	movwf	___ftdiv@f2
  7098  16F2  307F               	movlw	127
  7099  16F3  00BC               	movwf	___ftdiv@f2+1
  7100  16F4  3044               	movlw	68
  7101  16F5  00BD               	movwf	___ftdiv@f2+2
  7102  16F6  120A  158A  25C8  160A  118A  	fcall	___ftdiv
  7103  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  7104  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  7105  16FD  083B               	movf	?___ftdiv,w
  7106  16FE  00D7               	movwf	_Adc_Temp_Read$1526
  7107  16FF  083C               	movf	?___ftdiv+1,w
  7108  1700  00D8               	movwf	_Adc_Temp_Read$1526+1
  7109  1701  083D               	movf	?___ftdiv+2,w
  7110  1702  00D9               	movwf	_Adc_Temp_Read$1526+2
  7111                           
  7112                           ;Adc_Read.c: 49:     Temp = (int)((Adc(3)*5.0/1023.0)*100.0);
  7113  1703  0857               	movf	_Adc_Temp_Read$1526,w
  7114  1704  00AF               	movwf	___ftmul@f2
  7115  1705  0858               	movf	_Adc_Temp_Read$1526+1,w
  7116  1706  00B0               	movwf	___ftmul@f2+1
  7117  1707  0859               	movf	_Adc_Temp_Read$1526+2,w
  7118  1708  00B1               	movwf	___ftmul@f2+2
  7119  1709  3000               	movlw	0
  7120  170A  00AC               	movwf	___ftmul@f1
  7121  170B  30C8               	movlw	200
  7122  170C  00AD               	movwf	___ftmul@f1+1
  7123  170D  3042               	movlw	66
  7124  170E  00AE               	movwf	___ftmul@f1+2
  7125  170F  120A  118A  270F  160A  118A  	fcall	___ftmul
  7126  1714  1283               	bcf	3,5	;RP0=0, select bank0
  7127  1715  1303               	bcf	3,6	;RP1=0, select bank0
  7128  1716  082C               	movf	?___ftmul,w
  7129  1717  00CA               	movwf	___fttol@f1
  7130  1718  082D               	movf	?___ftmul+1,w
  7131  1719  00CB               	movwf	___fttol@f1+1
  7132  171A  082E               	movf	?___ftmul+2,w
  7133  171B  00CC               	movwf	___fttol@f1+2
  7134  171C  120A  158A  2013   	fcall	___fttol
  7135  171F  1283               	bcf	3,5	;RP0=0, select bank0
  7136  1720  1303               	bcf	3,6	;RP1=0, select bank0
  7137  1721  084A               	movf	?___fttol,w
  7138  1722  00FF               	movwf	127
  7139  1723  087F               	movf	127,w
  7140  1724  1683               	bsf	3,5	;RP0=1, select bank1
  7141  1725  1303               	bcf	3,6	;RP1=0, select bank1
  7142  1726  00BB               	movwf	_Temp^(0+128)
  7143  1727  0008               	return
  7144  1728                     __end_of_Adc_Temp_Read:
  7145                           
  7146                           	psect	text36
  7147  0614                     __ptext36:	
  7148 ;; *************** function _Adc_Min_Read *****************
  7149 ;; Defined at:
  7150 ;;		line 37 in file "Adc_Read.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7164 ;;      Params:         0       0       0       0       0
  7165 ;;      Locals:         0       3       0       0       0
  7166 ;;      Temps:          0       0       0       0       0
  7167 ;;      Totals:         0       3       0       0       0
  7168 ;;Total ram usage:        3 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    4
  7171 ;; This function calls:
  7172 ;;		_Adc
  7173 ;;		___awtoft
  7174 ;;		___ftdiv
  7175 ;;		___ftmul
  7176 ;;		___fttol
  7177 ;; This function is called by:
  7178 ;;		_Lec_Adc_Modo_Pulv
  7179 ;;		_Lec_Adc_Modo_Fuga
  7180 ;;		_Lec_Adc_Modo_Flujo
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function _Adc_Min_Read
  7186  0614                     _Adc_Min_Read:
  7187                           
  7188                           ;Adc_Read.c: 39:     if(mod_tiempo) Min = (int)((Adc(2)*5.0/1023.0)*59.0/5.0);
  7189                           
  7190                           ;incstack = 0
  7191                           ; Regs used in _Adc_Min_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7192  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7193  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7194  0616  0863               	movf	_mod_tiempo,w
  7195  0617  1903               	btfsc	3,2
  7196  0618  2E90               	goto	l4406
  7197  0619  3002               	movlw	2
  7198  061A  120A  118A  23AD  120A  118A  	fcall	_Adc
  7199  061F  0875               	movf	?_Adc+1,w
  7200  0620  1283               	bcf	3,5	;RP0=0, select bank0
  7201  0621  1303               	bcf	3,6	;RP1=0, select bank0
  7202  0622  00A9               	movwf	___awtoft@c+1
  7203  0623  0874               	movf	?_Adc,w
  7204  0624  00A8               	movwf	___awtoft@c
  7205  0625  160A  118A  2222  120A  118A  	fcall	___awtoft
  7206  062A  1283               	bcf	3,5	;RP0=0, select bank0
  7207  062B  1303               	bcf	3,6	;RP1=0, select bank0
  7208  062C  0828               	movf	?___awtoft,w
  7209  062D  00AF               	movwf	___ftmul@f2
  7210  062E  0829               	movf	?___awtoft+1,w
  7211  062F  00B0               	movwf	___ftmul@f2+1
  7212  0630  082A               	movf	?___awtoft+2,w
  7213  0631  00B1               	movwf	___ftmul@f2+2
  7214  0632  3000               	movlw	0
  7215  0633  00AC               	movwf	___ftmul@f1
  7216  0634  30A0               	movlw	160
  7217  0635  00AD               	movwf	___ftmul@f1+1
  7218  0636  3040               	movlw	64
  7219  0637  00AE               	movwf	___ftmul@f1+2
  7220  0638  120A  118A  270F  120A  118A  	fcall	___ftmul
  7221  063D  1283               	bcf	3,5	;RP0=0, select bank0
  7222  063E  1303               	bcf	3,6	;RP1=0, select bank0
  7223  063F  082C               	movf	?___ftmul,w
  7224  0640  00BE               	movwf	___ftdiv@f1
  7225  0641  082D               	movf	?___ftmul+1,w
  7226  0642  00BF               	movwf	___ftdiv@f1+1
  7227  0643  082E               	movf	?___ftmul+2,w
  7228  0644  00C0               	movwf	___ftdiv@f1+2
  7229  0645  30C0               	movlw	192
  7230  0646  00BB               	movwf	___ftdiv@f2
  7231  0647  307F               	movlw	127
  7232  0648  00BC               	movwf	___ftdiv@f2+1
  7233  0649  3044               	movlw	68
  7234  064A  00BD               	movwf	___ftdiv@f2+2
  7235  064B  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7236  0650  1283               	bcf	3,5	;RP0=0, select bank0
  7237  0651  1303               	bcf	3,6	;RP1=0, select bank0
  7238  0652  083B               	movf	?___ftdiv,w
  7239  0653  00D7               	movwf	_Adc_Min_Read$1525
  7240  0654  083C               	movf	?___ftdiv+1,w
  7241  0655  00D8               	movwf	_Adc_Min_Read$1525+1
  7242  0656  083D               	movf	?___ftdiv+2,w
  7243  0657  00D9               	movwf	_Adc_Min_Read$1525+2
  7244  0658  0857               	movf	_Adc_Min_Read$1525,w
  7245  0659  00AF               	movwf	___ftmul@f2
  7246  065A  0858               	movf	_Adc_Min_Read$1525+1,w
  7247  065B  00B0               	movwf	___ftmul@f2+1
  7248  065C  0859               	movf	_Adc_Min_Read$1525+2,w
  7249  065D  00B1               	movwf	___ftmul@f2+2
  7250  065E  3000               	movlw	0
  7251  065F  00AC               	movwf	___ftmul@f1
  7252  0660  306C               	movlw	108
  7253  0661  00AD               	movwf	___ftmul@f1+1
  7254  0662  3042               	movlw	66
  7255  0663  00AE               	movwf	___ftmul@f1+2
  7256  0664  120A  118A  270F  120A  118A  	fcall	___ftmul
  7257  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7258  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7259  066B  082C               	movf	?___ftmul,w
  7260  066C  00BE               	movwf	___ftdiv@f1
  7261  066D  082D               	movf	?___ftmul+1,w
  7262  066E  00BF               	movwf	___ftdiv@f1+1
  7263  066F  082E               	movf	?___ftmul+2,w
  7264  0670  00C0               	movwf	___ftdiv@f1+2
  7265  0671  3000               	movlw	0
  7266  0672  00BB               	movwf	___ftdiv@f2
  7267  0673  30A0               	movlw	160
  7268  0674  00BC               	movwf	___ftdiv@f2+1
  7269  0675  3040               	movlw	64
  7270  0676  00BD               	movwf	___ftdiv@f2+2
  7271  0677  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7272  067C  1283               	bcf	3,5	;RP0=0, select bank0
  7273  067D  1303               	bcf	3,6	;RP1=0, select bank0
  7274  067E  083B               	movf	?___ftdiv,w
  7275  067F  00CA               	movwf	___fttol@f1
  7276  0680  083C               	movf	?___ftdiv+1,w
  7277  0681  00CB               	movwf	___fttol@f1+1
  7278  0682  083D               	movf	?___ftdiv+2,w
  7279  0683  00CC               	movwf	___fttol@f1+2
  7280  0684  120A  158A  2013  120A  118A  	fcall	___fttol
  7281  0689  1283               	bcf	3,5	;RP0=0, select bank0
  7282  068A  1303               	bcf	3,6	;RP1=0, select bank0
  7283  068B  084A               	movf	?___fttol,w
  7284  068C  00FF               	movwf	127
  7285  068D  087F               	movf	127,w
  7286  068E  00F9               	movwf	_Min
  7287  068F  2F09               	goto	l4410
  7288  0690                     l4406:
  7289  0690  0863               	movf	_mod_tiempo,w
  7290  0691  1D03               	btfss	3,2
  7291  0692  2F09               	goto	l4410
  7292  0693  3002               	movlw	2
  7293  0694  120A  118A  23AD  120A  118A  	fcall	_Adc
  7294  0699  0875               	movf	?_Adc+1,w
  7295  069A  1283               	bcf	3,5	;RP0=0, select bank0
  7296  069B  1303               	bcf	3,6	;RP1=0, select bank0
  7297  069C  00A9               	movwf	___awtoft@c+1
  7298  069D  0874               	movf	?_Adc,w
  7299  069E  00A8               	movwf	___awtoft@c
  7300  069F  160A  118A  2222  120A  118A  	fcall	___awtoft
  7301  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  7302  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  7303  06A6  0828               	movf	?___awtoft,w
  7304  06A7  00AF               	movwf	___ftmul@f2
  7305  06A8  0829               	movf	?___awtoft+1,w
  7306  06A9  00B0               	movwf	___ftmul@f2+1
  7307  06AA  082A               	movf	?___awtoft+2,w
  7308  06AB  00B1               	movwf	___ftmul@f2+2
  7309  06AC  3000               	movlw	0
  7310  06AD  00AC               	movwf	___ftmul@f1
  7311  06AE  30A0               	movlw	160
  7312  06AF  00AD               	movwf	___ftmul@f1+1
  7313  06B0  3040               	movlw	64
  7314  06B1  00AE               	movwf	___ftmul@f1+2
  7315  06B2  120A  118A  270F  120A  118A  	fcall	___ftmul
  7316  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7317  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7318  06B9  082C               	movf	?___ftmul,w
  7319  06BA  00BE               	movwf	___ftdiv@f1
  7320  06BB  082D               	movf	?___ftmul+1,w
  7321  06BC  00BF               	movwf	___ftdiv@f1+1
  7322  06BD  082E               	movf	?___ftmul+2,w
  7323  06BE  00C0               	movwf	___ftdiv@f1+2
  7324  06BF  30C0               	movlw	192
  7325  06C0  00BB               	movwf	___ftdiv@f2
  7326  06C1  307F               	movlw	127
  7327  06C2  00BC               	movwf	___ftdiv@f2+1
  7328  06C3  3044               	movlw	68
  7329  06C4  00BD               	movwf	___ftdiv@f2+2
  7330  06C5  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7331  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  7332  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  7333  06CC  083B               	movf	?___ftdiv,w
  7334  06CD  00D7               	movwf	_Adc_Min_Read$1525
  7335  06CE  083C               	movf	?___ftdiv+1,w
  7336  06CF  00D8               	movwf	_Adc_Min_Read$1525+1
  7337  06D0  083D               	movf	?___ftdiv+2,w
  7338  06D1  00D9               	movwf	_Adc_Min_Read$1525+2
  7339  06D2  0857               	movf	_Adc_Min_Read$1525,w
  7340  06D3  00AF               	movwf	___ftmul@f2
  7341  06D4  0858               	movf	_Adc_Min_Read$1525+1,w
  7342  06D5  00B0               	movwf	___ftmul@f2+1
  7343  06D6  0859               	movf	_Adc_Min_Read$1525+2,w
  7344  06D7  00B1               	movwf	___ftmul@f2+2
  7345  06D8  3000               	movlw	0
  7346  06D9  00AC               	movwf	___ftmul@f1
  7347  06DA  306C               	movlw	108
  7348  06DB  00AD               	movwf	___ftmul@f1+1
  7349  06DC  3042               	movlw	66
  7350  06DD  00AE               	movwf	___ftmul@f1+2
  7351  06DE  120A  118A  270F  120A  118A  	fcall	___ftmul
  7352  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  7353  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  7354  06E5  082C               	movf	?___ftmul,w
  7355  06E6  00BE               	movwf	___ftdiv@f1
  7356  06E7  082D               	movf	?___ftmul+1,w
  7357  06E8  00BF               	movwf	___ftdiv@f1+1
  7358  06E9  082E               	movf	?___ftmul+2,w
  7359  06EA  00C0               	movwf	___ftdiv@f1+2
  7360  06EB  3000               	movlw	0
  7361  06EC  00BB               	movwf	___ftdiv@f2
  7362  06ED  30A0               	movlw	160
  7363  06EE  00BC               	movwf	___ftdiv@f2+1
  7364  06EF  3040               	movlw	64
  7365  06F0  00BD               	movwf	___ftdiv@f2+2
  7366  06F1  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7367  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  7368  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  7369  06F8  083B               	movf	?___ftdiv,w
  7370  06F9  00CA               	movwf	___fttol@f1
  7371  06FA  083C               	movf	?___ftdiv+1,w
  7372  06FB  00CB               	movwf	___fttol@f1+1
  7373  06FC  083D               	movf	?___ftdiv+2,w
  7374  06FD  00CC               	movwf	___fttol@f1+2
  7375  06FE  120A  158A  2013  120A  118A  	fcall	___fttol
  7376  0703  1283               	bcf	3,5	;RP0=0, select bank0
  7377  0704  1303               	bcf	3,6	;RP1=0, select bank0
  7378  0705  084A               	movf	?___fttol,w
  7379  0706  00FF               	movwf	127
  7380  0707  087F               	movf	127,w
  7381  0708  00F8               	movwf	_Seg
  7382  0709                     l4410:
  7383                           
  7384                           ;Adc_Read.c: 42:     if(Seg == 0) Seg = 1;
  7385  0709  0878               	movf	_Seg,w
  7386  070A  1D03               	btfss	3,2
  7387  070B  0008               	return
  7388  070C  01F8               	clrf	_Seg
  7389  070D  0AF8               	incf	_Seg,f
  7390  070E  0008               	return
  7391  070F                     __end_of_Adc_Min_Read:
  7392                           
  7393                           	psect	text37
  7394  0813                     __ptext37:	
  7395 ;; *************** function ___fttol *****************
  7396 ;; Defined at:
  7397 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\fttol.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  f1              3   42[BANK0 ] float 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  lval            4   50[BANK0 ] unsigned long 
  7402 ;;  exp1            1   54[BANK0 ] unsigned char 
  7403 ;;  sign1           1   49[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  4   42[BANK0 ] long 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0, btemp+1
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7413 ;;      Params:         0       4       0       0       0
  7414 ;;      Locals:         0       6       0       0       0
  7415 ;;      Temps:          0       3       0       0       0
  7416 ;;      Totals:         0      13       0       0       0
  7417 ;;Total ram usage:       13 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    2
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_Salida_Modo_Pulv
  7424 ;;		_Pwm1_init
  7425 ;;		_Pwm1
  7426 ;;		_Adc_Rpm_Read
  7427 ;;		_Adc_Pwm_Read
  7428 ;;		_Adc_Min_Read
  7429 ;;		_Adc_Temp_Read
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function ___fttol
  7435  0813                     ___fttol:
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  7439  0813  1283               	bcf	3,5	;RP0=0, select bank0
  7440  0814  1303               	bcf	3,6	;RP1=0, select bank0
  7441  0815  084A               	movf	___fttol@f1,w
  7442  0816  00CE               	movwf	??___fttol
  7443  0817  084B               	movf	___fttol@f1+1,w
  7444  0818  00CF               	movwf	??___fttol+1
  7445  0819  084C               	movf	___fttol@f1+2,w
  7446  081A  00D0               	movwf	??___fttol+2
  7447  081B  1003               	clrc
  7448  081C  0D4F               	rlf	??___fttol+1,w
  7449  081D  0D50               	rlf	??___fttol+2,w
  7450  081E  00FF               	movwf	127
  7451  081F  087F               	movf	127,w
  7452  0820  00D6               	movwf	___fttol@exp1
  7453  0821  0856               	movf	___fttol@exp1,w
  7454  0822  1D03               	btfss	3,2
  7455  0823  282D               	goto	l4256
  7456  0824                     l4252:
  7457  0824  3000               	movlw	0
  7458  0825  00CD               	movwf	?___fttol+3
  7459  0826  3000               	movlw	0
  7460  0827  00CC               	movwf	?___fttol+2
  7461  0828  3000               	movlw	0
  7462  0829  00CB               	movwf	?___fttol+1
  7463  082A  3000               	movlw	0
  7464  082B  00CA               	movwf	?___fttol
  7465  082C  0008               	return
  7466  082D                     l4256:
  7467  082D  084A               	movf	___fttol@f1,w
  7468  082E  00CE               	movwf	??___fttol
  7469  082F  084B               	movf	___fttol@f1+1,w
  7470  0830  00CF               	movwf	??___fttol+1
  7471  0831  084C               	movf	___fttol@f1+2,w
  7472  0832  00D0               	movwf	??___fttol+2
  7473  0833  3017               	movlw	23
  7474  0834                     u4245:
  7475  0834  1003               	clrc
  7476  0835  0CD0               	rrf	??___fttol+2,f
  7477  0836  0CCF               	rrf	??___fttol+1,f
  7478  0837  0CCE               	rrf	??___fttol,f
  7479  0838  3EFF               	addlw	-1
  7480  0839  1D03               	skipz
  7481  083A  2834               	goto	u4245
  7482  083B  084E               	movf	??___fttol,w
  7483  083C  00FF               	movwf	127
  7484  083D  087F               	movf	127,w
  7485  083E  00D1               	movwf	___fttol@sign1
  7486  083F  17CB               	bsf	___fttol@f1+1,7
  7487  0840  30FF               	movlw	255
  7488  0841  05CA               	andwf	___fttol@f1,f
  7489  0842  30FF               	movlw	255
  7490  0843  05CB               	andwf	___fttol@f1+1,f
  7491  0844  3000               	movlw	0
  7492  0845  05CC               	andwf	___fttol@f1+2,f
  7493  0846  084A               	movf	___fttol@f1,w
  7494  0847  00D2               	movwf	___fttol@lval
  7495  0848  084B               	movf	___fttol@f1+1,w
  7496  0849  00D3               	movwf	___fttol@lval+1
  7497  084A  084C               	movf	___fttol@f1+2,w
  7498  084B  00D4               	movwf	___fttol@lval+2
  7499  084C  01D5               	clrf	___fttol@lval+3
  7500  084D  308E               	movlw	142
  7501  084E  02D6               	subwf	___fttol@exp1,f
  7502  084F  1FD6               	btfss	___fttol@exp1,7
  7503  0850  2866               	goto	l4278
  7504  0851  0856               	movf	___fttol@exp1,w
  7505  0852  3A80               	xorlw	128
  7506  0853  3E8F               	addlw	143
  7507  0854  1C03               	btfss	3,0
  7508  0855  2824               	goto	l4252
  7509  0856                     l4274:
  7510  0856  3001               	movlw	1
  7511  0857                     u4275:
  7512  0857  1003               	clrc
  7513  0858  0CD5               	rrf	___fttol@lval+3,f
  7514  0859  0CD4               	rrf	___fttol@lval+2,f
  7515  085A  0CD3               	rrf	___fttol@lval+1,f
  7516  085B  0CD2               	rrf	___fttol@lval,f
  7517  085C  3EFF               	addlw	-1
  7518  085D  1D03               	skipz
  7519  085E  2857               	goto	u4275
  7520  085F  3001               	movlw	1
  7521  0860  00FF               	movwf	127
  7522  0861  087F               	movf	127,w
  7523  0862  07D6               	addwf	___fttol@exp1,f
  7524  0863  1903               	btfsc	3,2
  7525  0864  2879               	goto	l4286
  7526  0865  2856               	goto	l4274
  7527  0866                     l4278:
  7528  0866  3018               	movlw	24
  7529  0867  0256               	subwf	___fttol@exp1,w
  7530  0868  1803               	btfsc	3,0
  7531  0869  2824               	goto	l4252
  7532  086A                     l1095:
  7533  086A  0856               	movf	___fttol@exp1,w
  7534  086B  1903               	btfsc	3,2
  7535  086C  2879               	goto	l4286
  7536  086D  3001               	movlw	1
  7537  086E  00CE               	movwf	??___fttol
  7538  086F                     u4305:
  7539  086F  1003               	clrc
  7540  0870  0DD2               	rlf	___fttol@lval,f
  7541  0871  0DD3               	rlf	___fttol@lval+1,f
  7542  0872  0DD4               	rlf	___fttol@lval+2,f
  7543  0873  0DD5               	rlf	___fttol@lval+3,f
  7544  0874  0BCE               	decfsz	??___fttol,f
  7545  0875  286F               	goto	u4305
  7546  0876  3001               	movlw	1
  7547  0877  02D6               	subwf	___fttol@exp1,f
  7548  0878  286A               	goto	l1095
  7549  0879                     l4286:
  7550  0879  0851               	movf	___fttol@sign1,w
  7551  087A  1903               	btfsc	3,2
  7552  087B  2887               	goto	l4290
  7553  087C  09D2               	comf	___fttol@lval,f
  7554  087D  09D3               	comf	___fttol@lval+1,f
  7555  087E  09D4               	comf	___fttol@lval+2,f
  7556  087F  09D5               	comf	___fttol@lval+3,f
  7557  0880  0AD2               	incf	___fttol@lval,f
  7558  0881  1903               	skipnz
  7559  0882  0AD3               	incf	___fttol@lval+1,f
  7560  0883  1903               	skipnz
  7561  0884  0AD4               	incf	___fttol@lval+2,f
  7562  0885  1903               	skipnz
  7563  0886  0AD5               	incf	___fttol@lval+3,f
  7564  0887                     l4290:
  7565  0887  0855               	movf	___fttol@lval+3,w
  7566  0888  00CD               	movwf	?___fttol+3
  7567  0889  0854               	movf	___fttol@lval+2,w
  7568  088A  00CC               	movwf	?___fttol+2
  7569  088B  0853               	movf	___fttol@lval+1,w
  7570  088C  00CB               	movwf	?___fttol+1
  7571  088D  0852               	movf	___fttol@lval,w
  7572  088E  00CA               	movwf	?___fttol
  7573  088F  0008               	return
  7574  0890                     __end_of___fttol:
  7575                           
  7576                           	psect	text38
  7577  070F                     __ptext38:	
  7578 ;; *************** function ___ftmul *****************
  7579 ;; Defined at:
  7580 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftmul.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  f1              3   12[BANK0 ] float 
  7583 ;;  f2              3   15[BANK0 ] float 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  7586 ;;  sign            1   26[BANK0 ] unsigned char 
  7587 ;;  cntr            1   25[BANK0 ] unsigned char 
  7588 ;;  exp             1   21[BANK0 ] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  3   12[BANK0 ] float 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7598 ;;      Params:         0       6       0       0       0
  7599 ;;      Locals:         0       6       0       0       0
  7600 ;;      Temps:          0       3       0       0       0
  7601 ;;      Totals:         0      15       0       0       0
  7602 ;;Total ram usage:       15 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    3
  7605 ;; This function calls:
  7606 ;;		___ftpack
  7607 ;; This function is called by:
  7608 ;;		_Pwm1
  7609 ;;		_Adc_Rpm_Read
  7610 ;;		_Adc_Pwm_Read
  7611 ;;		_Adc_Min_Read
  7612 ;;		_Adc_Temp_Read
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function ___ftmul
  7618  070F                     ___ftmul:
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7622  070F  1283               	bcf	3,5	;RP0=0, select bank0
  7623  0710  1303               	bcf	3,6	;RP1=0, select bank0
  7624  0711  082C               	movf	___ftmul@f1,w
  7625  0712  00B2               	movwf	??___ftmul
  7626  0713  082D               	movf	___ftmul@f1+1,w
  7627  0714  00B3               	movwf	??___ftmul+1
  7628  0715  082E               	movf	___ftmul@f1+2,w
  7629  0716  00B4               	movwf	??___ftmul+2
  7630  0717  1003               	clrc
  7631  0718  0D33               	rlf	??___ftmul+1,w
  7632  0719  0D34               	rlf	??___ftmul+2,w
  7633  071A  00FF               	movwf	127
  7634  071B  087F               	movf	127,w
  7635  071C  00B5               	movwf	___ftmul@exp
  7636  071D  0835               	movf	___ftmul@exp,w
  7637  071E  1D03               	btfss	3,2
  7638  071F  2F27               	goto	l4206
  7639  0720  3000               	movlw	0
  7640  0721  00AC               	movwf	?___ftmul
  7641  0722  3000               	movlw	0
  7642  0723  00AD               	movwf	?___ftmul+1
  7643  0724  3000               	movlw	0
  7644  0725  00AE               	movwf	?___ftmul+2
  7645  0726  0008               	return
  7646  0727                     l4206:
  7647  0727  082F               	movf	___ftmul@f2,w
  7648  0728  00B2               	movwf	??___ftmul
  7649  0729  0830               	movf	___ftmul@f2+1,w
  7650  072A  00B3               	movwf	??___ftmul+1
  7651  072B  0831               	movf	___ftmul@f2+2,w
  7652  072C  00B4               	movwf	??___ftmul+2
  7653  072D  1003               	clrc
  7654  072E  0D33               	rlf	??___ftmul+1,w
  7655  072F  0D34               	rlf	??___ftmul+2,w
  7656  0730  00FF               	movwf	127
  7657  0731  087F               	movf	127,w
  7658  0732  00BA               	movwf	___ftmul@sign
  7659  0733  083A               	movf	___ftmul@sign,w
  7660  0734  1D03               	btfss	3,2
  7661  0735  2F3D               	goto	l4212
  7662  0736  3000               	movlw	0
  7663  0737  00AC               	movwf	?___ftmul
  7664  0738  3000               	movlw	0
  7665  0739  00AD               	movwf	?___ftmul+1
  7666  073A  3000               	movlw	0
  7667  073B  00AE               	movwf	?___ftmul+2
  7668  073C  0008               	return
  7669  073D                     l4212:
  7670  073D  083A               	movf	___ftmul@sign,w
  7671  073E  3E7B               	addlw	123
  7672  073F  00FF               	movwf	127
  7673  0740  087F               	movf	127,w
  7674  0741  07B5               	addwf	___ftmul@exp,f
  7675  0742  082C               	movf	___ftmul@f1,w
  7676  0743  00B2               	movwf	??___ftmul
  7677  0744  082D               	movf	___ftmul@f1+1,w
  7678  0745  00B3               	movwf	??___ftmul+1
  7679  0746  082E               	movf	___ftmul@f1+2,w
  7680  0747  00B4               	movwf	??___ftmul+2
  7681  0748  3010               	movlw	16
  7682  0749                     u4115:
  7683  0749  1003               	clrc
  7684  074A  0CB4               	rrf	??___ftmul+2,f
  7685  074B  0CB3               	rrf	??___ftmul+1,f
  7686  074C  0CB2               	rrf	??___ftmul,f
  7687  074D  3EFF               	addlw	-1
  7688  074E  1D03               	skipz
  7689  074F  2F49               	goto	u4115
  7690  0750  0832               	movf	??___ftmul,w
  7691  0751  00FF               	movwf	127
  7692  0752  087F               	movf	127,w
  7693  0753  00BA               	movwf	___ftmul@sign
  7694  0754  082F               	movf	___ftmul@f2,w
  7695  0755  00B2               	movwf	??___ftmul
  7696  0756  0830               	movf	___ftmul@f2+1,w
  7697  0757  00B3               	movwf	??___ftmul+1
  7698  0758  0831               	movf	___ftmul@f2+2,w
  7699  0759  00B4               	movwf	??___ftmul+2
  7700  075A  3010               	movlw	16
  7701  075B                     u4125:
  7702  075B  1003               	clrc
  7703  075C  0CB4               	rrf	??___ftmul+2,f
  7704  075D  0CB3               	rrf	??___ftmul+1,f
  7705  075E  0CB2               	rrf	??___ftmul,f
  7706  075F  3EFF               	addlw	-1
  7707  0760  1D03               	skipz
  7708  0761  2F5B               	goto	u4125
  7709  0762  0832               	movf	??___ftmul,w
  7710  0763  00FF               	movwf	127
  7711  0764  087F               	movf	127,w
  7712  0765  06BA               	xorwf	___ftmul@sign,f
  7713  0766  3080               	movlw	128
  7714  0767  00FF               	movwf	127
  7715  0768  087F               	movf	127,w
  7716  0769  05BA               	andwf	___ftmul@sign,f
  7717  076A  17AD               	bsf	___ftmul@f1+1,7
  7718  076B  17B0               	bsf	___ftmul@f2+1,7
  7719  076C  30FF               	movlw	255
  7720  076D  05AF               	andwf	___ftmul@f2,f
  7721  076E  30FF               	movlw	255
  7722  076F  05B0               	andwf	___ftmul@f2+1,f
  7723  0770  3000               	movlw	0
  7724  0771  05B1               	andwf	___ftmul@f2+2,f
  7725  0772  3000               	movlw	0
  7726  0773  00B6               	movwf	___ftmul@f3_as_product
  7727  0774  3000               	movlw	0
  7728  0775  00B7               	movwf	___ftmul@f3_as_product+1
  7729  0776  3000               	movlw	0
  7730  0777  00B8               	movwf	___ftmul@f3_as_product+2
  7731  0778  3007               	movlw	7
  7732  0779  00FF               	movwf	127
  7733  077A  087F               	movf	127,w
  7734  077B  00B9               	movwf	___ftmul@cntr
  7735  077C                     l4224:
  7736  077C  1C2C               	btfss	___ftmul@f1,0
  7737  077D  2F8C               	goto	l4228
  7738  077E  082F               	movf	___ftmul@f2,w
  7739  077F  07B6               	addwf	___ftmul@f3_as_product,f
  7740  0780  0830               	movf	___ftmul@f2+1,w
  7741  0781  1103               	clrz
  7742  0782  1803               	skipnc
  7743  0783  0A30               	incf	___ftmul@f2+1,w
  7744  0784  1D03               	btfss	3,2
  7745  0785  07B7               	addwf	___ftmul@f3_as_product+1,f
  7746  0786  0831               	movf	___ftmul@f2+2,w
  7747  0787  1103               	clrz
  7748  0788  1803               	skipnc
  7749  0789  0A31               	incf	___ftmul@f2+2,w
  7750  078A  1D03               	btfss	3,2
  7751  078B  07B8               	addwf	___ftmul@f3_as_product+2,f
  7752  078C                     l4228:
  7753  078C  3001               	movlw	1
  7754  078D                     u4155:
  7755  078D  1003               	clrc
  7756  078E  0CAE               	rrf	___ftmul@f1+2,f
  7757  078F  0CAD               	rrf	___ftmul@f1+1,f
  7758  0790  0CAC               	rrf	___ftmul@f1,f
  7759  0791  3EFF               	addlw	-1
  7760  0792  1D03               	skipz
  7761  0793  2F8D               	goto	u4155
  7762  0794  3001               	movlw	1
  7763  0795                     u4165:
  7764  0795  1003               	clrc
  7765  0796  0DAF               	rlf	___ftmul@f2,f
  7766  0797  0DB0               	rlf	___ftmul@f2+1,f
  7767  0798  0DB1               	rlf	___ftmul@f2+2,f
  7768  0799  3EFF               	addlw	-1
  7769  079A  1D03               	skipz
  7770  079B  2F95               	goto	u4165
  7771  079C  3001               	movlw	1
  7772  079D  02B9               	subwf	___ftmul@cntr,f
  7773  079E  1D03               	btfss	3,2
  7774  079F  2F7C               	goto	l4224
  7775  07A0  3009               	movlw	9
  7776  07A1  00FF               	movwf	127
  7777  07A2  087F               	movf	127,w
  7778  07A3  00B9               	movwf	___ftmul@cntr
  7779  07A4                     l4236:
  7780  07A4  1C2C               	btfss	___ftmul@f1,0
  7781  07A5  2FB4               	goto	l4240
  7782  07A6  082F               	movf	___ftmul@f2,w
  7783  07A7  07B6               	addwf	___ftmul@f3_as_product,f
  7784  07A8  0830               	movf	___ftmul@f2+1,w
  7785  07A9  1103               	clrz
  7786  07AA  1803               	skipnc
  7787  07AB  0A30               	incf	___ftmul@f2+1,w
  7788  07AC  1D03               	btfss	3,2
  7789  07AD  07B7               	addwf	___ftmul@f3_as_product+1,f
  7790  07AE  0831               	movf	___ftmul@f2+2,w
  7791  07AF  1103               	clrz
  7792  07B0  1803               	skipnc
  7793  07B1  0A31               	incf	___ftmul@f2+2,w
  7794  07B2  1D03               	btfss	3,2
  7795  07B3  07B8               	addwf	___ftmul@f3_as_product+2,f
  7796  07B4                     l4240:
  7797  07B4  3001               	movlw	1
  7798  07B5                     u4205:
  7799  07B5  1003               	clrc
  7800  07B6  0CAE               	rrf	___ftmul@f1+2,f
  7801  07B7  0CAD               	rrf	___ftmul@f1+1,f
  7802  07B8  0CAC               	rrf	___ftmul@f1,f
  7803  07B9  3EFF               	addlw	-1
  7804  07BA  1D03               	skipz
  7805  07BB  2FB5               	goto	u4205
  7806  07BC  3001               	movlw	1
  7807  07BD                     u4215:
  7808  07BD  1003               	clrc
  7809  07BE  0CB8               	rrf	___ftmul@f3_as_product+2,f
  7810  07BF  0CB7               	rrf	___ftmul@f3_as_product+1,f
  7811  07C0  0CB6               	rrf	___ftmul@f3_as_product,f
  7812  07C1  3EFF               	addlw	-1
  7813  07C2  1D03               	skipz
  7814  07C3  2FBD               	goto	u4215
  7815  07C4  3001               	movlw	1
  7816  07C5  02B9               	subwf	___ftmul@cntr,f
  7817  07C6  1D03               	btfss	3,2
  7818  07C7  2FA4               	goto	l4236
  7819  07C8  0836               	movf	___ftmul@f3_as_product,w
  7820  07C9  00A0               	movwf	___ftpack@arg
  7821  07CA  0837               	movf	___ftmul@f3_as_product+1,w
  7822  07CB  00A1               	movwf	___ftpack@arg+1
  7823  07CC  0838               	movf	___ftmul@f3_as_product+2,w
  7824  07CD  00A2               	movwf	___ftpack@arg+2
  7825  07CE  0835               	movf	___ftmul@exp,w
  7826  07CF  00FF               	movwf	127
  7827  07D0  087F               	movf	127,w
  7828  07D1  00A3               	movwf	___ftpack@exp
  7829  07D2  083A               	movf	___ftmul@sign,w
  7830  07D3  00FF               	movwf	127
  7831  07D4  087F               	movf	127,w
  7832  07D5  00A4               	movwf	___ftpack@sign
  7833  07D6  160A  118A  2792   	fcall	___ftpack
  7834  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  7835  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  7836  07DB  0820               	movf	?___ftpack,w
  7837  07DC  00AC               	movwf	?___ftmul
  7838  07DD  0821               	movf	?___ftpack+1,w
  7839  07DE  00AD               	movwf	?___ftmul+1
  7840  07DF  0822               	movf	?___ftpack+2,w
  7841  07E0  00AE               	movwf	?___ftmul+2
  7842  07E1  0008               	return
  7843  07E2                     __end_of___ftmul:
  7844                           
  7845                           	psect	text39
  7846  0DC8                     __ptext39:	
  7847 ;; *************** function ___ftdiv *****************
  7848 ;; Defined at:
  7849 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftdiv.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  f2              3   27[BANK0 ] float 
  7852 ;;  f1              3   30[BANK0 ] float 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  f3              3   37[BANK0 ] float 
  7855 ;;  sign            1   41[BANK0 ] unsigned char 
  7856 ;;  exp             1   40[BANK0 ] unsigned char 
  7857 ;;  cntr            1   36[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  3   27[BANK0 ] float 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7867 ;;      Params:         0       6       0       0       0
  7868 ;;      Locals:         0       6       0       0       0
  7869 ;;      Temps:          0       3       0       0       0
  7870 ;;      Totals:         0      15       0       0       0
  7871 ;;Total ram usage:       15 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    3
  7874 ;; This function calls:
  7875 ;;		___ftpack
  7876 ;; This function is called by:
  7877 ;;		_Salida_Modo_Pulv
  7878 ;;		_Pwm1_init
  7879 ;;		_Pwm1
  7880 ;;		_Adc_Rpm_Read
  7881 ;;		_Adc_Pwm_Read
  7882 ;;		_Adc_Min_Read
  7883 ;;		_Adc_Temp_Read
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function ___ftdiv
  7889  0DC8                     ___ftdiv:
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7893  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7894  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7895  0DCA  083E               	movf	___ftdiv@f1,w
  7896  0DCB  00C1               	movwf	??___ftdiv
  7897  0DCC  083F               	movf	___ftdiv@f1+1,w
  7898  0DCD  00C2               	movwf	??___ftdiv+1
  7899  0DCE  0840               	movf	___ftdiv@f1+2,w
  7900  0DCF  00C3               	movwf	??___ftdiv+2
  7901  0DD0  1003               	clrc
  7902  0DD1  0D42               	rlf	??___ftdiv+1,w
  7903  0DD2  0D43               	rlf	??___ftdiv+2,w
  7904  0DD3  00FF               	movwf	127
  7905  0DD4  087F               	movf	127,w
  7906  0DD5  00C8               	movwf	___ftdiv@exp
  7907  0DD6  0848               	movf	___ftdiv@exp,w
  7908  0DD7  1D03               	btfss	3,2
  7909  0DD8  2DE0               	goto	l4160
  7910  0DD9  3000               	movlw	0
  7911  0DDA  00BB               	movwf	?___ftdiv
  7912  0DDB  3000               	movlw	0
  7913  0DDC  00BC               	movwf	?___ftdiv+1
  7914  0DDD  3000               	movlw	0
  7915  0DDE  00BD               	movwf	?___ftdiv+2
  7916  0DDF  0008               	return
  7917  0DE0                     l4160:
  7918  0DE0  083B               	movf	___ftdiv@f2,w
  7919  0DE1  00C1               	movwf	??___ftdiv
  7920  0DE2  083C               	movf	___ftdiv@f2+1,w
  7921  0DE3  00C2               	movwf	??___ftdiv+1
  7922  0DE4  083D               	movf	___ftdiv@f2+2,w
  7923  0DE5  00C3               	movwf	??___ftdiv+2
  7924  0DE6  1003               	clrc
  7925  0DE7  0D42               	rlf	??___ftdiv+1,w
  7926  0DE8  0D43               	rlf	??___ftdiv+2,w
  7927  0DE9  00FF               	movwf	127
  7928  0DEA  087F               	movf	127,w
  7929  0DEB  00C9               	movwf	___ftdiv@sign
  7930  0DEC  0849               	movf	___ftdiv@sign,w
  7931  0DED  1D03               	btfss	3,2
  7932  0DEE  2DF6               	goto	l4166
  7933  0DEF  3000               	movlw	0
  7934  0DF0  00BB               	movwf	?___ftdiv
  7935  0DF1  3000               	movlw	0
  7936  0DF2  00BC               	movwf	?___ftdiv+1
  7937  0DF3  3000               	movlw	0
  7938  0DF4  00BD               	movwf	?___ftdiv+2
  7939  0DF5  0008               	return
  7940  0DF6                     l4166:
  7941  0DF6  3000               	movlw	0
  7942  0DF7  00C5               	movwf	___ftdiv@f3
  7943  0DF8  3000               	movlw	0
  7944  0DF9  00C6               	movwf	___ftdiv@f3+1
  7945  0DFA  3000               	movlw	0
  7946  0DFB  00C7               	movwf	___ftdiv@f3+2
  7947  0DFC  3089               	movlw	137
  7948  0DFD  0749               	addwf	___ftdiv@sign,w
  7949  0DFE  00C1               	movwf	??___ftdiv
  7950  0DFF  0841               	movf	??___ftdiv,w
  7951  0E00  02C8               	subwf	___ftdiv@exp,f
  7952  0E01  083E               	movf	___ftdiv@f1,w
  7953  0E02  00C1               	movwf	??___ftdiv
  7954  0E03  083F               	movf	___ftdiv@f1+1,w
  7955  0E04  00C2               	movwf	??___ftdiv+1
  7956  0E05  0840               	movf	___ftdiv@f1+2,w
  7957  0E06  00C3               	movwf	??___ftdiv+2
  7958  0E07  3010               	movlw	16
  7959  0E08                     u4035:
  7960  0E08  1003               	clrc
  7961  0E09  0CC3               	rrf	??___ftdiv+2,f
  7962  0E0A  0CC2               	rrf	??___ftdiv+1,f
  7963  0E0B  0CC1               	rrf	??___ftdiv,f
  7964  0E0C  3EFF               	addlw	-1
  7965  0E0D  1D03               	skipz
  7966  0E0E  2E08               	goto	u4035
  7967  0E0F  0841               	movf	??___ftdiv,w
  7968  0E10  00FF               	movwf	127
  7969  0E11  087F               	movf	127,w
  7970  0E12  00C9               	movwf	___ftdiv@sign
  7971  0E13  083B               	movf	___ftdiv@f2,w
  7972  0E14  00C1               	movwf	??___ftdiv
  7973  0E15  083C               	movf	___ftdiv@f2+1,w
  7974  0E16  00C2               	movwf	??___ftdiv+1
  7975  0E17  083D               	movf	___ftdiv@f2+2,w
  7976  0E18  00C3               	movwf	??___ftdiv+2
  7977  0E19  3010               	movlw	16
  7978  0E1A                     u4045:
  7979  0E1A  1003               	clrc
  7980  0E1B  0CC3               	rrf	??___ftdiv+2,f
  7981  0E1C  0CC2               	rrf	??___ftdiv+1,f
  7982  0E1D  0CC1               	rrf	??___ftdiv,f
  7983  0E1E  3EFF               	addlw	-1
  7984  0E1F  1D03               	skipz
  7985  0E20  2E1A               	goto	u4045
  7986  0E21  0841               	movf	??___ftdiv,w
  7987  0E22  00FF               	movwf	127
  7988  0E23  087F               	movf	127,w
  7989  0E24  06C9               	xorwf	___ftdiv@sign,f
  7990  0E25  3080               	movlw	128
  7991  0E26  00FF               	movwf	127
  7992  0E27  087F               	movf	127,w
  7993  0E28  05C9               	andwf	___ftdiv@sign,f
  7994  0E29  17BF               	bsf	___ftdiv@f1+1,7
  7995  0E2A  30FF               	movlw	255
  7996  0E2B  05BE               	andwf	___ftdiv@f1,f
  7997  0E2C  30FF               	movlw	255
  7998  0E2D  05BF               	andwf	___ftdiv@f1+1,f
  7999  0E2E  3000               	movlw	0
  8000  0E2F  05C0               	andwf	___ftdiv@f1+2,f
  8001  0E30  17BC               	bsf	___ftdiv@f2+1,7
  8002  0E31  30FF               	movlw	255
  8003  0E32  05BB               	andwf	___ftdiv@f2,f
  8004  0E33  30FF               	movlw	255
  8005  0E34  05BC               	andwf	___ftdiv@f2+1,f
  8006  0E35  3000               	movlw	0
  8007  0E36  05BD               	andwf	___ftdiv@f2+2,f
  8008  0E37  3018               	movlw	24
  8009  0E38  00FF               	movwf	127
  8010  0E39  087F               	movf	127,w
  8011  0E3A  00C4               	movwf	___ftdiv@cntr
  8012  0E3B                     l4184:
  8013  0E3B  3001               	movlw	1
  8014  0E3C                     u4055:
  8015  0E3C  1003               	clrc
  8016  0E3D  0DC5               	rlf	___ftdiv@f3,f
  8017  0E3E  0DC6               	rlf	___ftdiv@f3+1,f
  8018  0E3F  0DC7               	rlf	___ftdiv@f3+2,f
  8019  0E40  3EFF               	addlw	-1
  8020  0E41  1D03               	skipz
  8021  0E42  2E3C               	goto	u4055
  8022  0E43  083D               	movf	___ftdiv@f2+2,w
  8023  0E44  0240               	subwf	___ftdiv@f1+2,w
  8024  0E45  1D03               	skipz
  8025  0E46  2E4D               	goto	u4065
  8026  0E47  083C               	movf	___ftdiv@f2+1,w
  8027  0E48  023F               	subwf	___ftdiv@f1+1,w
  8028  0E49  1D03               	skipz
  8029  0E4A  2E4D               	goto	u4065
  8030  0E4B  083B               	movf	___ftdiv@f2,w
  8031  0E4C  023E               	subwf	___ftdiv@f1,w
  8032  0E4D                     u4065:
  8033  0E4D  1C03               	skipc
  8034  0E4E  2E5A               	goto	l4192
  8035  0E4F  083B               	movf	___ftdiv@f2,w
  8036  0E50  02BE               	subwf	___ftdiv@f1,f
  8037  0E51  083C               	movf	___ftdiv@f2+1,w
  8038  0E52  1C03               	skipc
  8039  0E53  0F3C               	incfsz	___ftdiv@f2+1,w
  8040  0E54  02BF               	subwf	___ftdiv@f1+1,f
  8041  0E55  083D               	movf	___ftdiv@f2+2,w
  8042  0E56  1C03               	skipc
  8043  0E57  0A3D               	incf	___ftdiv@f2+2,w
  8044  0E58  02C0               	subwf	___ftdiv@f1+2,f
  8045  0E59  1445               	bsf	___ftdiv@f3,0
  8046  0E5A                     l4192:
  8047  0E5A  3001               	movlw	1
  8048  0E5B                     u4075:
  8049  0E5B  1003               	clrc
  8050  0E5C  0DBE               	rlf	___ftdiv@f1,f
  8051  0E5D  0DBF               	rlf	___ftdiv@f1+1,f
  8052  0E5E  0DC0               	rlf	___ftdiv@f1+2,f
  8053  0E5F  3EFF               	addlw	-1
  8054  0E60  1D03               	skipz
  8055  0E61  2E5B               	goto	u4075
  8056  0E62  3001               	movlw	1
  8057  0E63  02C4               	subwf	___ftdiv@cntr,f
  8058  0E64  1D03               	btfss	3,2
  8059  0E65  2E3B               	goto	l4184
  8060  0E66  0845               	movf	___ftdiv@f3,w
  8061  0E67  00A0               	movwf	___ftpack@arg
  8062  0E68  0846               	movf	___ftdiv@f3+1,w
  8063  0E69  00A1               	movwf	___ftpack@arg+1
  8064  0E6A  0847               	movf	___ftdiv@f3+2,w
  8065  0E6B  00A2               	movwf	___ftpack@arg+2
  8066  0E6C  0848               	movf	___ftdiv@exp,w
  8067  0E6D  00FF               	movwf	127
  8068  0E6E  087F               	movf	127,w
  8069  0E6F  00A3               	movwf	___ftpack@exp
  8070  0E70  0849               	movf	___ftdiv@sign,w
  8071  0E71  00FF               	movwf	127
  8072  0E72  087F               	movf	127,w
  8073  0E73  00A4               	movwf	___ftpack@sign
  8074  0E74  160A  118A  2792   	fcall	___ftpack
  8075  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0E79  0820               	movf	?___ftpack,w
  8078  0E7A  00BB               	movwf	?___ftdiv
  8079  0E7B  0821               	movf	?___ftpack+1,w
  8080  0E7C  00BC               	movwf	?___ftdiv+1
  8081  0E7D  0822               	movf	?___ftpack+2,w
  8082  0E7E  00BD               	movwf	?___ftdiv+2
  8083  0E7F  0008               	return
  8084  0E80                     __end_of___ftdiv:
  8085                           
  8086                           	psect	text40
  8087  1222                     __ptext40:	
  8088 ;; *************** function ___awtoft *****************
  8089 ;; Defined at:
  8090 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\awtoft.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  c               2    8[BANK0 ] int 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  sign            1   11[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  3    8[BANK0 ] float 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8104 ;;      Params:         0       3       0       0       0
  8105 ;;      Locals:         0       1       0       0       0
  8106 ;;      Temps:          0       0       0       0       0
  8107 ;;      Totals:         0       4       0       0       0
  8108 ;;Total ram usage:        4 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    3
  8111 ;; This function calls:
  8112 ;;		___ftpack
  8113 ;; This function is called by:
  8114 ;;		_Adc_Rpm_Read
  8115 ;;		_Adc_Pwm_Read
  8116 ;;		_Adc_Min_Read
  8117 ;;		_Adc_Temp_Read
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function ___awtoft
  8123  1222                     ___awtoft:
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8127  1222  1283               	bcf	3,5	;RP0=0, select bank0
  8128  1223  1303               	bcf	3,6	;RP1=0, select bank0
  8129  1224  01AB               	clrf	___awtoft@sign
  8130  1225  1FA9               	btfss	___awtoft@c+1,7
  8131  1226  2A2E               	goto	l4150
  8132  1227  09A8               	comf	___awtoft@c,f
  8133  1228  09A9               	comf	___awtoft@c+1,f
  8134  1229  0AA8               	incf	___awtoft@c,f
  8135  122A  1903               	skipnz
  8136  122B  0AA9               	incf	___awtoft@c+1,f
  8137  122C  01AB               	clrf	___awtoft@sign
  8138  122D  0AAB               	incf	___awtoft@sign,f
  8139  122E                     l4150:
  8140  122E  0828               	movf	___awtoft@c,w
  8141  122F  00A0               	movwf	___ftpack@arg
  8142  1230  0829               	movf	___awtoft@c+1,w
  8143  1231  00A1               	movwf	___ftpack@arg+1
  8144  1232  01A2               	clrf	___ftpack@arg+2
  8145  1233  308E               	movlw	142
  8146  1234  00FF               	movwf	127
  8147  1235  087F               	movf	127,w
  8148  1236  00A3               	movwf	___ftpack@exp
  8149  1237  082B               	movf	___awtoft@sign,w
  8150  1238  00FF               	movwf	127
  8151  1239  087F               	movf	127,w
  8152  123A  00A4               	movwf	___ftpack@sign
  8153  123B  160A  118A  2792   	fcall	___ftpack
  8154  123E  1283               	bcf	3,5	;RP0=0, select bank0
  8155  123F  1303               	bcf	3,6	;RP1=0, select bank0
  8156  1240  0820               	movf	?___ftpack,w
  8157  1241  00A8               	movwf	?___awtoft
  8158  1242  0821               	movf	?___ftpack+1,w
  8159  1243  00A9               	movwf	?___awtoft+1
  8160  1244  0822               	movf	?___ftpack+2,w
  8161  1245  00AA               	movwf	?___awtoft+2
  8162  1246  0008               	return
  8163  1247                     __end_of___awtoft:
  8164                           
  8165                           	psect	text41
  8166  1792                     __ptext41:	
  8167 ;; *************** function ___ftpack *****************
  8168 ;; Defined at:
  8169 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\float.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  arg             3    0[BANK0 ] unsigned um
  8172 ;;  exp             1    3[BANK0 ] unsigned char 
  8173 ;;  sign            1    4[BANK0 ] unsigned char 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  3    0[BANK0 ] float 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2, status,0, btemp+1
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8185 ;;      Params:         0       5       0       0       0
  8186 ;;      Locals:         0       0       0       0       0
  8187 ;;      Temps:          0       3       0       0       0
  8188 ;;      Totals:         0       8       0       0       0
  8189 ;;Total ram usage:        8 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:    2
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		___awtoft
  8196 ;;		___ftdiv
  8197 ;;		___ftmul
  8198 ;;		___lbtoft
  8199 ;;		___lwtoft
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function ___ftpack
  8205  1792                     ___ftpack:
  8206                           
  8207                           ;incstack = 0
  8208                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  8209  1792  1283               	bcf	3,5	;RP0=0, select bank0
  8210  1793  1303               	bcf	3,6	;RP1=0, select bank0
  8211  1794  0823               	movf	___ftpack@exp,w
  8212  1795  1903               	btfsc	3,2
  8213  1796  2F9C               	goto	l4044
  8214  1797  0822               	movf	___ftpack@arg+2,w
  8215  1798  0421               	iorwf	___ftpack@arg+1,w
  8216  1799  0420               	iorwf	___ftpack@arg,w
  8217  179A  1D03               	skipz
  8218  179B  2FAF               	goto	l4052
  8219  179C                     l4044:
  8220  179C  3000               	movlw	0
  8221  179D  00A0               	movwf	?___ftpack
  8222  179E  3000               	movlw	0
  8223  179F  00A1               	movwf	?___ftpack+1
  8224  17A0  3000               	movlw	0
  8225  17A1  00A2               	movwf	?___ftpack+2
  8226  17A2  0008               	return
  8227  17A3                     l4048:
  8228  17A3  3001               	movlw	1
  8229  17A4  00FF               	movwf	127
  8230  17A5  087F               	movf	127,w
  8231  17A6  07A3               	addwf	___ftpack@exp,f
  8232  17A7  3001               	movlw	1
  8233  17A8                     u3835:
  8234  17A8  1003               	clrc
  8235  17A9  0CA2               	rrf	___ftpack@arg+2,f
  8236  17AA  0CA1               	rrf	___ftpack@arg+1,f
  8237  17AB  0CA0               	rrf	___ftpack@arg,f
  8238  17AC  3EFF               	addlw	-1
  8239  17AD  1D03               	skipz
  8240  17AE  2FA8               	goto	u3835
  8241  17AF                     l4052:
  8242  17AF  30FE               	movlw	254
  8243  17B0  0522               	andwf	___ftpack@arg+2,w
  8244  17B1  1903               	btfsc	3,2
  8245  17B2  2FCA               	goto	l4060
  8246  17B3  2FA3               	goto	l4048
  8247  17B4                     l4054:
  8248  17B4  3001               	movlw	1
  8249  17B5  00FF               	movwf	127
  8250  17B6  087F               	movf	127,w
  8251  17B7  07A3               	addwf	___ftpack@exp,f
  8252  17B8  3001               	movlw	1
  8253  17B9  07A0               	addwf	___ftpack@arg,f
  8254  17BA  3000               	movlw	0
  8255  17BB  1803               	skipnc
  8256  17BC  3001               	movlw	1
  8257  17BD  07A1               	addwf	___ftpack@arg+1,f
  8258  17BE  3000               	movlw	0
  8259  17BF  1803               	skipnc
  8260  17C0  3001               	movlw	1
  8261  17C1  07A2               	addwf	___ftpack@arg+2,f
  8262  17C2  3001               	movlw	1
  8263  17C3                     u3855:
  8264  17C3  1003               	clrc
  8265  17C4  0CA2               	rrf	___ftpack@arg+2,f
  8266  17C5  0CA1               	rrf	___ftpack@arg+1,f
  8267  17C6  0CA0               	rrf	___ftpack@arg,f
  8268  17C7  3EFF               	addlw	-1
  8269  17C8  1D03               	skipz
  8270  17C9  2FC3               	goto	u3855
  8271  17CA                     l4060:
  8272  17CA  30FF               	movlw	255
  8273  17CB  0522               	andwf	___ftpack@arg+2,w
  8274  17CC  1903               	btfsc	3,2
  8275  17CD  2FDD               	goto	l4064
  8276  17CE  2FB4               	goto	l4054
  8277  17CF                     l4066:
  8278  17CF  3002               	movlw	2
  8279  17D0  0223               	subwf	___ftpack@exp,w
  8280  17D1  1C03               	btfss	3,0
  8281  17D2  2FDF               	goto	l1011
  8282  17D3  3001               	movlw	1
  8283  17D4  02A3               	subwf	___ftpack@exp,f
  8284  17D5  3001               	movlw	1
  8285  17D6                     u3875:
  8286  17D6  1003               	clrc
  8287  17D7  0DA0               	rlf	___ftpack@arg,f
  8288  17D8  0DA1               	rlf	___ftpack@arg+1,f
  8289  17D9  0DA2               	rlf	___ftpack@arg+2,f
  8290  17DA  3EFF               	addlw	-1
  8291  17DB  1D03               	skipz
  8292  17DC  2FD6               	goto	u3875
  8293  17DD                     l4064:
  8294  17DD  1FA1               	btfss	___ftpack@arg+1,7
  8295  17DE  2FCF               	goto	l4066
  8296  17DF                     l1011:
  8297  17DF  1823               	btfsc	___ftpack@exp,0
  8298  17E0  2FE7               	goto	l1012
  8299  17E1  30FF               	movlw	255
  8300  17E2  05A0               	andwf	___ftpack@arg,f
  8301  17E3  307F               	movlw	127
  8302  17E4  05A1               	andwf	___ftpack@arg+1,f
  8303  17E5  30FF               	movlw	255
  8304  17E6  05A2               	andwf	___ftpack@arg+2,f
  8305  17E7                     l1012:
  8306  17E7  1003               	clrc
  8307  17E8  0CA3               	rrf	___ftpack@exp,f
  8308  17E9  0823               	movf	___ftpack@exp,w
  8309  17EA  00A5               	movwf	??___ftpack
  8310  17EB  01A6               	clrf	??___ftpack+1
  8311  17EC  01A7               	clrf	??___ftpack+2
  8312  17ED  3010               	movlw	16
  8313  17EE                     u3915:
  8314  17EE  1003               	clrc
  8315  17EF  0DA5               	rlf	??___ftpack,f
  8316  17F0  0DA6               	rlf	??___ftpack+1,f
  8317  17F1  0DA7               	rlf	??___ftpack+2,f
  8318  17F2  3EFF               	addlw	-1
  8319  17F3  1D03               	skipz
  8320  17F4  2FEE               	goto	u3915
  8321  17F5  0825               	movf	??___ftpack,w
  8322  17F6  04A0               	iorwf	___ftpack@arg,f
  8323  17F7  0826               	movf	??___ftpack+1,w
  8324  17F8  04A1               	iorwf	___ftpack@arg+1,f
  8325  17F9  0827               	movf	??___ftpack+2,w
  8326  17FA  04A2               	iorwf	___ftpack@arg+2,f
  8327  17FB  0824               	movf	___ftpack@sign,w
  8328  17FC  1903               	btfsc	3,2
  8329  17FD  0008               	return
  8330  17FE  17A2               	bsf	___ftpack@arg+2,7
  8331  17FF  0008               	return
  8332  1800                     __end_of___ftpack:
  8333                           
  8334                           	psect	text42
  8335  03AD                     __ptext42:	
  8336 ;; *************** function _Adc *****************
  8337 ;; Defined at:
  8338 ;;		line 25 in file "ADC.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  channel         1    wreg     unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  channel         1    2[BANK0 ] unsigned char 
  8343 ;;  convertion      2    3[BANK0 ] int 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2    4[COMMON] int 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0, btemp+1
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8353 ;;      Params:         2       0       0       0       0
  8354 ;;      Locals:         0       3       0       0       0
  8355 ;;      Temps:          0       2       0       0       0
  8356 ;;      Totals:         2       5       0       0       0
  8357 ;;Total ram usage:        7 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    2
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_Adc_Rpm_Read
  8364 ;;		_Adc_Pwm_Read
  8365 ;;		_Adc_Min_Read
  8366 ;;		_Adc_Temp_Read
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _Adc
  8372  03AD                     _Adc:
  8373                           
  8374                           ;incstack = 0
  8375                           ; Regs used in _Adc: [wreg+status,2+status,0+btemp+1]
  8376                           ;Adc@channel stored from wreg
  8377  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  8378  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  8379  03AF  00A2               	movwf	Adc@channel
  8380                           
  8381                           ;ADC.c: 32:     ADCON0 &= 0xC3;
  8382  03B0  30C3               	movlw	195
  8383  03B1  00FF               	movwf	127
  8384  03B2  087F               	movf	127,w
  8385  03B3  059F               	andwf	31,f	;volatile
  8386                           
  8387                           ;ADC.c: 33:     ADCON0 |= channel<<2;
  8388  03B4  0822               	movf	Adc@channel,w	;volatile
  8389  03B5  00A0               	movwf	??_Adc
  8390  03B6  3001               	movlw	1
  8391  03B7                     u3945:
  8392  03B7  1003               	clrc
  8393  03B8  0DA0               	rlf	??_Adc,f
  8394  03B9  3EFF               	addlw	-1
  8395  03BA  1D03               	skipz
  8396  03BB  2BB7               	goto	u3945
  8397  03BC  1003               	clrc
  8398  03BD  0D20               	rlf	??_Adc,w
  8399  03BE  00FF               	movwf	127
  8400  03BF  087F               	movf	127,w
  8401  03C0  049F               	iorwf	31,f	;volatile
  8402                           
  8403                           ;ADC.c: 36:     ADCON0bits.ADON = 1;
  8404  03C1  141F               	bsf	31,0	;volatile
  8405                           
  8406                           ;ADC.c: 37:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  8407  03C2  3073               	movlw	115
  8408  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  8409  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  8410  03C5  00A0               	movwf	??_Adc
  8411  03C6                     u5277:
  8412  03C6  0BA0               	decfsz	??_Adc,f
  8413  03C7  2BC6               	goto	u5277
  8414  03C8  2BC9               	nop2
  8415                           
  8416                           ;ADC.c: 41:     ADCON0bits.GO_nDONE = 1;
  8417  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  8418  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  8419  03CB  149F               	bsf	31,1	;volatile
  8420  03CC                     l613:	
  8421                           ;ADC.c: 42:     while(ADCON0bits.GO_nDONE == 1);
  8422                           
  8423  03CC  189F               	btfsc	31,1	;volatile
  8424  03CD  2BCC               	goto	l613
  8425                           
  8426                           ;ADC.c: 43:     convertion = ADRESH, convertion = convertion<<8;
  8427  03CE  081E               	movf	30,w	;volatile
  8428  03CF  00A0               	movwf	??_Adc
  8429  03D0  01A1               	clrf	??_Adc+1
  8430  03D1  0820               	movf	??_Adc,w
  8431  03D2  00A3               	movwf	Adc@convertion
  8432  03D3  0821               	movf	??_Adc+1,w
  8433  03D4  00A4               	movwf	Adc@convertion+1
  8434  03D5  0824               	movf	Adc@convertion+1,w
  8435  03D6  00A1               	movwf	??_Adc+1
  8436  03D7  0823               	movf	Adc@convertion,w
  8437  03D8  00A0               	movwf	??_Adc
  8438  03D9  0820               	movf	??_Adc,w
  8439  03DA  00A1               	movwf	??_Adc+1
  8440  03DB  01A0               	clrf	??_Adc
  8441  03DC  0820               	movf	??_Adc,w
  8442  03DD  00A3               	movwf	Adc@convertion
  8443  03DE  0821               	movf	??_Adc+1,w
  8444  03DF  00A4               	movwf	Adc@convertion+1
  8445                           
  8446                           ;ADC.c: 44:     convertion |= ADRESL;
  8447  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  8448  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  8449  03E2  081E               	movf	30,w	;volatile
  8450  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  8451  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  8452  03E5  00A0               	movwf	??_Adc
  8453  03E6  01A1               	clrf	??_Adc+1
  8454  03E7  0820               	movf	??_Adc,w
  8455  03E8  04A3               	iorwf	Adc@convertion,f
  8456  03E9  0821               	movf	??_Adc+1,w
  8457  03EA  04A4               	iorwf	Adc@convertion+1,f
  8458                           
  8459                           ;ADC.c: 48:     ADCON0bits.ADON = 0;
  8460  03EB  101F               	bcf	31,0	;volatile
  8461                           
  8462                           ;ADC.c: 49:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  8463  03EC  3073               	movlw	115
  8464  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  8465  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  8466  03EF  00A0               	movwf	??_Adc
  8467  03F0                     u5287:
  8468  03F0  0BA0               	decfsz	??_Adc,f
  8469  03F1  2BF0               	goto	u5287
  8470  03F2  2BF3               	nop2
  8471                           
  8472                           ;ADC.c: 51:     return convertion;
  8473  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  8474  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  8475  03F5  0824               	movf	Adc@convertion+1,w
  8476  03F6  00F5               	movwf	?_Adc+1
  8477  03F7  0823               	movf	Adc@convertion,w
  8478  03F8  00F4               	movwf	?_Adc
  8479  03F9  0008               	return
  8480  03FA                     __end_of_Adc:
  8481                           
  8482                           	psect	text43
  8483  1607                     __ptext43:	
  8484 ;; *************** function _Fin_Proceso *****************
  8485 ;; Defined at:
  8486 ;;		line 53 in file "Menu_Modo.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               1   12[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         0       0       0       0       0
  8501 ;;      Locals:         0       1       0       0       0
  8502 ;;      Temps:          0       3       0       0       0
  8503 ;;      Totals:         0       4       0       0       0
  8504 ;;Total ram usage:        4 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    5
  8507 ;; This function calls:
  8508 ;;		_Proceso_Fin
  8509 ;;		_Pwm1_stop
  8510 ;; This function is called by:
  8511 ;;		_MEF_Subest_Actualizacion
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           
  8516                           ;psect for function _Fin_Proceso
  8517  1607                     _Fin_Proceso:
  8518                           
  8519                           ;Menu_Modo.c: 55:     if(!Min && !Seg)
  8520                           
  8521                           ;incstack = 0
  8522                           ; Regs used in _Fin_Proceso: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8523  1607  0879               	movf	_Min,w
  8524  1608  1D03               	btfss	3,2
  8525  1609  0008               	return
  8526  160A  0878               	movf	_Seg,w
  8527  160B  1D03               	btfss	3,2
  8528  160C  0008               	return
  8529                           
  8530                           ;Menu_Modo.c: 56:     {;Menu_Modo.c: 57:         Proceso_Fin();
  8531  160D  160A  118A  2271  160A  118A  	fcall	_Proceso_Fin
  8532                           
  8533                           ;Menu_Modo.c: 58:         Output = !Output;
  8534  1612  0877               	movf	_Output,w
  8535  1613  1D03               	btfss	3,2
  8536  1614  2E17               	goto	u4770
  8537  1615  3001               	movlw	1
  8538  1616  2E18               	goto	u4780
  8539  1617                     u4770:
  8540  1617  3000               	movlw	0
  8541  1618                     u4780:
  8542  1618  00FF               	movwf	127
  8543  1619  087F               	movf	127,w
  8544  161A  00F7               	movwf	_Output
  8545                           
  8546                           ;Menu_Modo.c: 59:         PORTBbits.RB4=0;
  8547  161B  1283               	bcf	3,5	;RP0=0, select bank0
  8548  161C  1303               	bcf	3,6	;RP1=0, select bank0
  8549  161D  1206               	bcf	6,4	;volatile
  8550                           
  8551                           ;Menu_Modo.c: 60:         Pwm_Seteado=0;
  8552  161E  1683               	bsf	3,5	;RP0=1, select bank1
  8553  161F  1303               	bcf	3,6	;RP1=0, select bank1
  8554  1620  01B7               	clrf	_Pwm_Seteado^(0+128)
  8555                           
  8556                           ;Menu_Modo.c: 61:         Pwm1_stop();
  8557  1621  160A  118A  2134  160A  118A  	fcall	_Pwm1_stop
  8558                           
  8559                           ;Menu_Modo.c: 62:         for(char i=0;i<3;i++)
  8560  1626  1283               	bcf	3,5	;RP0=0, select bank0
  8561  1627  1303               	bcf	3,6	;RP1=0, select bank0
  8562  1628  01AC               	clrf	Fin_Proceso@i
  8563  1629                     l339:
  8564                           
  8565                           ;Menu_Modo.c: 63:         {;Menu_Modo.c: 64:             PORTAbits.RA5 = 1;
  8566  1629  1685               	bsf	5,5	;volatile
  8567                           
  8568                           ;Menu_Modo.c: 65:             _delay((unsigned long)((100)*(20000000/4000.0)));
  8569  162A  3003               	movlw	3
  8570  162B  1283               	bcf	3,5	;RP0=0, select bank0
  8571  162C  1303               	bcf	3,6	;RP1=0, select bank0
  8572  162D  00AB               	movwf	??_Fin_Proceso+2
  8573  162E  308A               	movlw	138
  8574  162F  00AA               	movwf	??_Fin_Proceso+1
  8575  1630  3055               	movlw	85
  8576  1631  00A9               	movwf	??_Fin_Proceso
  8577  1632                     u5297:
  8578  1632  0BA9               	decfsz	??_Fin_Proceso,f
  8579  1633  2E32               	goto	u5297
  8580  1634  0BAA               	decfsz	??_Fin_Proceso+1,f
  8581  1635  2E32               	goto	u5297
  8582  1636  0BAB               	decfsz	??_Fin_Proceso+2,f
  8583  1637  2E32               	goto	u5297
  8584                           
  8585                           ;Menu_Modo.c: 66:             PORTAbits.RA5 = 0;
  8586  1638  1283               	bcf	3,5	;RP0=0, select bank0
  8587  1639  1303               	bcf	3,6	;RP1=0, select bank0
  8588  163A  1285               	bcf	5,5	;volatile
  8589                           
  8590                           ;Menu_Modo.c: 67:             _delay((unsigned long)((100)*(20000000/4000.0)));
  8591  163B  3003               	movlw	3
  8592  163C  1283               	bcf	3,5	;RP0=0, select bank0
  8593  163D  1303               	bcf	3,6	;RP1=0, select bank0
  8594  163E  00AB               	movwf	??_Fin_Proceso+2
  8595  163F  308A               	movlw	138
  8596  1640  00AA               	movwf	??_Fin_Proceso+1
  8597  1641  3055               	movlw	85
  8598  1642  00A9               	movwf	??_Fin_Proceso
  8599  1643                     u5307:
  8600  1643  0BA9               	decfsz	??_Fin_Proceso,f
  8601  1644  2E43               	goto	u5307
  8602  1645  0BAA               	decfsz	??_Fin_Proceso+1,f
  8603  1646  2E43               	goto	u5307
  8604  1647  0BAB               	decfsz	??_Fin_Proceso+2,f
  8605  1648  2E43               	goto	u5307
  8606                           
  8607                           ;Menu_Modo.c: 68:         }
  8608  1649  3001               	movlw	1
  8609  164A  00FF               	movwf	127
  8610  164B  087F               	movf	127,w
  8611  164C  1283               	bcf	3,5	;RP0=0, select bank0
  8612  164D  1303               	bcf	3,6	;RP1=0, select bank0
  8613  164E  07AC               	addwf	Fin_Proceso@i,f
  8614  164F  3003               	movlw	3
  8615  1650  022C               	subwf	Fin_Proceso@i,w
  8616  1651  1C03               	skipc
  8617  1652  2E29               	goto	l339
  8618                           
  8619                           ;Menu_Modo.c: 69:         _delay((unsigned long)((1200)*(20000000/4000.0)));
  8620  1653  301F               	movlw	31
  8621  1654  1283               	bcf	3,5	;RP0=0, select bank0
  8622  1655  1303               	bcf	3,6	;RP1=0, select bank0
  8623  1656  00AB               	movwf	??_Fin_Proceso+2
  8624  1657  3071               	movlw	113
  8625  1658  00AA               	movwf	??_Fin_Proceso+1
  8626  1659  301D               	movlw	29
  8627  165A  00A9               	movwf	??_Fin_Proceso
  8628  165B                     u5317:
  8629  165B  0BA9               	decfsz	??_Fin_Proceso,f
  8630  165C  2E5B               	goto	u5317
  8631  165D  0BAA               	decfsz	??_Fin_Proceso+1,f
  8632  165E  2E5B               	goto	u5317
  8633  165F  0BAB               	decfsz	??_Fin_Proceso+2,f
  8634  1660  2E5B               	goto	u5317
  8635  1661  2E62               	nop2
  8636  1662  0008               	return
  8637  1663                     __end_of_Fin_Proceso:
  8638                           
  8639                           	psect	text44
  8640  1271                     __ptext44:	
  8641 ;; *************** function _Proceso_Fin *****************
  8642 ;; Defined at:
  8643 ;;		line 145 in file "Display_Lcd.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8657 ;;      Params:         0       0       0       0       0
  8658 ;;      Locals:         0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0
  8660 ;;      Totals:         0       0       0       0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    4
  8664 ;; This function calls:
  8665 ;;		_LCD_array
  8666 ;;		_LCD_command
  8667 ;; This function is called by:
  8668 ;;		_Fin_Proceso
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function _Proceso_Fin
  8674  1271                     _Proceso_Fin:
  8675                           
  8676                           ;Display_Lcd.c: 147:     LCD_command(0x01);
  8677                           
  8678                           ;incstack = 0
  8679                           ; Regs used in _Proceso_Fin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8680  1271  3001               	movlw	1
  8681  1272  120A  158A  2680  160A  118A  	fcall	_LCD_command
  8682                           
  8683                           ;Display_Lcd.c: 148:     LCD_array(1,1,"                    ");
  8684  1277  3001               	movlw	1
  8685  1278  1283               	bcf	3,5	;RP0=0, select bank0
  8686  1279  1303               	bcf	3,6	;RP1=0, select bank0
  8687  127A  00A1               	movwf	LCD_array@x
  8688  127B  3000               	movlw	0
  8689  127C  00A2               	movwf	LCD_array@x+1
  8690  127D  3001               	movlw	1
  8691  127E  00A3               	movwf	LCD_array@y
  8692  127F  3000               	movlw	0
  8693  1280  00A4               	movwf	LCD_array@y+1
  8694  1281  301C               	movlw	low (STR_38| (0+32768))
  8695  1282  00A5               	movwf	LCD_array@date
  8696  1283  3084               	movlw	high (STR_38| (0+32768))
  8697  1284  00A6               	movwf	LCD_array@date+1
  8698  1285  160A  118A  2728  160A  118A  	fcall	_LCD_array
  8699                           
  8700                           ;Display_Lcd.c: 149:     LCD_array(2,1," Proceso Finalizado");
  8701  128A  3002               	movlw	2
  8702  128B  1283               	bcf	3,5	;RP0=0, select bank0
  8703  128C  1303               	bcf	3,6	;RP1=0, select bank0
  8704  128D  00A1               	movwf	LCD_array@x
  8705  128E  3000               	movlw	0
  8706  128F  00A2               	movwf	LCD_array@x+1
  8707  1290  3001               	movlw	1
  8708  1291  00A3               	movwf	LCD_array@y
  8709  1292  3000               	movlw	0
  8710  1293  00A4               	movwf	LCD_array@y+1
  8711  1294  3070               	movlw	low (STR_39| (0+32768))
  8712  1295  00A5               	movwf	LCD_array@date
  8713  1296  3084               	movlw	high (STR_39| (0+32768))
  8714  1297  00A6               	movwf	LCD_array@date+1
  8715  1298  160A  118A  2728   	fcall	_LCD_array
  8716  129B  0008               	return
  8717  129C                     __end_of_Proceso_Fin:
  8718                           
  8719                           	psect	text45
  8720  1551                     __ptext45:	
  8721 ;; *************** function _Detener *****************
  8722 ;; Defined at:
  8723 ;;		line 30 in file "Menu_Modo.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  i               1   12[BANK0 ] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8737 ;;      Params:         0       0       0       0       0
  8738 ;;      Locals:         0       1       0       0       0
  8739 ;;      Temps:          0       3       0       0       0
  8740 ;;      Totals:         0       4       0       0       0
  8741 ;;Total ram usage:        4 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    5
  8744 ;; This function calls:
  8745 ;;		_Antirrebote
  8746 ;;		_Pant_Detener
  8747 ;;		_Pwm1_stop
  8748 ;; This function is called by:
  8749 ;;		_MEF_Subest_Actualizacion
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           
  8754                           ;psect for function _Detener
  8755  1551                     _Detener:
  8756                           
  8757                           ;Menu_Modo.c: 32:     Antirrebote();
  8758                           
  8759                           ;incstack = 0
  8760                           ; Regs used in _Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8761  1551  160A  118A  2247  160A  118A  	fcall	_Antirrebote
  8762                           
  8763                           ;Menu_Modo.c: 33:     Output = !Output;
  8764  1556  0877               	movf	_Output,w
  8765  1557  1D03               	btfss	3,2
  8766  1558  2D5B               	goto	u4720
  8767  1559  3001               	movlw	1
  8768  155A  2D5C               	goto	u4730
  8769  155B                     u4720:
  8770  155B  3000               	movlw	0
  8771  155C                     u4730:
  8772  155C  00FF               	movwf	127
  8773  155D  087F               	movf	127,w
  8774  155E  00F7               	movwf	_Output
  8775                           
  8776                           ;Menu_Modo.c: 34:     PORTBbits.RB4=0;
  8777  155F  1283               	bcf	3,5	;RP0=0, select bank0
  8778  1560  1303               	bcf	3,6	;RP1=0, select bank0
  8779  1561  1206               	bcf	6,4	;volatile
  8780                           
  8781                           ;Menu_Modo.c: 35:     Pwm_Seteado=0;
  8782  1562  1683               	bsf	3,5	;RP0=1, select bank1
  8783  1563  1303               	bcf	3,6	;RP1=0, select bank1
  8784  1564  01B7               	clrf	_Pwm_Seteado^(0+128)
  8785                           
  8786                           ;Menu_Modo.c: 36:     Pwm1_stop();
  8787  1565  160A  118A  2134  160A  118A  	fcall	_Pwm1_stop
  8788                           
  8789                           ;Menu_Modo.c: 38:     Pant_Detener();
  8790  156A  160A  118A  2154  160A  118A  	fcall	_Pant_Detener
  8791                           
  8792                           ;Menu_Modo.c: 40:     for(char i=0;i<3;i++)
  8793  156F  1283               	bcf	3,5	;RP0=0, select bank0
  8794  1570  1303               	bcf	3,6	;RP1=0, select bank0
  8795  1571  01AC               	clrf	Detener@i
  8796  1572                     l333:
  8797                           
  8798                           ;Menu_Modo.c: 41:     {;Menu_Modo.c: 42:         PORTAbits.RA5 = 1;
  8799  1572  1685               	bsf	5,5	;volatile
  8800                           
  8801                           ;Menu_Modo.c: 43:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8802  1573  3003               	movlw	3
  8803  1574  1283               	bcf	3,5	;RP0=0, select bank0
  8804  1575  1303               	bcf	3,6	;RP1=0, select bank0
  8805  1576  00AB               	movwf	??_Detener+2
  8806  1577  308A               	movlw	138
  8807  1578  00AA               	movwf	??_Detener+1
  8808  1579  3055               	movlw	85
  8809  157A  00A9               	movwf	??_Detener
  8810  157B                     u5327:
  8811  157B  0BA9               	decfsz	??_Detener,f
  8812  157C  2D7B               	goto	u5327
  8813  157D  0BAA               	decfsz	??_Detener+1,f
  8814  157E  2D7B               	goto	u5327
  8815  157F  0BAB               	decfsz	??_Detener+2,f
  8816  1580  2D7B               	goto	u5327
  8817                           
  8818                           ;Menu_Modo.c: 44:         PORTAbits.RA5 = 0;
  8819  1581  1283               	bcf	3,5	;RP0=0, select bank0
  8820  1582  1303               	bcf	3,6	;RP1=0, select bank0
  8821  1583  1285               	bcf	5,5	;volatile
  8822                           
  8823                           ;Menu_Modo.c: 45:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8824  1584  3003               	movlw	3
  8825  1585  1283               	bcf	3,5	;RP0=0, select bank0
  8826  1586  1303               	bcf	3,6	;RP1=0, select bank0
  8827  1587  00AB               	movwf	??_Detener+2
  8828  1588  308A               	movlw	138
  8829  1589  00AA               	movwf	??_Detener+1
  8830  158A  3055               	movlw	85
  8831  158B  00A9               	movwf	??_Detener
  8832  158C                     u5337:
  8833  158C  0BA9               	decfsz	??_Detener,f
  8834  158D  2D8C               	goto	u5337
  8835  158E  0BAA               	decfsz	??_Detener+1,f
  8836  158F  2D8C               	goto	u5337
  8837  1590  0BAB               	decfsz	??_Detener+2,f
  8838  1591  2D8C               	goto	u5337
  8839                           
  8840                           ;Menu_Modo.c: 46:     }
  8841  1592  3001               	movlw	1
  8842  1593  00FF               	movwf	127
  8843  1594  087F               	movf	127,w
  8844  1595  1283               	bcf	3,5	;RP0=0, select bank0
  8845  1596  1303               	bcf	3,6	;RP1=0, select bank0
  8846  1597  07AC               	addwf	Detener@i,f
  8847  1598  3003               	movlw	3
  8848  1599  022C               	subwf	Detener@i,w
  8849  159A  1C03               	skipc
  8850  159B  2D72               	goto	l333
  8851                           
  8852                           ;Menu_Modo.c: 48:     _delay((unsigned long)((1200)*(20000000/4000.0)));
  8853  159C  301F               	movlw	31
  8854  159D  1283               	bcf	3,5	;RP0=0, select bank0
  8855  159E  1303               	bcf	3,6	;RP1=0, select bank0
  8856  159F  00AB               	movwf	??_Detener+2
  8857  15A0  3071               	movlw	113
  8858  15A1  00AA               	movwf	??_Detener+1
  8859  15A2  301D               	movlw	29
  8860  15A3  00A9               	movwf	??_Detener
  8861  15A4                     u5347:
  8862  15A4  0BA9               	decfsz	??_Detener,f
  8863  15A5  2DA4               	goto	u5347
  8864  15A6  0BAA               	decfsz	??_Detener+1,f
  8865  15A7  2DA4               	goto	u5347
  8866  15A8  0BAB               	decfsz	??_Detener+2,f
  8867  15A9  2DA4               	goto	u5347
  8868  15AA  2DAB               	nop2
  8869  15AB  0008               	return
  8870  15AC                     __end_of_Detener:
  8871                           
  8872                           	psect	text46
  8873  1134                     __ptext46:	
  8874 ;; *************** function _Pwm1_stop *****************
  8875 ;; Defined at:
  8876 ;;		line 71 in file "Pwm_Soft.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8890 ;;      Params:         0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    2
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_main
  8901 ;;		_Detener
  8902 ;;		_Fin_Proceso
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function _Pwm1_stop
  8908  1134                     _Pwm1_stop:
  8909                           
  8910                           ;Pwm_Soft.c: 74:     Act_PwmS1 = 0;
  8911                           
  8912                           ;incstack = 0
  8913                           ; Regs used in _Pwm1_stop: [wreg+status,2]
  8914  1134  1683               	bsf	3,5	;RP0=1, select bank1
  8915  1135  1303               	bcf	3,6	;RP1=0, select bank1
  8916  1136  01BC               	clrf	_Act_PwmS1^(0+128)
  8917                           
  8918                           ;Pwm_Soft.c: 76:     Pw_PwmS1 = 0;
  8919  1137  3000               	movlw	0
  8920  1138  00A8               	movwf	_Pw_PwmS1^(0+128)
  8921  1139  3000               	movlw	0
  8922  113A  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  8923  113B  3000               	movlw	0
  8924  113C  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  8925                           
  8926                           ;Pwm_Soft.c: 77:     PwmS1 = 0;
  8927  113D  1283               	bcf	3,5	;RP0=0, select bank0
  8928  113E  1303               	bcf	3,6	;RP1=0, select bank0
  8929  113F  01E0               	clrf	_PwmS1
  8930  1140  01E1               	clrf	_PwmS1+1
  8931                           
  8932                           ;Pwm_Soft.c: 79:     RB4=0;
  8933  1141  1206               	bcf	6,4	;volatile
  8934  1142  0008               	return
  8935  1143                     __end_of_Pwm1_stop:
  8936                           
  8937                           	psect	text47
  8938  1154                     __ptext47:	
  8939 ;; *************** function _Pant_Detener *****************
  8940 ;; Defined at:
  8941 ;;		line 106 in file "Display_Lcd.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8955 ;;      Params:         0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    4
  8962 ;; This function calls:
  8963 ;;		_LCD_array
  8964 ;;		_LCD_command
  8965 ;; This function is called by:
  8966 ;;		_Detener
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           
  8971                           ;psect for function _Pant_Detener
  8972  1154                     _Pant_Detener:
  8973                           
  8974                           ;Display_Lcd.c: 108:     LCD_command(0x01);
  8975                           
  8976                           ;incstack = 0
  8977                           ; Regs used in _Pant_Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8978  1154  3001               	movlw	1
  8979  1155  120A  158A  2680  160A  118A  	fcall	_LCD_command
  8980                           
  8981                           ;Display_Lcd.c: 109:     LCD_array(2,3,"Proceso Detenido");
  8982  115A  3002               	movlw	2
  8983  115B  1283               	bcf	3,5	;RP0=0, select bank0
  8984  115C  1303               	bcf	3,6	;RP1=0, select bank0
  8985  115D  00A1               	movwf	LCD_array@x
  8986  115E  3000               	movlw	0
  8987  115F  00A2               	movwf	LCD_array@x+1
  8988  1160  3003               	movlw	3
  8989  1161  00A3               	movwf	LCD_array@y
  8990  1162  3000               	movlw	0
  8991  1163  00A4               	movwf	LCD_array@y+1
  8992  1164  30B9               	movlw	low (STR_31| (0+32768))
  8993  1165  00A5               	movwf	LCD_array@date
  8994  1166  3084               	movlw	high (STR_31| (0+32768))
  8995  1167  00A6               	movwf	LCD_array@date+1
  8996  1168  160A  118A  2728   	fcall	_LCD_array
  8997  116B  0008               	return
  8998  116C                     __end_of_Pant_Detener:
  8999                           
  9000                           	psect	text48
  9001  1728                     __ptext48:	
  9002 ;; *************** function _LCD_array *****************
  9003 ;; Defined at:
  9004 ;;		line 137 in file "Lcd.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  x               2    1[BANK0 ] int 
  9007 ;;  y               2    3[BANK0 ] int 
  9008 ;;  date            2    5[BANK0 ] PTR unsigned char 
  9009 ;;		 -> STR_39(20), STR_38(21), STR_37(10), STR_36(17), 
  9010 ;;		 -> STR_35(9), STR_34(17), STR_33(18), STR_32(17), 
  9011 ;;		 -> STR_31(17), Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), STR_23(2), 
  9012 ;;		 -> STR_22(13), STR_21(2), STR_20(8), STR_19(5), 
  9013 ;;		 -> STR_18(5), STR_17(18), STR_16(6), STR_15(5), 
  9014 ;;		 -> STR_14(14), STR_13(2), STR_12(2), STR_11(2), 
  9015 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  9016 ;;		 -> STR_6(2), STR_5(2), STR_4(21), STR_3(21), 
  9017 ;;		 -> STR_2(21), STR_1(21), 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9029 ;;      Params:         0       6       0       0       0
  9030 ;;      Locals:         0       0       0       0       0
  9031 ;;      Temps:          0       2       0       0       0
  9032 ;;      Totals:         0       8       0       0       0
  9033 ;;Total ram usage:        8 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:    3
  9036 ;; This function calls:
  9037 ;;		_LCD_command
  9038 ;;		_LCD_date
  9039 ;; This function is called by:
  9040 ;;		_Pant_Inicio
  9041 ;;		_Pant_Selector
  9042 ;;		_Pant_Menu
  9043 ;;		_Pant_Modos
  9044 ;;		_Pant_Val_Act
  9045 ;;		_Pant_Temporizador
  9046 ;;		_Pant_Detener
  9047 ;;		_Pant_Pulverizacion
  9048 ;;		_Pant_Fuga
  9049 ;;		_Pant_Flujo
  9050 ;;		_Proceso_Fin
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _LCD_array
  9056  1728                     _LCD_array:
  9057                           
  9058                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  9059                           
  9060                           ;incstack = 0
  9061                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9062  1728  2F4D               	goto	l4088
  9063  1729                     l4078:
  9064  1729  0823               	movf	LCD_array@y,w
  9065  172A  3EFF               	addlw	255
  9066  172B  3880               	iorlw	128
  9067  172C  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9068                           
  9069                           ;Lcd.c: 143:         break;
  9070  1731  2F83               	goto	l4096
  9071  1732                     l4080:
  9072  1732  0823               	movf	LCD_array@y,w
  9073  1733  3E3F               	addlw	63
  9074  1734  3880               	iorlw	128
  9075  1735  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9076                           
  9077                           ;Lcd.c: 145:         break;
  9078  173A  2F83               	goto	l4096
  9079  173B                     l4082:
  9080  173B  0823               	movf	LCD_array@y,w
  9081  173C  3E13               	addlw	19
  9082  173D  3880               	iorlw	128
  9083  173E  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9084                           
  9085                           ;Lcd.c: 147:         break;
  9086  1743  2F83               	goto	l4096
  9087  1744                     l4084:
  9088  1744  0823               	movf	LCD_array@y,w
  9089  1745  3E53               	addlw	83
  9090  1746  3880               	iorlw	128
  9091  1747  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9092                           
  9093                           ;Lcd.c: 149:         break;
  9094  174C  2F83               	goto	l4096
  9095  174D                     l4088:
  9096                           
  9097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9098                           ; Switch size 1, requested type "simple"
  9099                           ; Number of cases is 1, Range of values is 0 to 0
  9100                           ; switch strategies available:
  9101                           ; Name         Instructions Cycles
  9102                           ; simple_byte            4     3 (average)
  9103                           ; direct_byte           11     8 (fixed)
  9104                           ; jumptable            260     6 (fixed)
  9105                           ;	Chosen strategy is simple_byte
  9106  174D  1283               	bcf	3,5	;RP0=0, select bank0
  9107  174E  1303               	bcf	3,6	;RP1=0, select bank0
  9108  174F  0822               	movf	LCD_array@x+1,w
  9109  1750  3A00               	xorlw	0	; case 0
  9110  1751  1903               	skipnz
  9111  1752  2F54               	goto	l5172
  9112  1753  2F83               	goto	l4096
  9113  1754                     l5172:
  9114                           
  9115                           ; Switch size 1, requested type "simple"
  9116                           ; Number of cases is 4, Range of values is 1 to 4
  9117                           ; switch strategies available:
  9118                           ; Name         Instructions Cycles
  9119                           ; simple_byte           13     7 (average)
  9120                           ; direct_byte           23    11 (fixed)
  9121                           ; jumptable            263     9 (fixed)
  9122                           ;	Chosen strategy is simple_byte
  9123  1754  0821               	movf	LCD_array@x,w
  9124  1755  3A01               	xorlw	1	; case 1
  9125  1756  1903               	skipnz
  9126  1757  2F29               	goto	l4078
  9127  1758  3A03               	xorlw	3	; case 2
  9128  1759  1903               	skipnz
  9129  175A  2F32               	goto	l4080
  9130  175B  3A01               	xorlw	1	; case 3
  9131  175C  1903               	skipnz
  9132  175D  2F3B               	goto	l4082
  9133  175E  3A07               	xorlw	7	; case 4
  9134  175F  1903               	skipnz
  9135  1760  2F44               	goto	l4084
  9136  1761  2F83               	goto	l4096
  9137  1762                     l4090:
  9138                           
  9139                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  9140  1762  0826               	movf	LCD_array@date+1,w
  9141  1763  00FF               	movwf	127
  9142  1764  0825               	movf	LCD_array@date,w
  9143  1765  0084               	movwf	4
  9144  1766  120A  118A  2400  160A  118A  	fcall	stringtab
  9145  176B  120A  158A  2510  160A  118A  	fcall	_LCD_date
  9146                           
  9147                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  9148  1770  3007               	movlw	7
  9149  1771  1283               	bcf	3,5	;RP0=0, select bank0
  9150  1772  1303               	bcf	3,6	;RP1=0, select bank0
  9151  1773  00A8               	movwf	??_LCD_array+1
  9152  1774  307C               	movlw	124
  9153  1775  00A7               	movwf	??_LCD_array
  9154  1776                     u5357:
  9155  1776  0BA7               	decfsz	??_LCD_array,f
  9156  1777  2F76               	goto	u5357
  9157  1778  0BA8               	decfsz	??_LCD_array+1,f
  9158  1779  2F76               	goto	u5357
  9159  177A  0000               	nop
  9160                           
  9161                           ;Lcd.c: 157:         date++;
  9162  177B  3001               	movlw	1
  9163  177C  1283               	bcf	3,5	;RP0=0, select bank0
  9164  177D  1303               	bcf	3,6	;RP1=0, select bank0
  9165  177E  07A5               	addwf	LCD_array@date,f
  9166  177F  1803               	skipnc
  9167  1780  0AA6               	incf	LCD_array@date+1,f
  9168  1781  3000               	movlw	0
  9169  1782  07A6               	addwf	LCD_array@date+1,f
  9170  1783                     l4096:
  9171                           
  9172                           ;Lcd.c: 153:     while(*date)
  9173  1783  1283               	bcf	3,5	;RP0=0, select bank0
  9174  1784  1303               	bcf	3,6	;RP1=0, select bank0
  9175  1785  0826               	movf	LCD_array@date+1,w
  9176  1786  00FF               	movwf	127
  9177  1787  0825               	movf	LCD_array@date,w
  9178  1788  0084               	movwf	4
  9179  1789  120A  118A  2400  160A  118A  	fcall	stringtab
  9180  178E  3A00               	xorlw	0
  9181  178F  1903               	btfsc	3,2
  9182  1790  0008               	return
  9183  1791  2F62               	goto	l4090
  9184  1792                     __end_of_LCD_array:
  9185                           
  9186                           	psect	text49
  9187  0D10                     __ptext49:	
  9188 ;; *************** function _LCD_date *****************
  9189 ;; Defined at:
  9190 ;;		line 88 in file "Lcd.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  date            1    wreg     unsigned char 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  date            1    0[BANK0 ] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9204 ;;      Params:         0       0       0       0       0
  9205 ;;      Locals:         0       1       0       0       0
  9206 ;;      Temps:          2       0       0       0       0
  9207 ;;      Totals:         2       1       0       0       0
  9208 ;;Total ram usage:        3 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    2
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_Pant_Modos
  9215 ;;		_LCD_array
  9216 ;;		_LCD_character
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _LCD_date
  9222  0D10                     _LCD_date:
  9223                           
  9224                           ;incstack = 0
  9225                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  9226                           ;LCD_date@date stored from wreg
  9227  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  9228  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  9229  0D12  00A0               	movwf	LCD_date@date
  9230                           
  9231                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9232  0D13  1207               	bcf	7,4	;volatile
  9233  0D14  1287               	bcf	7,5	;volatile
  9234  0D15  1307               	bcf	7,6	;volatile
  9235  0D16  1387               	bcf	7,7	;volatile
  9236                           
  9237                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  9238  0D17  0820               	movf	LCD_date@date,w
  9239  0D18  00F4               	movwf	??_LCD_date
  9240  0D19  3004               	movlw	4
  9241  0D1A                     u3755:
  9242  0D1A  1003               	clrc
  9243  0D1B  0CF4               	rrf	??_LCD_date,f
  9244  0D1C  3EFF               	addlw	-1
  9245  0D1D  1D03               	skipz
  9246  0D1E  2D1A               	goto	u3755
  9247  0D1F  0874               	movf	??_LCD_date,w
  9248  0D20  3901               	andlw	1
  9249  0D21  00F5               	movwf	??_LCD_date+1
  9250  0D22  0EF5               	swapf	??_LCD_date+1,f
  9251  0D23  0807               	movf	7,w	;volatile
  9252  0D24  0675               	xorwf	??_LCD_date+1,w
  9253  0D25  39EF               	andlw	-17
  9254  0D26  0675               	xorwf	??_LCD_date+1,w
  9255  0D27  0087               	movwf	7	;volatile
  9256                           
  9257                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  9258  0D28  0820               	movf	LCD_date@date,w
  9259  0D29  00F4               	movwf	??_LCD_date
  9260  0D2A  3005               	movlw	5
  9261  0D2B                     u3765:
  9262  0D2B  1003               	clrc
  9263  0D2C  0CF4               	rrf	??_LCD_date,f
  9264  0D2D  3EFF               	addlw	-1
  9265  0D2E  1D03               	skipz
  9266  0D2F  2D2B               	goto	u3765
  9267  0D30  0874               	movf	??_LCD_date,w
  9268  0D31  3901               	andlw	1
  9269  0D32  00F5               	movwf	??_LCD_date+1
  9270  0D33  0EF5               	swapf	??_LCD_date+1,f
  9271  0D34  0DF5               	rlf	??_LCD_date+1,f
  9272  0D35  0807               	movf	7,w	;volatile
  9273  0D36  0675               	xorwf	??_LCD_date+1,w
  9274  0D37  39DF               	andlw	-33
  9275  0D38  0675               	xorwf	??_LCD_date+1,w
  9276  0D39  0087               	movwf	7	;volatile
  9277                           
  9278                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  9279  0D3A  0820               	movf	LCD_date@date,w
  9280  0D3B  00F4               	movwf	??_LCD_date
  9281  0D3C  3006               	movlw	6
  9282  0D3D                     u3775:
  9283  0D3D  1003               	clrc
  9284  0D3E  0CF4               	rrf	??_LCD_date,f
  9285  0D3F  3EFF               	addlw	-1
  9286  0D40  1D03               	skipz
  9287  0D41  2D3D               	goto	u3775
  9288  0D42  0874               	movf	??_LCD_date,w
  9289  0D43  3901               	andlw	1
  9290  0D44  00F5               	movwf	??_LCD_date+1
  9291  0D45  0EF5               	swapf	??_LCD_date+1,f
  9292  0D46  0DF5               	rlf	??_LCD_date+1,f
  9293  0D47  0DF5               	rlf	??_LCD_date+1,f
  9294  0D48  0807               	movf	7,w	;volatile
  9295  0D49  0675               	xorwf	??_LCD_date+1,w
  9296  0D4A  39BF               	andlw	-65
  9297  0D4B  0675               	xorwf	??_LCD_date+1,w
  9298  0D4C  0087               	movwf	7	;volatile
  9299                           
  9300                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  9301  0D4D  0820               	movf	LCD_date@date,w
  9302  0D4E  00F4               	movwf	??_LCD_date
  9303  0D4F  3007               	movlw	7
  9304  0D50                     u3785:
  9305  0D50  1003               	clrc
  9306  0D51  0CF4               	rrf	??_LCD_date,f
  9307  0D52  3EFF               	addlw	-1
  9308  0D53  1D03               	skipz
  9309  0D54  2D50               	goto	u3785
  9310  0D55  0874               	movf	??_LCD_date,w
  9311  0D56  3901               	andlw	1
  9312  0D57  00F5               	movwf	??_LCD_date+1
  9313  0D58  0CF5               	rrf	??_LCD_date+1,f
  9314  0D59  0CF5               	rrf	??_LCD_date+1,f
  9315  0D5A  0807               	movf	7,w	;volatile
  9316  0D5B  0675               	xorwf	??_LCD_date+1,w
  9317  0D5C  397F               	andlw	-129
  9318  0D5D  0675               	xorwf	??_LCD_date+1,w
  9319  0D5E  0087               	movwf	7	;volatile
  9320                           
  9321                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  9322  0D5F  1487               	bsf	7,1	;volatile
  9323                           
  9324                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  9325  0D60  1187               	bcf	7,3	;volatile
  9326                           
  9327                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  9328  0D61  1587               	bsf	7,3	;volatile
  9329                           
  9330                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9331  0D62  3018               	movlw	24
  9332  0D63  00F4               	movwf	??_LCD_date
  9333  0D64                     u5367:
  9334  0D64  0BF4               	decfsz	??_LCD_date,f
  9335  0D65  2D64               	goto	u5367
  9336  0D66  2D67               	nop2
  9337                           
  9338                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  9339  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  9340  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  9341  0D69  1187               	bcf	7,3	;volatile
  9342                           
  9343                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9344  0D6A  3018               	movlw	24
  9345  0D6B  00F4               	movwf	??_LCD_date
  9346  0D6C                     u5377:
  9347  0D6C  0BF4               	decfsz	??_LCD_date,f
  9348  0D6D  2D6C               	goto	u5377
  9349  0D6E  2D6F               	nop2
  9350                           
  9351                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9352  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  9353  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  9354  0D71  1207               	bcf	7,4	;volatile
  9355  0D72  1287               	bcf	7,5	;volatile
  9356  0D73  1307               	bcf	7,6	;volatile
  9357  0D74  1387               	bcf	7,7	;volatile
  9358                           
  9359                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  9360  0D75  0820               	movf	LCD_date@date,w
  9361  0D76  3901               	andlw	1
  9362  0D77  00F4               	movwf	??_LCD_date
  9363  0D78  0EF4               	swapf	??_LCD_date,f
  9364  0D79  0807               	movf	7,w	;volatile
  9365  0D7A  0674               	xorwf	??_LCD_date,w
  9366  0D7B  39EF               	andlw	-17
  9367  0D7C  0674               	xorwf	??_LCD_date,w
  9368  0D7D  0087               	movwf	7	;volatile
  9369                           
  9370                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  9371  0D7E  0820               	movf	LCD_date@date,w
  9372  0D7F  00F4               	movwf	??_LCD_date
  9373  0D80  1003               	clrc
  9374  0D81  0C74               	rrf	??_LCD_date,w
  9375  0D82  3901               	andlw	1
  9376  0D83  00F5               	movwf	??_LCD_date+1
  9377  0D84  0EF5               	swapf	??_LCD_date+1,f
  9378  0D85  0DF5               	rlf	??_LCD_date+1,f
  9379  0D86  0807               	movf	7,w	;volatile
  9380  0D87  0675               	xorwf	??_LCD_date+1,w
  9381  0D88  39DF               	andlw	-33
  9382  0D89  0675               	xorwf	??_LCD_date+1,w
  9383  0D8A  0087               	movwf	7	;volatile
  9384                           
  9385                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  9386  0D8B  0820               	movf	LCD_date@date,w
  9387  0D8C  00F4               	movwf	??_LCD_date
  9388  0D8D  3002               	movlw	2
  9389  0D8E                     u3795:
  9390  0D8E  1003               	clrc
  9391  0D8F  0CF4               	rrf	??_LCD_date,f
  9392  0D90  3EFF               	addlw	-1
  9393  0D91  1D03               	skipz
  9394  0D92  2D8E               	goto	u3795
  9395  0D93  0874               	movf	??_LCD_date,w
  9396  0D94  3901               	andlw	1
  9397  0D95  00F5               	movwf	??_LCD_date+1
  9398  0D96  0EF5               	swapf	??_LCD_date+1,f
  9399  0D97  0DF5               	rlf	??_LCD_date+1,f
  9400  0D98  0DF5               	rlf	??_LCD_date+1,f
  9401  0D99  0807               	movf	7,w	;volatile
  9402  0D9A  0675               	xorwf	??_LCD_date+1,w
  9403  0D9B  39BF               	andlw	-65
  9404  0D9C  0675               	xorwf	??_LCD_date+1,w
  9405  0D9D  0087               	movwf	7	;volatile
  9406                           
  9407                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  9408  0D9E  0820               	movf	LCD_date@date,w
  9409  0D9F  00F4               	movwf	??_LCD_date
  9410  0DA0  3003               	movlw	3
  9411  0DA1                     u3805:
  9412  0DA1  1003               	clrc
  9413  0DA2  0CF4               	rrf	??_LCD_date,f
  9414  0DA3  3EFF               	addlw	-1
  9415  0DA4  1D03               	skipz
  9416  0DA5  2DA1               	goto	u3805
  9417  0DA6  0874               	movf	??_LCD_date,w
  9418  0DA7  3901               	andlw	1
  9419  0DA8  00F5               	movwf	??_LCD_date+1
  9420  0DA9  0CF5               	rrf	??_LCD_date+1,f
  9421  0DAA  0CF5               	rrf	??_LCD_date+1,f
  9422  0DAB  0807               	movf	7,w	;volatile
  9423  0DAC  0675               	xorwf	??_LCD_date+1,w
  9424  0DAD  397F               	andlw	-129
  9425  0DAE  0675               	xorwf	??_LCD_date+1,w
  9426  0DAF  0087               	movwf	7	;volatile
  9427                           
  9428                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  9429  0DB0  1487               	bsf	7,1	;volatile
  9430                           
  9431                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  9432  0DB1  1187               	bcf	7,3	;volatile
  9433                           
  9434                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  9435  0DB2  1587               	bsf	7,3	;volatile
  9436                           
  9437                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  9438  0DB3  3053               	movlw	83
  9439  0DB4  00F4               	movwf	??_LCD_date
  9440  0DB5                     u5387:
  9441  0DB5  0BF4               	decfsz	??_LCD_date,f
  9442  0DB6  2DB5               	goto	u5387
  9443                           
  9444                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  9445  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  9446  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  9447  0DB9  1187               	bcf	7,3	;volatile
  9448                           
  9449                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  9450  0DBA  3053               	movlw	83
  9451  0DBB  00F4               	movwf	??_LCD_date
  9452  0DBC                     u5397:
  9453  0DBC  0BF4               	decfsz	??_LCD_date,f
  9454  0DBD  2DBC               	goto	u5397
  9455                           
  9456                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  9457  0DBE  3014               	movlw	20
  9458  0DBF  00F5               	movwf	??_LCD_date+1
  9459  0DC0  3079               	movlw	121
  9460  0DC1  00F4               	movwf	??_LCD_date
  9461  0DC2                     u5407:
  9462  0DC2  0BF4               	decfsz	??_LCD_date,f
  9463  0DC3  2DC2               	goto	u5407
  9464  0DC4  0BF5               	decfsz	??_LCD_date+1,f
  9465  0DC5  2DC2               	goto	u5407
  9466  0DC6  2DC7               	nop2
  9467  0DC7  0008               	return
  9468  0DC8                     __end_of_LCD_date:
  9469                           
  9470                           	psect	text50
  9471  1247                     __ptext50:	
  9472 ;; *************** function _Antirrebote *****************
  9473 ;; Defined at:
  9474 ;;		line 77 in file "Main.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9488 ;;      Params:         0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0
  9490 ;;      Temps:          0       3       0       0       0
  9491 ;;      Totals:         0       3       0       0       0
  9492 ;;Total ram usage:        3 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    2
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_MEF_Actualizacion
  9499 ;;		_MEF_Subest_Actualizacion
  9500 ;;		_Select_Modo
  9501 ;;		_Detener
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           
  9506                           ;psect for function _Antirrebote
  9507  1247                     _Antirrebote:
  9508                           
  9509                           ;Main.c: 79:     PORTAbits.RA5 = 1;
  9510                           
  9511                           ;incstack = 0
  9512                           ; Regs used in _Antirrebote: [wreg]
  9513  1247  1283               	bcf	3,5	;RP0=0, select bank0
  9514  1248  1303               	bcf	3,6	;RP1=0, select bank0
  9515  1249  1685               	bsf	5,5	;volatile
  9516                           
  9517                           ;Main.c: 80:     _delay((unsigned long)((50)*(20000000/4000.0)));
  9518  124A  3002               	movlw	2
  9519  124B  1283               	bcf	3,5	;RP0=0, select bank0
  9520  124C  1303               	bcf	3,6	;RP1=0, select bank0
  9521  124D  00A2               	movwf	??_Antirrebote+2
  9522  124E  3045               	movlw	69
  9523  124F  00A1               	movwf	??_Antirrebote+1
  9524  1250  30A9               	movlw	169
  9525  1251  00A0               	movwf	??_Antirrebote
  9526  1252                     u5417:
  9527  1252  0BA0               	decfsz	??_Antirrebote,f
  9528  1253  2A52               	goto	u5417
  9529  1254  0BA1               	decfsz	??_Antirrebote+1,f
  9530  1255  2A52               	goto	u5417
  9531  1256  0BA2               	decfsz	??_Antirrebote+2,f
  9532  1257  2A52               	goto	u5417
  9533                           
  9534                           ;Main.c: 81:     PORTAbits.RA5 = 0;
  9535  1258  1283               	bcf	3,5	;RP0=0, select bank0
  9536  1259  1303               	bcf	3,6	;RP1=0, select bank0
  9537  125A  1285               	bcf	5,5	;volatile
  9538  125B                     l4342:	
  9539                           ;Main.c: 82:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  9540                           
  9541  125B  1283               	bcf	3,5	;RP0=0, select bank0
  9542  125C  1303               	bcf	3,6	;RP1=0, select bank0
  9543  125D  1C06               	btfss	6,0	;volatile
  9544  125E  2A6B               	goto	l4344
  9545  125F                     l4340:
  9546  125F  3041               	movlw	65
  9547  1260  1283               	bcf	3,5	;RP0=0, select bank0
  9548  1261  1303               	bcf	3,6	;RP1=0, select bank0
  9549  1262  00A1               	movwf	??_Antirrebote+1
  9550  1263  30ED               	movlw	237
  9551  1264  00A0               	movwf	??_Antirrebote
  9552  1265                     u5427:
  9553  1265  0BA0               	decfsz	??_Antirrebote,f
  9554  1266  2A65               	goto	u5427
  9555  1267  0BA1               	decfsz	??_Antirrebote+1,f
  9556  1268  2A65               	goto	u5427
  9557  1269  2A6A               	nop2
  9558  126A  2A5B               	goto	l4342
  9559  126B                     l4344:
  9560  126B  1C86               	btfss	6,1	;volatile
  9561  126C  1906               	btfsc	6,2	;volatile
  9562  126D  2A5F               	goto	l4340
  9563  126E  1D86               	btfss	6,3	;volatile
  9564  126F  0008               	return
  9565  1270  2A5F               	goto	l4340
  9566  1271                     __end_of_Antirrebote:
  9567                           
  9568                           	psect	text51
  9569  0A17                     __ptext51:	
  9570 ;; *************** function _LCD_init *****************
  9571 ;; Defined at:
  9572 ;;		line 4 in file "Lcd.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;		None
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  i               1    3[BANK0 ] unsigned char 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9586 ;;      Params:         0       0       0       0       0
  9587 ;;      Locals:         0       1       0       0       0
  9588 ;;      Temps:          0       2       0       0       0
  9589 ;;      Totals:         0       3       0       0       0
  9590 ;;Total ram usage:        3 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    3
  9593 ;; This function calls:
  9594 ;;		_LCD_command
  9595 ;; This function is called by:
  9596 ;;		_main
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           
  9601                           ;psect for function _LCD_init
  9602  0A17                     _LCD_init:
  9603                           
  9604                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  9605                           
  9606                           ;incstack = 0
  9607                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9608  0A17  1683               	bsf	3,5	;RP0=1, select bank1
  9609  0A18  1303               	bcf	3,6	;RP1=0, select bank1
  9610  0A19  1207               	bcf	7,4	;volatile
  9611  0A1A  1287               	bcf	7,5	;volatile
  9612  0A1B  1307               	bcf	7,6	;volatile
  9613  0A1C  1387               	bcf	7,7	;volatile
  9614                           
  9615                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  9616  0A1D  1087               	bcf	7,1	;volatile
  9617  0A1E  1187               	bcf	7,3	;volatile
  9618                           
  9619                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  9620  0A1F  1107               	bcf	7,2	;volatile
  9621  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  9622  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  9623  0A22  1107               	bcf	7,2	;volatile
  9624                           
  9625                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  9626  0A23  30C3               	movlw	195
  9627  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  9628  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  9629  0A26  00A2               	movwf	??_LCD_init+1
  9630  0A27  30CC               	movlw	204
  9631  0A28  00A1               	movwf	??_LCD_init
  9632  0A29                     u5437:
  9633  0A29  0BA1               	decfsz	??_LCD_init,f
  9634  0A2A  2A29               	goto	u5437
  9635  0A2B  0BA2               	decfsz	??_LCD_init+1,f
  9636  0A2C  2A29               	goto	u5437
  9637  0A2D  0000               	nop
  9638                           
  9639                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  9640  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  9641  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  9642  0A30  01A3               	clrf	LCD_init@i
  9643  0A31                     l4920:
  9644                           
  9645                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  9646  0A31  3003               	movlw	3
  9647  0A32  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9648                           
  9649                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  9650  0A37  302E               	movlw	46
  9651  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  9652  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  9653  0A3A  00A2               	movwf	??_LCD_init+1
  9654  0A3B  3072               	movlw	114
  9655  0A3C  00A1               	movwf	??_LCD_init
  9656  0A3D                     u5447:
  9657  0A3D  0BA1               	decfsz	??_LCD_init,f
  9658  0A3E  2A3D               	goto	u5447
  9659  0A3F  0BA2               	decfsz	??_LCD_init+1,f
  9660  0A40  2A3D               	goto	u5447
  9661  0A41  0000               	nop
  9662                           
  9663                           ;Lcd.c: 18:     }
  9664  0A42  3001               	movlw	1
  9665  0A43  00FF               	movwf	127
  9666  0A44  087F               	movf	127,w
  9667  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  9668  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  9669  0A47  07A3               	addwf	LCD_init@i,f
  9670  0A48  3003               	movlw	3
  9671  0A49  0223               	subwf	LCD_init@i,w
  9672  0A4A  1C03               	skipc
  9673  0A4B  2A31               	goto	l4920
  9674                           
  9675                           ;Lcd.c: 21:  LCD_command(0x33);
  9676  0A4C  3033               	movlw	51
  9677  0A4D  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9678                           
  9679                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9680  0A52  30A5               	movlw	165
  9681  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  9682  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  9683  0A55  00A1               	movwf	??_LCD_init
  9684  0A56                     u5457:
  9685  0A56  0BA1               	decfsz	??_LCD_init,f
  9686  0A57  2A56               	goto	u5457
  9687  0A58  2A59               	nop2
  9688                           
  9689                           ;Lcd.c: 23:     LCD_command(0x32);
  9690  0A59  3032               	movlw	50
  9691  0A5A  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9692                           
  9693                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  9694  0A5F  3021               	movlw	33
  9695  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  9696  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  9697  0A62  00A2               	movwf	??_LCD_init+1
  9698  0A63  3075               	movlw	117
  9699  0A64  00A1               	movwf	??_LCD_init
  9700  0A65                     u5467:
  9701  0A65  0BA1               	decfsz	??_LCD_init,f
  9702  0A66  2A65               	goto	u5467
  9703  0A67  0BA2               	decfsz	??_LCD_init+1,f
  9704  0A68  2A65               	goto	u5467
  9705  0A69  2A6A               	nop2
  9706                           
  9707                           ;Lcd.c: 25:  LCD_command(0x28);
  9708  0A6A  3028               	movlw	40
  9709  0A6B  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9710                           
  9711                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9712  0A70  30A5               	movlw	165
  9713  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  9714  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  9715  0A73  00A1               	movwf	??_LCD_init
  9716  0A74                     u5477:
  9717  0A74  0BA1               	decfsz	??_LCD_init,f
  9718  0A75  2A74               	goto	u5477
  9719  0A76  2A77               	nop2
  9720                           
  9721                           ;Lcd.c: 27:  LCD_command(0x0C);
  9722  0A77  300C               	movlw	12
  9723  0A78  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9724                           
  9725                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9726  0A7D  30A5               	movlw	165
  9727  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  9728  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  9729  0A80  00A1               	movwf	??_LCD_init
  9730  0A81                     u5487:
  9731  0A81  0BA1               	decfsz	??_LCD_init,f
  9732  0A82  2A81               	goto	u5487
  9733  0A83  2A84               	nop2
  9734                           
  9735                           ;Lcd.c: 29:  LCD_command(0x06);
  9736  0A84  3006               	movlw	6
  9737  0A85  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9738                           
  9739                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9740  0A8A  30A5               	movlw	165
  9741  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  9742  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  9743  0A8D  00A1               	movwf	??_LCD_init
  9744  0A8E                     u5497:
  9745  0A8E  0BA1               	decfsz	??_LCD_init,f
  9746  0A8F  2A8E               	goto	u5497
  9747  0A90  2A91               	nop2
  9748                           
  9749                           ;Lcd.c: 31:     LCD_command(0x01);
  9750  0A91  3001               	movlw	1
  9751  0A92  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9752                           
  9753                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9754  0A97  3041               	movlw	65
  9755  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  9756  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  9757  0A9A  00A2               	movwf	??_LCD_init+1
  9758  0A9B  30ED               	movlw	237
  9759  0A9C  00A1               	movwf	??_LCD_init
  9760  0A9D                     u5507:
  9761  0A9D  0BA1               	decfsz	??_LCD_init,f
  9762  0A9E  2A9D               	goto	u5507
  9763  0A9F  0BA2               	decfsz	??_LCD_init+1,f
  9764  0AA0  2A9D               	goto	u5507
  9765  0AA1  2AA2               	nop2
  9766  0AA2  0008               	return
  9767  0AA3                     __end_of_LCD_init:
  9768                           
  9769                           	psect	text52
  9770  0E80                     __ptext52:	
  9771 ;; *************** function _LCD_command *****************
  9772 ;; Defined at:
  9773 ;;		line 39 in file "Lcd.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  cmd             1    wreg     unsigned char 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  cmd             1    0[BANK0 ] unsigned char 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9787 ;;      Params:         0       0       0       0       0
  9788 ;;      Locals:         0       1       0       0       0
  9789 ;;      Temps:          2       0       0       0       0
  9790 ;;      Totals:         2       1       0       0       0
  9791 ;;Total ram usage:        3 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    2
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_MEF_Subest_Actualizacion
  9798 ;;		_Pant_Inicio
  9799 ;;		_Pant_Modos
  9800 ;;		_Pant_Detener
  9801 ;;		_Pant_Pulverizacion
  9802 ;;		_Pant_Fuga
  9803 ;;		_Pant_Flujo
  9804 ;;		_Proceso_Fin
  9805 ;;		_LCD_init
  9806 ;;		_LCD_array
  9807 ;;		_LCD_xy
  9808 ;;		_LCD_character
  9809 ;;		_LCD_shift
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _LCD_command
  9815  0E80                     _LCD_command:
  9816                           
  9817                           ;incstack = 0
  9818                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  9819                           ;LCD_command@cmd stored from wreg
  9820  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  9821  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  9822  0E82  00A0               	movwf	LCD_command@cmd
  9823                           
  9824                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9825  0E83  1207               	bcf	7,4	;volatile
  9826  0E84  1287               	bcf	7,5	;volatile
  9827  0E85  1307               	bcf	7,6	;volatile
  9828  0E86  1387               	bcf	7,7	;volatile
  9829                           
  9830                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  9831  0E87  0820               	movf	LCD_command@cmd,w
  9832  0E88  00F4               	movwf	??_LCD_command
  9833  0E89  3004               	movlw	4
  9834  0E8A                     u3695:
  9835  0E8A  1003               	clrc
  9836  0E8B  0CF4               	rrf	??_LCD_command,f
  9837  0E8C  3EFF               	addlw	-1
  9838  0E8D  1D03               	skipz
  9839  0E8E  2E8A               	goto	u3695
  9840  0E8F  0874               	movf	??_LCD_command,w
  9841  0E90  3901               	andlw	1
  9842  0E91  00F5               	movwf	??_LCD_command+1
  9843  0E92  0EF5               	swapf	??_LCD_command+1,f
  9844  0E93  0807               	movf	7,w	;volatile
  9845  0E94  0675               	xorwf	??_LCD_command+1,w
  9846  0E95  39EF               	andlw	-17
  9847  0E96  0675               	xorwf	??_LCD_command+1,w
  9848  0E97  0087               	movwf	7	;volatile
  9849                           
  9850                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  9851  0E98  0820               	movf	LCD_command@cmd,w
  9852  0E99  00F4               	movwf	??_LCD_command
  9853  0E9A  3005               	movlw	5
  9854  0E9B                     u3705:
  9855  0E9B  1003               	clrc
  9856  0E9C  0CF4               	rrf	??_LCD_command,f
  9857  0E9D  3EFF               	addlw	-1
  9858  0E9E  1D03               	skipz
  9859  0E9F  2E9B               	goto	u3705
  9860  0EA0  0874               	movf	??_LCD_command,w
  9861  0EA1  3901               	andlw	1
  9862  0EA2  00F5               	movwf	??_LCD_command+1
  9863  0EA3  0EF5               	swapf	??_LCD_command+1,f
  9864  0EA4  0DF5               	rlf	??_LCD_command+1,f
  9865  0EA5  0807               	movf	7,w	;volatile
  9866  0EA6  0675               	xorwf	??_LCD_command+1,w
  9867  0EA7  39DF               	andlw	-33
  9868  0EA8  0675               	xorwf	??_LCD_command+1,w
  9869  0EA9  0087               	movwf	7	;volatile
  9870                           
  9871                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  9872  0EAA  0820               	movf	LCD_command@cmd,w
  9873  0EAB  00F4               	movwf	??_LCD_command
  9874  0EAC  3006               	movlw	6
  9875  0EAD                     u3715:
  9876  0EAD  1003               	clrc
  9877  0EAE  0CF4               	rrf	??_LCD_command,f
  9878  0EAF  3EFF               	addlw	-1
  9879  0EB0  1D03               	skipz
  9880  0EB1  2EAD               	goto	u3715
  9881  0EB2  0874               	movf	??_LCD_command,w
  9882  0EB3  3901               	andlw	1
  9883  0EB4  00F5               	movwf	??_LCD_command+1
  9884  0EB5  0EF5               	swapf	??_LCD_command+1,f
  9885  0EB6  0DF5               	rlf	??_LCD_command+1,f
  9886  0EB7  0DF5               	rlf	??_LCD_command+1,f
  9887  0EB8  0807               	movf	7,w	;volatile
  9888  0EB9  0675               	xorwf	??_LCD_command+1,w
  9889  0EBA  39BF               	andlw	-65
  9890  0EBB  0675               	xorwf	??_LCD_command+1,w
  9891  0EBC  0087               	movwf	7	;volatile
  9892                           
  9893                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  9894  0EBD  0820               	movf	LCD_command@cmd,w
  9895  0EBE  00F4               	movwf	??_LCD_command
  9896  0EBF  3007               	movlw	7
  9897  0EC0                     u3725:
  9898  0EC0  1003               	clrc
  9899  0EC1  0CF4               	rrf	??_LCD_command,f
  9900  0EC2  3EFF               	addlw	-1
  9901  0EC3  1D03               	skipz
  9902  0EC4  2EC0               	goto	u3725
  9903  0EC5  0874               	movf	??_LCD_command,w
  9904  0EC6  3901               	andlw	1
  9905  0EC7  00F5               	movwf	??_LCD_command+1
  9906  0EC8  0CF5               	rrf	??_LCD_command+1,f
  9907  0EC9  0CF5               	rrf	??_LCD_command+1,f
  9908  0ECA  0807               	movf	7,w	;volatile
  9909  0ECB  0675               	xorwf	??_LCD_command+1,w
  9910  0ECC  397F               	andlw	-129
  9911  0ECD  0675               	xorwf	??_LCD_command+1,w
  9912  0ECE  0087               	movwf	7	;volatile
  9913                           
  9914                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  9915  0ECF  1087               	bcf	7,1	;volatile
  9916                           
  9917                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  9918  0ED0  1187               	bcf	7,3	;volatile
  9919                           
  9920                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  9921  0ED1  1587               	bsf	7,3	;volatile
  9922                           
  9923                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9924  0ED2  3018               	movlw	24
  9925  0ED3  00F4               	movwf	??_LCD_command
  9926  0ED4                     u5517:
  9927  0ED4  0BF4               	decfsz	??_LCD_command,f
  9928  0ED5  2ED4               	goto	u5517
  9929  0ED6  2ED7               	nop2
  9930                           
  9931                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  9932  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  9933  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  9934  0ED9  1187               	bcf	7,3	;volatile
  9935                           
  9936                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9937  0EDA  3018               	movlw	24
  9938  0EDB  00F4               	movwf	??_LCD_command
  9939  0EDC                     u5527:
  9940  0EDC  0BF4               	decfsz	??_LCD_command,f
  9941  0EDD  2EDC               	goto	u5527
  9942  0EDE  2EDF               	nop2
  9943                           
  9944                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9945  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  9946  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  9947  0EE1  1207               	bcf	7,4	;volatile
  9948  0EE2  1287               	bcf	7,5	;volatile
  9949  0EE3  1307               	bcf	7,6	;volatile
  9950  0EE4  1387               	bcf	7,7	;volatile
  9951                           
  9952                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  9953  0EE5  0820               	movf	LCD_command@cmd,w
  9954  0EE6  3901               	andlw	1
  9955  0EE7  00F4               	movwf	??_LCD_command
  9956  0EE8  0EF4               	swapf	??_LCD_command,f
  9957  0EE9  0807               	movf	7,w	;volatile
  9958  0EEA  0674               	xorwf	??_LCD_command,w
  9959  0EEB  39EF               	andlw	-17
  9960  0EEC  0674               	xorwf	??_LCD_command,w
  9961  0EED  0087               	movwf	7	;volatile
  9962                           
  9963                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  9964  0EEE  0820               	movf	LCD_command@cmd,w
  9965  0EEF  00F4               	movwf	??_LCD_command
  9966  0EF0  1003               	clrc
  9967  0EF1  0C74               	rrf	??_LCD_command,w
  9968  0EF2  3901               	andlw	1
  9969  0EF3  00F5               	movwf	??_LCD_command+1
  9970  0EF4  0EF5               	swapf	??_LCD_command+1,f
  9971  0EF5  0DF5               	rlf	??_LCD_command+1,f
  9972  0EF6  0807               	movf	7,w	;volatile
  9973  0EF7  0675               	xorwf	??_LCD_command+1,w
  9974  0EF8  39DF               	andlw	-33
  9975  0EF9  0675               	xorwf	??_LCD_command+1,w
  9976  0EFA  0087               	movwf	7	;volatile
  9977                           
  9978                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  9979  0EFB  0820               	movf	LCD_command@cmd,w
  9980  0EFC  00F4               	movwf	??_LCD_command
  9981  0EFD  3002               	movlw	2
  9982  0EFE                     u3735:
  9983  0EFE  1003               	clrc
  9984  0EFF  0CF4               	rrf	??_LCD_command,f
  9985  0F00  3EFF               	addlw	-1
  9986  0F01  1D03               	skipz
  9987  0F02  2EFE               	goto	u3735
  9988  0F03  0874               	movf	??_LCD_command,w
  9989  0F04  3901               	andlw	1
  9990  0F05  00F5               	movwf	??_LCD_command+1
  9991  0F06  0EF5               	swapf	??_LCD_command+1,f
  9992  0F07  0DF5               	rlf	??_LCD_command+1,f
  9993  0F08  0DF5               	rlf	??_LCD_command+1,f
  9994  0F09  0807               	movf	7,w	;volatile
  9995  0F0A  0675               	xorwf	??_LCD_command+1,w
  9996  0F0B  39BF               	andlw	-65
  9997  0F0C  0675               	xorwf	??_LCD_command+1,w
  9998  0F0D  0087               	movwf	7	;volatile
  9999                           
 10000                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
 10001  0F0E  0820               	movf	LCD_command@cmd,w
 10002  0F0F  00F4               	movwf	??_LCD_command
 10003  0F10  3003               	movlw	3
 10004  0F11                     u3745:
 10005  0F11  1003               	clrc
 10006  0F12  0CF4               	rrf	??_LCD_command,f
 10007  0F13  3EFF               	addlw	-1
 10008  0F14  1D03               	skipz
 10009  0F15  2F11               	goto	u3745
 10010  0F16  0874               	movf	??_LCD_command,w
 10011  0F17  3901               	andlw	1
 10012  0F18  00F5               	movwf	??_LCD_command+1
 10013  0F19  0CF5               	rrf	??_LCD_command+1,f
 10014  0F1A  0CF5               	rrf	??_LCD_command+1,f
 10015  0F1B  0807               	movf	7,w	;volatile
 10016  0F1C  0675               	xorwf	??_LCD_command+1,w
 10017  0F1D  397F               	andlw	-129
 10018  0F1E  0675               	xorwf	??_LCD_command+1,w
 10019  0F1F  0087               	movwf	7	;volatile
 10020                           
 10021                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
 10022  0F20  1087               	bcf	7,1	;volatile
 10023                           
 10024                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
 10025  0F21  1187               	bcf	7,3	;volatile
 10026                           
 10027                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
 10028  0F22  1587               	bsf	7,3	;volatile
 10029                           
 10030                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
 10031  0F23  3018               	movlw	24
 10032  0F24  00F4               	movwf	??_LCD_command
 10033  0F25                     u5537:
 10034  0F25  0BF4               	decfsz	??_LCD_command,f
 10035  0F26  2F25               	goto	u5537
 10036  0F27  2F28               	nop2
 10037                           
 10038                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
 10039  0F28  1283               	bcf	3,5	;RP0=0, select bank0
 10040  0F29  1303               	bcf	3,6	;RP1=0, select bank0
 10041  0F2A  1187               	bcf	7,3	;volatile
 10042                           
 10043                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
 10044  0F2B  3018               	movlw	24
 10045  0F2C  00F4               	movwf	??_LCD_command
 10046  0F2D                     u5547:
 10047  0F2D  0BF4               	decfsz	??_LCD_command,f
 10048  0F2E  2F2D               	goto	u5547
 10049  0F2F  2F30               	nop2
 10050                           
 10051                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
 10052  0F30  3014               	movlw	20
 10053  0F31  00F5               	movwf	??_LCD_command+1
 10054  0F32  3079               	movlw	121
 10055  0F33  00F4               	movwf	??_LCD_command
 10056  0F34                     u5557:
 10057  0F34  0BF4               	decfsz	??_LCD_command,f
 10058  0F35  2F34               	goto	u5557
 10059  0F36  0BF5               	decfsz	??_LCD_command+1,f
 10060  0F37  2F34               	goto	u5557
 10061  0F38  2F39               	nop2
 10062  0F39  0008               	return
 10063  0F3A                     __end_of_LCD_command:
 10064                           
 10065                           	psect	text53
 10066  11FE                     __ptext53:	
 10067 ;; *************** function _Adc_init *****************
 10068 ;; Defined at:
 10069 ;;		line 5 in file "ADC.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10083 ;;      Params:         0       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0
 10085 ;;      Temps:          0       0       0       0       0
 10086 ;;      Totals:         0       0       0       0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    2
 10090 ;; This function calls:
 10091 ;;		Nothing
 10092 ;; This function is called by:
 10093 ;;		_main
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           
 10098                           ;psect for function _Adc_init
 10099  11FE                     _Adc_init:
 10100                           
 10101                           ;ADC.c: 8:     TRISAbits.TRISA0 = 1,ANSELbits.ANS0 = 1;
 10102                           
 10103                           ;incstack = 0
 10104                           ; Regs used in _Adc_init: [wreg+status,2+status,0]
 10105  11FE  1683               	bsf	3,5	;RP0=1, select bank1
 10106  11FF  1303               	bcf	3,6	;RP1=0, select bank1
 10107  1200  1405               	bsf	5,0	;volatile
 10108  1201  1683               	bsf	3,5	;RP0=1, select bank3
 10109  1202  1703               	bsf	3,6	;RP1=1, select bank3
 10110  1203  1408               	bsf	8,0	;volatile
 10111                           
 10112                           ;ADC.c: 9:     TRISAbits.TRISA1 = 1;ANSELbits.ANS1 = 1;
 10113  1204  1683               	bsf	3,5	;RP0=1, select bank1
 10114  1205  1303               	bcf	3,6	;RP1=0, select bank1
 10115  1206  1485               	bsf	5,1	;volatile
 10116  1207  1683               	bsf	3,5	;RP0=1, select bank3
 10117  1208  1703               	bsf	3,6	;RP1=1, select bank3
 10118  1209  1488               	bsf	8,1	;volatile
 10119                           
 10120                           ;ADC.c: 10:     TRISAbits.TRISA2 = 1,ANSELbits.ANS2 = 1;
 10121  120A  1683               	bsf	3,5	;RP0=1, select bank1
 10122  120B  1303               	bcf	3,6	;RP1=0, select bank1
 10123  120C  1505               	bsf	5,2	;volatile
 10124  120D  1683               	bsf	3,5	;RP0=1, select bank3
 10125  120E  1703               	bsf	3,6	;RP1=1, select bank3
 10126  120F  1508               	bsf	8,2	;volatile
 10127                           
 10128                           ;ADC.c: 11:     TRISAbits.TRISA3 = 1,ANSELbits.ANS3 = 1;
 10129  1210  1683               	bsf	3,5	;RP0=1, select bank1
 10130  1211  1303               	bcf	3,6	;RP1=0, select bank1
 10131  1212  1585               	bsf	5,3	;volatile
 10132  1213  1683               	bsf	3,5	;RP0=1, select bank3
 10133  1214  1703               	bsf	3,6	;RP1=1, select bank3
 10134  1215  1588               	bsf	8,3	;volatile
 10135                           
 10136                           ;ADC.c: 14:     ADCON0bits.ADCS = 0b10;
 10137  1216  1283               	bcf	3,5	;RP0=0, select bank0
 10138  1217  1303               	bcf	3,6	;RP1=0, select bank0
 10139  1218  081F               	movf	31,w	;volatile
 10140  1219  393F               	andlw	-193
 10141  121A  3880               	iorlw	128
 10142  121B  009F               	movwf	31	;volatile
 10143                           
 10144                           ;ADC.c: 17:     ADCON1bits.ADFM = 1;
 10145  121C  1683               	bsf	3,5	;RP0=1, select bank1
 10146  121D  1303               	bcf	3,6	;RP1=0, select bank1
 10147  121E  179F               	bsf	31,7	;volatile
 10148                           
 10149                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
 10150  121F  121F               	bcf	31,4	;volatile
 10151                           
 10152                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
 10153  1220  129F               	bcf	31,5	;volatile
 10154  1221  0008               	return
 10155  1222                     __end_of_Adc_init:
 10156                           
 10157                           	psect	text54
 10158  0B2F                     __ptext54:	
 10159 ;; *************** function _ISR *****************
 10160 ;; Defined at:
 10161 ;;		line 87 in file "Main.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  f_pwmS1         1    3[COMMON] _Bool 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10175 ;;      Params:         0       0       0       0       0
 10176 ;;      Locals:         1       0       0       0       0
 10177 ;;      Temps:          3       0       0       0       0
 10178 ;;      Totals:         4       0       0       0       0
 10179 ;;Total ram usage:        4 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    1
 10182 ;; This function calls:
 10183 ;;		_Pwm_Signal
 10184 ;;		_Task_Ready
 10185 ;; This function is called by:
 10186 ;;		Interrupt level 1
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function _ISR
 10192  0B2F                     _ISR:
 10193                           
 10194                           ;Main.c: 89:     _Bool f_pwmS1=0;
 10195  0B2F  01F3               	clrf	ISR@f_pwmS1
 10196                           
 10197                           ;Main.c: 92:     if(TMR1IF == 1)
 10198  0B30  1C0C               	btfss	12,0	;volatile
 10199  0B31  2B9C               	goto	i1l3810
 10200                           
 10201                           ;Main.c: 93:     {;Main.c: 94:         if(Delay100ms!=0 && !Mostrar) Delay100ms--;
 10202  0B32  086A               	movf	_Delay100ms,w	;volatile
 10203  0B33  046B               	iorwf	_Delay100ms+1,w	;volatile
 10204  0B34  1903               	btfsc	3,2
 10205  0B35  2B43               	goto	i1l3792
 10206  0B36  1683               	bsf	3,5	;RP0=1, select bank1
 10207  0B37  1303               	bcf	3,6	;RP1=0, select bank1
 10208  0B38  083A               	movf	_Mostrar^(0+128),w
 10209  0B39  1D03               	btfss	3,2
 10210  0B3A  2B43               	goto	i1l3792
 10211  0B3B  3001               	movlw	1
 10212  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
 10213  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
 10214  0B3E  02EA               	subwf	_Delay100ms,f	;volatile
 10215  0B3F  3000               	movlw	0
 10216  0B40  1C03               	skipc
 10217  0B41  03EB               	decf	_Delay100ms+1,f	;volatile
 10218  0B42  02EB               	subwf	_Delay100ms+1,f	;volatile
 10219  0B43                     i1l3792:
 10220                           
 10221                           ;Main.c: 95:         if(Delay200ms!=0) Delay200ms--;
 10222  0B43  1283               	bcf	3,5	;RP0=0, select bank0
 10223  0B44  0868               	movf	_Delay200ms,w	;volatile
 10224  0B45  0469               	iorwf	_Delay200ms+1,w	;volatile
 10225  0B46  1903               	btfsc	3,2
 10226  0B47  2B4E               	goto	i1l3796
 10227  0B48  3001               	movlw	1
 10228  0B49  02E8               	subwf	_Delay200ms,f	;volatile
 10229  0B4A  3000               	movlw	0
 10230  0B4B  1C03               	skipc
 10231  0B4C  03E9               	decf	_Delay200ms+1,f	;volatile
 10232  0B4D  02E9               	subwf	_Delay200ms+1,f	;volatile
 10233  0B4E                     i1l3796:
 10234                           
 10235                           ;Main.c: 96:         if(Delay1s!=0 && Output) Delay1s--;
 10236  0B4E  0866               	movf	_Delay1s,w	;volatile
 10237  0B4F  0467               	iorwf	_Delay1s+1,w	;volatile
 10238  0B50  1903               	btfsc	3,2
 10239  0B51  2B5B               	goto	i1l3802
 10240  0B52  0877               	movf	_Output,w
 10241  0B53  1903               	btfsc	3,2
 10242  0B54  2B5B               	goto	i1l3802
 10243  0B55  3001               	movlw	1
 10244  0B56  02E6               	subwf	_Delay1s,f	;volatile
 10245  0B57  3000               	movlw	0
 10246  0B58  1C03               	skipc
 10247  0B59  03E7               	decf	_Delay1s+1,f	;volatile
 10248  0B5A  02E7               	subwf	_Delay1s+1,f	;volatile
 10249  0B5B                     i1l3802:
 10250                           
 10251                           ;Main.c: 97:         if(Act_PwmS1 && PwmS1!=PER_T_S1) PwmS1++;
 10252  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
 10253  0B5C  1303               	bcf	3,6	;RP1=0, select bank1
 10254  0B5D  083C               	movf	_Act_PwmS1^(0+128),w
 10255  0B5E  1903               	btfsc	3,2
 10256  0B5F  2B74               	goto	i1l124
 10257  0B60  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10258  0B61  1283               	bcf	3,5	;RP0=0, select bank0
 10259  0B62  1303               	bcf	3,6	;RP1=0, select bank0
 10260  0B63  0661               	xorwf	_PwmS1+1,w
 10261  0B64  1D03               	skipz
 10262  0B65  2B6C               	goto	u360_25
 10263  0B66  1683               	bsf	3,5	;RP0=1, select bank1
 10264  0B67  1303               	bcf	3,6	;RP1=0, select bank1
 10265  0B68  0830               	movf	_PER_T_S1^(0+128),w
 10266  0B69  1283               	bcf	3,5	;RP0=0, select bank0
 10267  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
 10268  0B6B  0660               	xorwf	_PwmS1,w
 10269  0B6C                     u360_25:
 10270  0B6C  1903               	skipnz
 10271  0B6D  2B74               	goto	i1l124
 10272  0B6E  3001               	movlw	1
 10273  0B6F  07E0               	addwf	_PwmS1,f
 10274  0B70  1803               	skipnc
 10275  0B71  0AE1               	incf	_PwmS1+1,f
 10276  0B72  3000               	movlw	0
 10277  0B73  07E1               	addwf	_PwmS1+1,f
 10278  0B74                     i1l124:
 10279                           
 10280                           ;Main.c: 98:         if(PwmS1 == P_W_T_S1 || PwmS1 == PER_T_S1) f_pwmS1=1;
 10281  0B74  1683               	bsf	3,5	;RP0=1, select bank1
 10282  0B75  1303               	bcf	3,6	;RP1=0, select bank1
 10283  0B76  0833               	movf	(_P_W_T_S1+1)^(0+128),w
 10284  0B77  1283               	bcf	3,5	;RP0=0, select bank0
 10285  0B78  1303               	bcf	3,6	;RP1=0, select bank0
 10286  0B79  0661               	xorwf	_PwmS1+1,w
 10287  0B7A  1D03               	skipz
 10288  0B7B  2B82               	goto	u361_25
 10289  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
 10290  0B7D  1303               	bcf	3,6	;RP1=0, select bank1
 10291  0B7E  0832               	movf	_P_W_T_S1^(0+128),w
 10292  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0B80  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0B81  0660               	xorwf	_PwmS1,w
 10295  0B82                     u361_25:
 10296  0B82  1903               	skipnz
 10297  0B83  2B94               	goto	i1l127
 10298  0B84  1683               	bsf	3,5	;RP0=1, select bank1
 10299  0B85  1303               	bcf	3,6	;RP1=0, select bank1
 10300  0B86  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10301  0B87  1283               	bcf	3,5	;RP0=0, select bank0
 10302  0B88  1303               	bcf	3,6	;RP1=0, select bank0
 10303  0B89  0661               	xorwf	_PwmS1+1,w
 10304  0B8A  1D03               	skipz
 10305  0B8B  2B92               	goto	u362_25
 10306  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
 10307  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
 10308  0B8E  0830               	movf	_PER_T_S1^(0+128),w
 10309  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
 10310  0B90  1303               	bcf	3,6	;RP1=0, select bank0
 10311  0B91  0660               	xorwf	_PwmS1,w
 10312  0B92                     u362_25:
 10313  0B92  1D03               	skipz
 10314  0B93  2B96               	goto	i1l125
 10315  0B94                     i1l127:
 10316  0B94  01F3               	clrf	ISR@f_pwmS1
 10317  0B95  0AF3               	incf	ISR@f_pwmS1,f
 10318  0B96                     i1l125:
 10319                           
 10320                           ;Main.c: 100:         TMR1 = 65285;
 10321  0B96  30FF               	movlw	255
 10322  0B97  008F               	movwf	15	;volatile
 10323  0B98  3005               	movlw	5
 10324  0B99  008E               	movwf	14	;volatile
 10325                           
 10326                           ;Main.c: 101:         TMR1ON = 1;
 10327  0B9A  1410               	bsf	16,0	;volatile
 10328                           
 10329                           ;Main.c: 102:         TMR1IF = 0;
 10330  0B9B  100C               	bcf	12,0	;volatile
 10331  0B9C                     i1l3810:
 10332                           
 10333                           ;Main.c: 105:     if(!Delay100ms || !Delay200ms || !Delay1s) Task_Ready();
 10334  0B9C  086A               	movf	_Delay100ms,w	;volatile
 10335  0B9D  046B               	iorwf	_Delay100ms+1,w	;volatile
 10336  0B9E  1903               	btfsc	3,2
 10337  0B9F  2BA8               	goto	i1l3816
 10338  0BA0  0868               	movf	_Delay200ms,w	;volatile
 10339  0BA1  0469               	iorwf	_Delay200ms+1,w	;volatile
 10340  0BA2  1903               	btfsc	3,2
 10341  0BA3  2BA8               	goto	i1l3816
 10342  0BA4  0866               	movf	_Delay1s,w	;volatile
 10343  0BA5  0467               	iorwf	_Delay1s+1,w	;volatile
 10344  0BA6  1D03               	btfss	3,2
 10345  0BA7  2BAD               	goto	i1l3818
 10346  0BA8                     i1l3816:
 10347  0BA8  160A  118A  2440  120A  158A  	fcall	_Task_Ready
 10348  0BAD                     i1l3818:
 10349                           
 10350                           ;Main.c: 106:     if(f_pwmS1 && Act_PwmS1) Pwm_Signal();
 10351  0BAD  0873               	movf	ISR@f_pwmS1,w
 10352  0BAE  1903               	btfsc	3,2
 10353  0BAF  2BBA               	goto	i1l132
 10354  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
 10355  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
 10356  0BB2  083C               	movf	_Act_PwmS1^(0+128),w
 10357  0BB3  1903               	btfsc	3,2
 10358  0BB4  2BBA               	goto	i1l132
 10359  0BB5  160A  118A  21DA  120A  158A  	fcall	_Pwm_Signal
 10360  0BBA                     i1l132:
 10361  0BBA  0872               	movf	??_ISR+2,w
 10362  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
 10363  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
 10364  0BBD  00FF               	movwf	127
 10365  0BBE  0871               	movf	??_ISR+1,w
 10366  0BBF  008A               	movwf	10
 10367  0BC0  0E70               	swapf	??_ISR^(0+4294967168),w
 10368  0BC1  0083               	movwf	3
 10369  0BC2  0EFE               	swapf	126,f
 10370  0BC3  0E7E               	swapf	126,w
 10371  0BC4  0009               	retfie
 10372  0BC5                     __end_of_ISR:
 10373                           
 10374                           	psect	intentry
 10375  0004                     __pintentry:	
 10376                           ;incstack = 0
 10377                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10378                           
 10379  0004                     interrupt_function:
 10380  007E                     saved_w	set	btemp
 10381  0004  00FE               	movwf	btemp
 10382  0005  0E03               	swapf	3,w
 10383  0006  00F0               	movwf	??_ISR
 10384  0007  080A               	movf	10,w
 10385  0008  00F1               	movwf	??_ISR+1
 10386  0009  1283               	bcf	3,5	;RP0=0, select bank0
 10387  000A  1303               	bcf	3,6	;RP1=0, select bank0
 10388  000B  087F               	movf	btemp+1,w
 10389  000C  00F2               	movwf	??_ISR+2
 10390  000D  120A  158A  2B2F   	ljmp	_ISR
 10391                           
 10392                           	psect	text55
 10393  1440                     __ptext55:	
 10394 ;; *************** function _Task_Ready *****************
 10395 ;; Defined at:
 10396 ;;		line 111 in file "Main.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, btemp+1
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10410 ;;      Params:         0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0
 10413 ;;      Totals:         0       0       0       0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_ISR
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function _Task_Ready
 10425  1440                     _Task_Ready:
 10426                           
 10427                           ;Main.c: 113:     if(!Delay100ms)
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _Task_Ready: [wreg+status,2+status,0+btemp+1]
 10431  1440  1283               	bcf	3,5	;RP0=0, select bank0
 10432  1441  1303               	bcf	3,6	;RP1=0, select bank0
 10433  1442  086A               	movf	_Delay100ms,w	;volatile
 10434  1443  046B               	iorwf	_Delay100ms+1,w	;volatile
 10435  1444  1D03               	btfss	3,2
 10436  1445  2C50               	goto	i1l3724
 10437                           
 10438                           ;Main.c: 114:     {;Main.c: 115:         Mostrar = 1;
 10439  1446  1683               	bsf	3,5	;RP0=1, select bank1
 10440  1447  1303               	bcf	3,6	;RP1=0, select bank1
 10441  1448  01BA               	clrf	_Mostrar^(0+128)
 10442  1449  0ABA               	incf	_Mostrar^(0+128),f
 10443                           
 10444                           ;Main.c: 116:         Delay100ms = 1000;
 10445  144A  30E8               	movlw	232
 10446  144B  1283               	bcf	3,5	;RP0=0, select bank0
 10447  144C  1303               	bcf	3,6	;RP1=0, select bank0
 10448  144D  00EA               	movwf	_Delay100ms	;volatile
 10449  144E  3003               	movlw	3
 10450  144F  00EB               	movwf	_Delay100ms+1	;volatile
 10451  1450                     i1l3724:
 10452                           
 10453                           ;Main.c: 118:     if(!Delay200ms)
 10454  1450  0868               	movf	_Delay200ms,w	;volatile
 10455  1451  0469               	iorwf	_Delay200ms+1,w	;volatile
 10456  1452  1D03               	btfss	3,2
 10457  1453  2C5F               	goto	i1l3730
 10458  1454  0064               	clrwdt	;# 
 10459                           
 10460                           ;Main.c: 121:         Act_Variables = 1;
 10461  1455  1683               	bsf	3,5	;RP0=1, select bank1
 10462  1456  1303               	bcf	3,6	;RP1=0, select bank1
 10463  1457  01B9               	clrf	_Act_Variables^(0+128)
 10464  1458  0AB9               	incf	_Act_Variables^(0+128),f
 10465                           
 10466                           ;Main.c: 122:         Delay200ms = 2000;
 10467  1459  30D0               	movlw	208
 10468  145A  1283               	bcf	3,5	;RP0=0, select bank0
 10469  145B  1303               	bcf	3,6	;RP1=0, select bank0
 10470  145C  00E8               	movwf	_Delay200ms	;volatile
 10471  145D  3007               	movlw	7
 10472  145E  00E9               	movwf	_Delay200ms+1	;volatile
 10473  145F                     i1l3730:
 10474                           
 10475                           ;Main.c: 124:     if(!Delay1s)
 10476  145F  0866               	movf	_Delay1s,w	;volatile
 10477  1460  0467               	iorwf	_Delay1s+1,w	;volatile
 10478  1461  1D03               	btfss	3,2
 10479  1462  0008               	return
 10480                           
 10481                           ;Main.c: 125:     {;Main.c: 126:         if(Seg == 0)
 10482  1463  0878               	movf	_Seg,w
 10483  1464  1D03               	btfss	3,2
 10484  1465  2C70               	goto	i1l3740
 10485                           
 10486                           ;Main.c: 127:         {;Main.c: 128:             if(Min != 0) Min--,Seg=59;
 10487  1466  0879               	movf	_Min,w
 10488  1467  1903               	btfsc	3,2
 10489  1468  2C72               	goto	i1l3742
 10490  1469  3001               	movlw	1
 10491  146A  02F9               	subwf	_Min,f
 10492  146B  303B               	movlw	59
 10493  146C  00FF               	movwf	127
 10494  146D  087F               	movf	127,w
 10495  146E  00F8               	movwf	_Seg
 10496  146F  2C72               	goto	i1l3742
 10497  1470                     i1l3740:
 10498  1470  3001               	movlw	1
 10499  1471  02F8               	subwf	_Seg,f
 10500  1472                     i1l3742:
 10501                           
 10502                           ;Main.c: 131:         Temporizador = 1;
 10503  1472  1683               	bsf	3,5	;RP0=1, select bank1
 10504  1473  1303               	bcf	3,6	;RP1=0, select bank1
 10505  1474  01B8               	clrf	_Temporizador^(0+128)
 10506  1475  0AB8               	incf	_Temporizador^(0+128),f
 10507                           
 10508                           ;Main.c: 132:         Delay1s = 10000;
 10509  1476  3010               	movlw	16
 10510  1477  1283               	bcf	3,5	;RP0=0, select bank0
 10511  1478  1303               	bcf	3,6	;RP1=0, select bank0
 10512  1479  00E6               	movwf	_Delay1s	;volatile
 10513  147A  3027               	movlw	39
 10514  147B  00E7               	movwf	_Delay1s+1	;volatile
 10515  147C  0008               	return
 10516  147D                     __end_of_Task_Ready:
 10517                           
 10518                           	psect	text56
 10519  11DA                     __ptext56:	
 10520 ;; *************** function _Pwm_Signal *****************
 10521 ;; Defined at:
 10522 ;;		line 86 in file "Pwm_Soft.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		wreg, status,2
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10536 ;;      Params:         0       0       0       0       0
 10537 ;;      Locals:         0       0       0       0       0
 10538 ;;      Temps:          0       0       0       0       0
 10539 ;;      Totals:         0       0       0       0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_ISR
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           
 10550                           ;psect for function _Pwm_Signal
 10551  11DA                     _Pwm_Signal:
 10552                           
 10553                           ;Pwm_Soft.c: 88:     if(PwmS1==P_W_T_S1)
 10554                           
 10555                           ;incstack = 0
 10556                           ; Regs used in _Pwm_Signal: [wreg+status,2]
 10557  11DA  1683               	bsf	3,5	;RP0=1, select bank1
 10558  11DB  1303               	bcf	3,6	;RP1=0, select bank1
 10559  11DC  0833               	movf	(_P_W_T_S1+1)^(0+128),w
 10560  11DD  1283               	bcf	3,5	;RP0=0, select bank0
 10561  11DE  1303               	bcf	3,6	;RP1=0, select bank0
 10562  11DF  0661               	xorwf	_PwmS1+1,w
 10563  11E0  1D03               	skipz
 10564  11E1  29E8               	goto	u351_25
 10565  11E2  1683               	bsf	3,5	;RP0=1, select bank1
 10566  11E3  1303               	bcf	3,6	;RP1=0, select bank1
 10567  11E4  0832               	movf	_P_W_T_S1^(0+128),w
 10568  11E5  1283               	bcf	3,5	;RP0=0, select bank0
 10569  11E6  1303               	bcf	3,6	;RP1=0, select bank0
 10570  11E7  0660               	xorwf	_PwmS1,w
 10571  11E8                     u351_25:
 10572  11E8  1903               	btfsc	3,2
 10573                           
 10574                           ;Pwm_Soft.c: 89:     {;Pwm_Soft.c: 90:         RB4=0;
 10575  11E9  1206               	bcf	6,4	;volatile
 10576                           
 10577                           ;Pwm_Soft.c: 92:     if(PwmS1==PER_T_S1)
 10578  11EA  1683               	bsf	3,5	;RP0=1, select bank1
 10579  11EB  1303               	bcf	3,6	;RP1=0, select bank1
 10580  11EC  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10581  11ED  1283               	bcf	3,5	;RP0=0, select bank0
 10582  11EE  1303               	bcf	3,6	;RP1=0, select bank0
 10583  11EF  0661               	xorwf	_PwmS1+1,w
 10584  11F0  1D03               	skipz
 10585  11F1  29F8               	goto	u352_25
 10586  11F2  1683               	bsf	3,5	;RP0=1, select bank1
 10587  11F3  1303               	bcf	3,6	;RP1=0, select bank1
 10588  11F4  0830               	movf	_PER_T_S1^(0+128),w
 10589  11F5  1283               	bcf	3,5	;RP0=0, select bank0
 10590  11F6  1303               	bcf	3,6	;RP1=0, select bank0
 10591  11F7  0660               	xorwf	_PwmS1,w
 10592  11F8                     u352_25:
 10593  11F8  1D03               	skipz
 10594  11F9  0008               	return
 10595                           
 10596                           ;Pwm_Soft.c: 93:     {;Pwm_Soft.c: 94:         PwmS1 = 0;
 10597  11FA  01E0               	clrf	_PwmS1
 10598  11FB  01E1               	clrf	_PwmS1+1
 10599                           
 10600                           ;Pwm_Soft.c: 95:         RB4=1;
 10601  11FC  1606               	bsf	6,4	;volatile
 10602  11FD  0008               	return
 10603  11FE                     __end_of_Pwm_Signal:
 10604  007E                     btemp	set	126	;btemp
 10605  007E                     wtemp0	set	126
 10606                           
 10607                           	psect	config
 10608                           
 10609                           ;Config register CONFIG1 @ 0x2007
 10610                           ;	Oscillator Selection bits
 10611                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10612                           ;	Watchdog Timer Enable bit
 10613                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10614                           ;	Power-up Timer Enable bit
 10615                           ;	PWRTE = ON, PWRT enabled
 10616                           ;	RE3/MCLR pin function select bit
 10617                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10618                           ;	Code Protection bit
 10619                           ;	CP = OFF, Program memory code protection is disabled
 10620                           ;	Data Code Protection bit
 10621                           ;	CPD = OFF, Data memory code protection is disabled
 10622                           ;	Brown Out Reset Selection bits
 10623                           ;	BOREN = OFF, BOR disabled
 10624                           ;	Internal External Switchover bit
 10625                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10626                           ;	Fail-Safe Clock Monitor Enabled bit
 10627                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10628                           ;	Low Voltage Programming Enable bit
 10629                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10630                           ;	In-Circuit Debugger Mode bit
 10631                           ;	DEBUG = 0x1, unprogrammed default
 10632  2007                     	org	8199
 10633  2007  2CE2               	dw	11490
 10634                           
 10635                           ;Config register CONFIG2 @ 0x2008
 10636                           ;	Brown-out Reset Selection bit
 10637                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10638                           ;	Flash Program Memory Self Write Enable bits
 10639                           ;	WRT = OFF, Write protection off
 10640  2008                     	org	8200
 10641  2008  3FFF               	dw	16383

Data Sizes:
    Strings     238
    Constant    10
    Data        14
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     64      76
    BANK1            80     11      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[20]), STR_38(CODE[21]), STR_37(CODE[10]), STR_36(CODE[17]), 
		 -> STR_35(CODE[9]), STR_34(CODE[17]), STR_33(CODE[18]), STR_32(CODE[17]), 
		 -> STR_31(CODE[17]), Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), STR_23(CODE[2]), 
		 -> STR_22(CODE[13]), STR_21(CODE[2]), STR_20(CODE[8]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[18]), STR_16(CODE[6]), STR_15(CODE[5]), 
		 -> STR_14(CODE[14]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _Pant_Inicio->_LCD_command
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _MEF_Subest_Actualizacion->_LCD_command
    _sprintf->___wmul
    _sprintf->_isdigit
    _Pant_Pulverizacion->_LCD_command
    _Pant_Modos->_LCD_command
    _Pant_Modos->_LCD_date
    _LCD_xy->_LCD_command
    _Pant_Fuga->_LCD_command
    _Pant_Flujo->_LCD_command
    _Adc_Rpm_Read->_Adc
    _Adc_Rpm_Read->___wmul
    _Adc_Pwm_Read->_Adc
    _Adc_Temp_Read->_Adc
    _Adc_Min_Read->_Adc
    ___fttol->_Adc
    ___ftmul->_Adc
    ___ftdiv->_Adc
    ___awtoft->_Adc
    _Proceso_Fin->_LCD_command
    _Pant_Detener->_LCD_command
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_MEF_Subest_Actualizacion
    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _MEF_Subest_Actualizacion->_Salida_Modo_Pulv
    _Salida_Modo_Pulv->_Pwm1
    ___lbtoft->___ftpack
    _Pwm1_init->___fttol
    ___lwtoft->___ftpack
    _Pwm1->___fttol
    _Pant_Val_Act->_sprintf
    _Pant_Temporizador->_sprintf
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _Pant_Pulverizacion->_LCD_array
    _Pant_Modos->_LCD_array
    _LCD_xy->_LCD_command
    _Pant_Fuga->_LCD_array
    _Pant_Flujo->_LCD_array
    _Lec_Adc_Modo_Pulv->_Adc_Rpm_Read
    _Adc_Rpm_Read->___fttol
    ___wmul->___lwdiv
    _Adc_Pwm_Read->___fttol
    _Lec_Adc_Modo_Fuga->_Adc_Min_Read
    _Lec_Adc_Modo_Fuga->_Adc_Temp_Read
    _Lec_Adc_Modo_Flujo->_Adc_Min_Read
    _Lec_Adc_Modo_Flujo->_Adc_Temp_Read
    _Adc_Temp_Read->___fttol
    _Adc_Min_Read->___fttol
    ___fttol->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Proceso_Fin->_LCD_array
    _Pant_Detener->_LCD_array
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Lec_Adc_Modo_Pulv->_Adc_Rpm_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  275549
                           _Adc_init
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
                          _Pwm1_stop
                           _Pwm_init
 ---------------------------------------------------------------------------------
 (1) _Pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0  275233
                                             62 BANK0      2     2      0
                        _Antirrebote
           _MEF_Subest_Actualizacion
                        _Pant_Inicio
                        _Select_Modo
 ---------------------------------------------------------------------------------
 (2) _Select_Modo                                          0     0      0   19450
                        _Antirrebote
                          _Pant_Menu
                      _Pant_Selector
 ---------------------------------------------------------------------------------
 (3) _Pant_Selector                                        0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Pant_Menu                                            0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0   10858
                                              9 BANK0     20    20      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     811
                                              1 BANK0      4     3      1
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (2) _MEF_Subest_Actualizacion                             2     2      0  244925
                                             60 BANK0      2     2      0
                        _Antirrebote
                            _Detener
                        _Fin_Proceso
                        _LCD_command
                 _Lec_Adc_Modo_Flujo
                  _Lec_Adc_Modo_Fuga
                  _Lec_Adc_Modo_Pulv
                         _Pant_Flujo
                          _Pant_Fuga
                         _Pant_Modos
                 _Pant_Pulverizacion
                  _Pant_Temporizador
                       _Pant_Val_Act
                  _Salida_Modo_Flujo
                   _Salida_Modo_Fuga
                   _Salida_Modo_Pulv
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Pulv                                     2     2      0   33615
                                             58 BANK0      2     2      0
                               _Pwm1
                          _Pwm1_init
                            ___ftdiv
                            ___fttol
                           ___lbtoft
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             7     4      3    2897
                                              4 COMMON     1     1      0
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _Pwm1_init                                            2     0      2    9619
                                             55 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             3     0      3    3051
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _Pwm1                                                 3     0      3   11585
                                             55 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Fuga                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Flujo                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Pant_Val_Act                                        22    22      0   14212
                                             28 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Pant_Temporizador                                   22    22      0   14026
                                             28 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    4129
                                             11 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              4 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Pant_Pulverizacion                                   3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Modos                                           0     0      0   10778
                          _LCD_array
                        _LCD_command
                           _LCD_date
                             _LCD_xy
 ---------------------------------------------------------------------------------
 (4) _LCD_xy                                               4     0      4     557
                                              1 BANK0      4     0      4
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Fuga                                            3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Flujo                                           3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Pulv                                    0     0      0   61977
                       _Adc_Min_Read
                       _Adc_Pwm_Read
                       _Adc_Rpm_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Rpm_Read                                        15    15      0   16943
                                             55 BANK0      4     4      0
                                              0 BANK1     11    11      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     752
                                              4 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     857
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _Adc_Pwm_Read                                         3     3      0   15000
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Fuga                                    0     0      0   30034
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Flujo                                   0     0      0   30034
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Temp_Read                                        3     3      0   15000
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _Adc_Min_Read                                         3     3      0   15034
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             13     9      4     987
                                             42 BANK0     13     9      4
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    5048
                                             12 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    5442
                                             27 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3384
                                              8 BANK0      4     1      3
                                _Adc (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2866
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _Adc                                                  7     5      2     105
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _Fin_Proceso                                          4     4      0   10041
                                              9 BANK0      4     4      0
                        _Proceso_Fin
                          _Pwm1_stop
 ---------------------------------------------------------------------------------
 (4) _Proceso_Fin                                          0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Detener                                              4     4      0   10041
                                              9 BANK0      4     4      0
                        _Antirrebote
                       _Pant_Detener
                          _Pwm1_stop
 ---------------------------------------------------------------------------------
 (1) _Pwm1_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Pant_Detener                                         0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (4) _LCD_array                                            8     2      6    9725
                                              1 BANK0      8     2      6
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (5) _LCD_date                                             3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Antirrebote                                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     316
                                              1 BANK0      3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (5) _LCD_command                                          3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0      24
                                              0 COMMON     4     4      0
                         _Pwm_Signal
                         _Task_Ready
 ---------------------------------------------------------------------------------
 (8) _Task_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Pwm_Signal                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_init
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _MEF_Subest_Actualizacion
       _Antirrebote
       _Detener
         _Antirrebote
         _Pant_Detener
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
         _Pwm1_stop
       _Fin_Proceso
         _Proceso_Fin
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
         _Pwm1_stop
       _LCD_command
       _Lec_Adc_Modo_Flujo
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Lec_Adc_Modo_Fuga
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Lec_Adc_Modo_Pulv
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Pwm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Rpm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwdiv
           ___wmul
             ___lwdiv (ARG)
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Pant_Flujo
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Fuga
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Modos
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
         _LCD_date
         _LCD_xy
           _LCD_command
       _Pant_Pulverizacion
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Temporizador
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Pant_Val_Act
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Salida_Modo_Flujo
       _Salida_Modo_Fuga
       _Salida_Modo_Pulv
         _Pwm1
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         _Pwm1_init
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
         ___ftdiv
           _Adc (ARG)
           ___awtoft (ARG)
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           _Adc (ARG)
           ___awtoft (ARG)
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
         ___lwtoft
           ___ftpack
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
     _Select_Modo
       _Antirrebote
       _Pant_Menu
         _LCD_array
           _LCD_command
           _LCD_date
       _Pant_Selector
         _LCD_array
           _LCD_command
           _LCD_date
   _MEF_Init
   _Pines_Init
   _Pwm1_stop
   _Pwm_init

 _ISR (ROOT)
   _Pwm_Signal
   _Task_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Dec 21 01:20:27 2020

               ??_Salida_Modo_Fuga 0074                 ??_Salida_Modo_Pulv 0076  
                                pc 0002                ??_Salida_Modo_Flujo 0074  
                               fsr 0004                ___wmul@multiplicand 0029  
                 Adc_Rpm_Read@cent 00C0                                l231 1686  
                              l233 1688                                l243 16C3  
                              l333 1572                                l249 0528  
                              l329 12BC                                l339 1629  
                              l276 0613                                l613 03CC  
                              l528 1357                                l750 0073  
                              l762 010E                                l771 0169  
                              l764 00E4                                l792 11C3  
                              _GIE 005F                                _RB4 0034  
                              _ISR 0B2F                                _Adc 03AD  
                              _Min 0079                                _Seg 0078  
                              _Rpm 00AE                                _Pwm 0064  
                              fsr0 0004                                indf 0000  
                _MEF_Actualizacion 1663                         _Delay100ms 006A  
                Adc_Rpm_Read@dec_m 00C4                         _Delay200ms 0068  
                             ?_ISR 0070                __end_of_Fin_Proceso 1663  
                             ?_Adc 0074                 ?_MEF_Actualizacion 0070  
                     ___ftdiv@cntr 0044                  Adc_Rpm_Read@valor 00C6  
        __end_of_Salida_Modo_Flujo 10F9                       ___ftdiv@sign 0049  
                Adc_Rpm_Read@uni_m 00C2                               l1011 17DF  
                             l1012 17E7                               l3010 1360  
                             l3012 136E                               l3020 1387  
                             l1095 086A                               l3016 137C  
                             l5000 16A5                               l4130 11B9  
                             l4060 17CA                               l4052 17AF  
                             l4044 179C                               l4212 073D  
                             l4054 17B4                               l4150 122E  
                             l4206 0727                               l4080 1732  
                             l4064 17DD                               l4048 17A3  
                             l4160 0DE0                               l4240 07B4  
                             l4224 077C                               l4312 14AB  
                             l4304 1487                               l4090 1762  
                             l4082 173B                               l4066 17CF  
                             l4410 0709                               l4306 1495  
                             l5026 131F                               l4340 125F  
                             l4084 1744                               l4236 07A4  
                             l4228 078C                               l4252 0824  
                             l4316 14B6                               l4342 125B  
                             l4078 1729                               l4166 0DF6  
                             l4406 0690                               l2806 1132  
                             l4502 0134                               l4344 126B  
                             l4096 1783                               l4088 174D  
                             l4192 0E5A                               l4184 0E3B  
                             l4256 082D                               l4440 1326  
                             l4290 0887                               l4274 0856  
                             l5170 1349                               l4442 132D  
                             l4450 1342                               l5162 16AF  
                             l5172 1754                               l4444 1334  
                             l4524 017E                               l4516 015B  
                             l4508 0136                               l5164 05FF  
                             l4286 0879                               l4278 0866  
                             l4446 133B                               l4550 01C2  
                             l4534 0193                               l4542 01A9  
                             l4526 0182                               l5166 008A  
                             l4470 007A                               l4384 03A1  
                             l4544 01AD                               l5168 0100  
                             l4472 008F                               l4464 006F  
                             l4396 0A0E                               l4564 01D5  
                             l4556 01D1                               l4476 00A3  
                             l4820 051F                               l4812 050B  
                             l4740 0C3B                               l4732 0BED  
                             l4804 12BE                               l4486 00E6  
                             l4566 0049                               l4830 053A  
                             l4920 0A31                               l4568 021C  
                             l4816 0515                               l4904 05F3  
                             l4736 0C14                               l4498 0128  
                             l4842 0557                               l4834 0544  
                             l4826 0530                               l4754 12DD  
                             l4870 059E                               l4862 058A  
                             l4854 0571                               l4838 054E  
                             l4950 1664                               l4848 0569  
                             l4952 1667                               l4890 05D2  
                             l4874 05A7                               l4866 0594  
                             l4794 12AA                               l4954 166C  
                             l4892 05D9                               l4884 05BE  
                             l4964 167A                               l4878 05B0  
                             l4798 12B1                               l4982 169F  
                             l4976 1690                               l4994 16A0  
                             l4988 169F                               STR_1 045B  
                             STR_2 0446                               STR_3 0431  
                             STR_4 045B                               STR_5 0506  
                             STR_6 042F                               STR_7 0506  
                             STR_8 042F                               STR_9 0506  
                     ?_LCD_command 0070                               u5000 0560  
                             u5010 0561                               u4035 0E08  
                             u4115 0749                               u4045 0E1A  
                             u4205 07B5                               u4125 075B  
                             u4055 0E3C                               u4215 07BD  
                             u2615 1374                               u5040 0585  
                             u4065 0E4D                               u4305 086F  
                             u2625 137D                               u5050 0586  
                             u4075 0E5B                               u4155 078D  
                             u4165 0795                               u4245 0834  
                             u3705 0E9B                               u4345 148A  
                             u3715 0EAD                               u5307 1643  
                             u4275 0857                               u2595 1363  
                             _PEIE 005E                               u3725 0EC0  
                             u3805 0DA1                               u5317 165B  
                             u4365 1496                               u5237 0CF2  
                             u3735 0EFE                               u5407 0DC2  
                             u5327 157B                               u4375 14A2  
                             u5247 1438                               u4615 0170  
                             u4720 155B                               u3745 0F11  
                             u5417 1252                               u5337 158C  
                             u4385 14AC                               u5257 13FC  
                             u4730 155C                               u5507 0A9D  
                             u5427 1265                               u3755 0D1A  
                             u5347 15A4                               u3915 17EE  
                             u3835 17A8                               u5267 13C0  
                             u5517 0ED4                               u5437 0A29  
                             u3765 0D2B                               u5357 1776  
                             u5277 03C6                               u5527 0EDC  
                             u3695 0E8A                               u5447 0A3D  
                             u5367 0D64                               u3775 0D3D  
                             u5287 03F0                               u3855 17C3  
                             u4575 0151                               u5537 0F25  
                             u5457 0A56                               u5377 0D6C  
                             u3785 0D50                               u5297 1632  
                             u3945 03B7                               u4770 1617  
                             u5547 0F2D                               u5467 0A65  
                             u5387 0DB5                               u3795 0D8E  
                             u3875 17D6                               u4780 1618  
                             u4860 0C6C                               u5557 0F34  
                             u5477 0A74                               u5397 0DBC  
                             u4845 12CD                               u4870 0C87  
                             u5487 0A81                               u3975 11C4  
                             u5497 0A8E                               u3985 11CB  
                             _TMR1 000E                               _Modo 0065  
                             _Pwm1 090D                               _Temp 00BB  
                             _main 12F4                       ___ftpack@arg 0020  
                     ___ftpack@exp 0023                               btemp 007E  
              ??_MEF_Actualizacion 005E                               start 0010  
               __size_of_LCD_array 006A                      _Estado_Actual 0062  
                  __end_of_Detener 15AC                       ___ftmul@cntr 0039  
                     ___ftmul@sign 003A                 _Pant_Pulverizacion 1404  
                            ??_ISR 0070                              ??_Adc 0020  
                     ___fttol@exp1 0056                       ___fttol@lval 0052  
              __end_of_Antirrebote 1271                   __end_of_LCD_date 0DC8  
                            ?_Pwm1 0057                   __end_of_LCD_init 0AA3  
                 __end_of_MEF_Init 1104                              ?_main 0070  
                            STR_10 042F                              STR_11 0506  
                            STR_12 042F                              STR_20 04EA  
                            STR_21 04D5                              STR_13 0506  
                            STR_14 0488                              STR_30 04FC  
                            STR_22 04CA                              STR_15 04E5  
                            STR_23 0508                              STR_31 04B9  
                            STR_16 04DB                              STR_24 0501  
                            STR_32 04A8                              STR_25 04FC  
                            STR_17 0496                              STR_33 0484  
                            STR_34 04A8                              STR_26 04FC  
                            STR_18 04F2                              STR_27 04FC  
                            STR_19 04F7                              STR_35 04E1  
                            STR_36 04A8                              STR_28 04FC  
                            STR_29 04FC                              STR_37 04D7  
                            STR_38 041C                              STR_39 0470  
                  __end_of___ftdiv 0E80                    __end_of___ftmul 07E2  
              ?_Pant_Pulverizacion 0070                    __end_of___fttol 0890  
                    _LCD_character 12C7                    __end_of___lwdiv 14BB  
                            i1l132 0BBA                              i1l124 0B74  
                            i1l125 0B96                              i1l127 0B94  
                  __end_of___lwmod 138C          __end_of_MEF_Actualizacion 16C4  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISB 0086  
                            _TRISC 0087                      ??_Pant_Inicio 0029  
                            _PwmS1 0060                              _Reset 0076  
                    ___awtoft@sign 002B                    __end_of_dpowers 041C  
           __size_of_Pant_Selector 009D                    __end_of_isdigit 1134  
                    ___ftpack@sign 0024                   __end_of_Adc_init 1222  
                            pclath 000A                    ??_Adc_Temp_Read 0076  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0221                      ?_Pant_Detener 0070  
             ??_Pant_Pulverizacion 0029                      ?_Pant_Val_Act 0070  
                  __initialization 0013                       __end_of_Pwm1 098F  
                     __end_of_main 1325                         _Pant_Flujo 138C  
                           ??_Pwm1 0076                         _Pant_Modos 0AA3  
                   ?_LCD_character 0021                             ??_main 0076  
                    ___fttol@sign1 0051                        _Fin_Proceso 1607  
                    ??_Select_Modo 0076                  __end_of_LCD_array 1792  
                 __end_of_Pwm_init 11B7                             _ADCON0 001F  
                           _ADRESH 001E                             _ADRESL 009E  
       __size_of_Salida_Modo_Flujo 0004                   __end_of___awtoft 1247  
                 __end_of___ftpack 1800                   __end_of___lbtoft 0800  
                       _Pines_Init 1184                             i1l3730 145F  
                           i1l3802 0B5B                             i1l3810 0B9C  
                           i1l3740 1470                             i1l3724 1450  
                           i1l3742 1472                             i1l3816 0BA8  
                           i1l3818 0BAD                             i1l3792 0B43  
              __end_of_Pant_Inicio 0D10                             i1l3796 0B4E  
                           _LCD_xy 1325                             u351_25 11E8  
                           u352_25 11F8                             u360_25 0B6C  
                           u361_25 0B82                   __end_of___lwtoft 1184  
                           u362_25 0B92                      _Act_Variables 00B9  
                   ??_Pant_Detener 0076                          ??_Detener 0029  
                           _TMR1IE 0460                             _TMR1IF 0060  
                       _Task_Ready 1440                             _TMR1ON 0080  
                           _TRISB4 0434                 __size_of_Pant_Fuga 003C  
                 Pant_Inicio@F1334 00C8                   Pant_Inicio@F1336 00A0  
               __size_of_Pant_Menu 004B                     ??_Pant_Val_Act 003C  
                      _Antirrebote 1247         ??_MEF_Subest_Actualizacion 005C  
                           _Output 0077                   _Subestado_Actual 00B6  
                    _Pant_Selector 0BC5                             ___wmul 11B7  
                        ??___ftdiv 0041                 __size_of_Pwm1_init 007D  
               _Lec_Adc_Modo_Flujo 1114                          ??___ftmul 0032  
                        ??___fttol 004E                          ??___lwdiv 0074  
               __size_of_Pwm1_stop 000F                          ??___lwmod 0074  
                     LCD_date@date 0020                         _Pwm_Signal 11DA  
            ___ftmul@f3_as_product 0036                ?_Lec_Adc_Modo_Flujo 0070  
       __size_of_MEF_Actualizacion 0061                          ??_isdigit 0074  
                           saved_w 007E                      ??_Proceso_Fin 0076  
                        ??_sprintf 002F                __end_of_Select_Modo 12C7  
          __end_of__initialization 003E               __size_of_LCD_command 00BA  
                        ?_LCD_date 0070               ??_Lec_Adc_Modo_Flujo 0076  
                        ?_LCD_init 0070                          ?_MEF_Init 0070  
                       ___ftdiv@f1 003E                         ___ftdiv@f2 003B  
                       ___ftdiv@f3 0045                         ___awtoft@c 0028  
                       ___lbtoft@c 0074                         ___ftmul@f1 002C  
                       ___ftmul@f2 002F                         ___fttol@f1 004A  
                   ?_Pant_Selector 0070                     __pcstackCOMMON 0070  
                     __pidataBANK0 03FA                       __pidataBANK1 110C  
                  ??_LCD_character 0022                  _Adc_Min_Read$1525 0057  
                      ?_Pant_Flujo 0070                          LCD_init@i 0023  
                      ?_Pant_Modos 0070                          ?_Adc_init 0070  
                       ___lwtoft@c 0028          __size_of_Salida_Modo_Fuga 0004  
        __size_of_Salida_Modo_Pulv 005B                  __end_of_Pant_Fuga 1404  
                __end_of_Pant_Menu 1551                        _Pant_Inicio 0C62  
                     sprintf@width 0038                  __end_of_Pwm1_init 090D  
                __end_of_Pwm1_stop 1143                        ?_Pines_Init 0070  
                       __pbssBANK0 0060                         __pbssBANK1 00A0  
                          ?_LCD_xy 0021                        ?_Task_Ready 0070  
              __end_of_Proceso_Fin 129C                         ??_LCD_date 0074  
                          LCD_xy@x 0021                            LCD_xy@y 0023  
                       ??_LCD_init 0021                         ??_MEF_Init 0074  
                       __pmaintext 12F4                            ?___wmul 0027  
                        ?_Pwm_init 0070                         __pintentry 0004  
                        ?___awtoft 0028                          ?___ftpack 0020  
                        ?___lbtoft 0028                         ??_Adc_init 0074  
                      ?_Pwm_Signal 0070               __end_of_Pant_Detener 116C  
                        ?___lwtoft 0028                        _Select_Modo 129C  
             __end_of_Pant_Val_Act 1000                         __stringtab 0400  
                          _Delay1s 0066                    __size_of_LCD_xy 0033  
                          _Detener 1551                __size_of_Pant_Flujo 003C  
              __size_of_Pant_Modos 008C                    ??_Pant_Selector 0076  
                          _Mostrar 00BA                  _Pant_Temporizador 14BB  
                          ___ftdiv 0DC8                         ??_Pwm_init 0074  
                  __size_of___wmul 0023                            ___ftmul 070F  
                          ___fttol 0813                            ___lwdiv 147D  
                          ___lwmod 1358                 ?_Pant_Temporizador 0070  
                       ??___awtoft 0076                         ??___ftpack 0025  
                       ??___lbtoft 002B                          _ANSELbits 0188  
              __size_of_Pines_Init 0019                            __ptext1 119D  
                          __ptext2 1184                            __ptext3 10FD  
                          __ptext4 1663                            __ptext5 129C  
                          __ptext6 0BC5                            __ptext7 1506  
                          __ptext8 0C62                            __ptext9 12C7  
                       ??___lwtoft 0074                __size_of_Task_Ready 003D  
             Pant_Inicio@caracter1 002D                       __size_of_ISR 0096  
                     ?_Fin_Proceso 0070                       __size_of_Adc 004D  
                        _T1CONbits 0010                            _dpowers 0412  
                          _isdigit 1126                         _mod_tiempo 0063  
              ??_Pant_Temporizador 003C                        _Proceso_Fin 1271  
                      _Pwm_Seteado 00B7            Pant_Temporizador@buffer 003E  
                          _sprintf 0042                            clrloop0 1105  
             end_of_initialization 003E                          _LCD_array 1728  
            __end_of_Adc_Temp_Read 1728                 Pant_Val_Act@buffer 003E  
      __size_of_Pant_Pulverizacion 003C                __size_of_Pwm_Signal 0024  
                     ?_Antirrebote 0070          __end_of_Pant_Temporizador 1506  
                     __pstringtext 0400                      ?_Adc_Min_Read 0070  
                        _PORTAbits 0005                          _PORTBbits 0006  
                        _PORTCbits 0007                   _Salida_Modo_Fuga 10F9  
                 _Salida_Modo_Pulv 15AC                      LCD_array@date 0025  
                    ?_Adc_Rpm_Read 0070                          _TRISAbits 0085  
                        _TRISBbits 0086                          _TRISCbits 0087  
                    ?_Adc_Pwm_Read 0070                          _Act_PwmS1 00BC  
                       ?_LCD_array 0021                        ___ftdiv@exp 0048  
                   __end_of_LCD_xy 1358                  __size_of_LCD_date 00B8  
                __size_of_LCD_init 008C                  __size_of_MEF_Init 0007  
                      ___ftmul@exp 0035              __size_of_Pant_Detener 0018  
                   ??_Adc_Min_Read 0076                     __end_of___wmul 11DA  
                     ??_Pant_Flujo 0029                       ??_Pant_Modos 0076  
            __size_of_Pant_Val_Act 00C6                 _Adc_Temp_Read$1526 0057  
                   ??_Adc_Rpm_Read 0057                  __size_of_Adc_init 0024  
                       LCD_array@x 0021                         LCD_array@y 0023  
                   ??_Adc_Pwm_Read 0076                start_initialization 0013  
                     ?_Pant_Inicio 0070  __size_of_MEF_Subest_Actualizacion 010A  
                      __end_of_ISR 0BC5                        __end_of_Adc 03FA  
        ?_MEF_Subest_Actualizacion 0070                          _Pant_Fuga 13C8  
                        _Pant_Menu 1506                      ??_LCD_command 0074  
                        _Per_PwmS1 00AB                       ??_Pines_Init 0074  
                         ??_LCD_xy 0076                       ??_Task_Ready 0070  
                        _Pwm1_init 0890                       _Pant_Detener 1154  
               __end_of_Pant_Flujo 13C8                          _Pwm1_stop 1134  
      __size_of_Lec_Adc_Modo_Flujo 0009                 __end_of_Pant_Modos 0B2F  
       __size_of_Pant_Temporizador 004B                       _Pant_Val_Act 0F3A  
                _Lec_Adc_Modo_Fuga 111D                  _Lec_Adc_Modo_Pulv 0800  
                         ??___wmul 0074                         init_fetch0 1143  
                      __pdataBANK0 0066                        __pdataBANK1 00C8  
               ?_Lec_Adc_Modo_Fuga 0070                 ?_Lec_Adc_Modo_Pulv 0070  
                __size_of_Pwm_init 001A                       ??_Pwm_Signal 0070  
            __end_of_LCD_character 12F4                 __end_of_Pines_Init 119D  
                __size_of___awtoft 0025                  __size_of___ftpack 006E  
                __size_of___lbtoft 001E                 __end_of_Task_Ready 147D  
              ??_Lec_Adc_Modo_Fuga 0076                       ?_Select_Modo 0070  
                      __pbssCOMMON 0076                ??_Lec_Adc_Modo_Pulv 0076  
                        ___latbits 0002                  __size_of___lwtoft 0018  
                    __pcstackBANK0 0020                      __pcstackBANK1 00BD  
             __size_of_Fin_Proceso 005C                         ISR@f_pwmS1 0073  
                     _isdigit$1337 0074                         ?_Pant_Fuga 0070  
                       ?_Pant_Menu 0070                        ??_LCD_array 0027  
                         ?_Detener 0070                        sprintf@flag 0037  
                      sprintf@prec 0033                         ?_Pwm1_init 0057  
                       ?_Pwm1_stop 0070                 __end_of_Pwm_Signal 11FE  
              __end_of_LCD_command 0F3A          __end_of_Lec_Adc_Modo_Fuga 1126  
        __end_of_Lec_Adc_Modo_Pulv 0813                   ___lwdiv@dividend 0022  
             __size_of_Antirrebote 002A                           ?___ftdiv 003B  
                         ?___ftmul 002C                           ?___fttol 004A  
                         ?___lwdiv 0020                           ?___lwmod 0027  
                        _freqPwmS1 00B4                           ?_isdigit 0070  
                     ?_Proceso_Fin 0070                   ___lwdiv@quotient 0025  
                         ?_sprintf 002B               __end_of_Adc_Min_Read 070F  
              Pant_Inicio@caracter 0035                         Adc@channel 0022  
                interrupt_function 0004                LCD_character@adress 0023  
                   ___wmul@product 0074                           _LCD_date 0D10  
                         _LCD_init 0A17                           _MEF_Init 10FD  
                        clear_ram0 1104           __end_of_Salida_Modo_Fuga 10FD  
         __end_of_Salida_Modo_Pulv 1607               __end_of_Adc_Rpm_Read 03AD  
             __end_of_Adc_Pwm_Read 0A17                           Detener@i 002C  
            __end_of_Pant_Selector 0C62                           _PER_T_S1 00B0  
                         _Adc_init 11FE                         _ADCON0bits 001F  
                      __stringbase 0412                         _ADCON1bits 009F  
                ___wmul@multiplier 0027              _Salida_Modo_Pulv$1522 005A  
                     Fin_Proceso@i 002C                           _P_W_T_S1 00B2  
             __size_of_Pant_Inicio 00AE                        ??_Pant_Fuga 0029  
                      ??_Pant_Menu 0076                           Pwm1@duty 0057  
                      _LCD_command 0E80         __end_of_Pant_Pulverizacion 1440  
                    Adc@convertion 0023                        ??_Pwm1_init 0076  
                 __size_of_Detener 005B                        ??_Pwm1_stop 0074  
       __size_of_Lec_Adc_Modo_Fuga 0009                           _Pw_PwmS1 00A8  
       __size_of_Lec_Adc_Modo_Pulv 0013   __end_of_MEF_Subest_Actualizacion 0614  
                         _Pwm_init 119D                   __size_of___ftdiv 00B8  
                 __size_of___ftmul 00D3                   __size_of___fttol 007D  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
                         ___awtoft 1222                           ___ftpack 1792  
                         ___lbtoft 07E2                 __end_of__stringtab 0412  
                         ___lwtoft 116C                         _ANSELHbits 0189  
           __size_of_Adc_Temp_Read 0064                         sprintf@val 0035  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0020  
                  ___lwdiv@counter 0024                           __ptext10 050A  
                         __ptext11 15AC                           __ptext20 0042  
                         __ptext12 07E2                           __ptext21 1126  
                         __ptext13 0890                           __ptext30 11B7  
                         __ptext22 1358                           __ptext14 116C  
                         __ptext31 147D                           __ptext23 1404  
                         __ptext15 090D                           __ptext40 1222  
                         __ptext32 098F                           __ptext24 0AA3  
                         __ptext16 10F9                           __ptext41 1792  
                         __ptext33 111D                           __ptext25 1325  
                         __ptext17 10F5                           __ptext50 1247  
                         __ptext42 03AD                           __ptext34 1114  
                         __ptext26 13C8                           __ptext18 0F3A  
                         __ptext51 0A17                           __ptext43 1607  
                         __ptext35 16C4                           __ptext27 138C  
                         __ptext19 14BB                           __ptext52 0E80  
                         __ptext44 1271                           __ptext36 0614  
                         __ptext28 0800                           __ptext53 11FE  
                         __ptext45 1551                           __ptext37 0813  
                         __ptext29 0221                           __ptext54 0B2F  
                         __ptext46 1134                           __ptext38 070F  
                         __ptext55 1440                           __ptext47 1154  
                         __ptext39 0DC8                           __ptext56 11DA  
                         __ptext48 1728                           __ptext49 0D10  
                _Adc_Rpm_Read$1523 00BD               __size_of_Select_Modo 002B  
                 __size_of_sprintf 01DF                      __size_of_Pwm1 0082  
                     _Temporizador 00B8                      __size_of_main 0031  
            LCD_character@caracter 0021                     LCD_character@i 0024  
            __size_of_Adc_Min_Read 00FB                           init_ram0 1147  
                         isdigit@c 0075               __size_of_Proceso_Fin 002B  
                         intlevel1 0000                          sprintf@ap 0034  
                        sprintf@sp 003B         __end_of_Lec_Adc_Modo_Flujo 111D  
            __size_of_Adc_Rpm_Read 018C              __size_of_Adc_Pwm_Read 0088  
                 ___lwmod@dividend 0029                      _Adc_Temp_Read 16C4  
                        stringcode 040A                  _Adc_Pwm_Read$1524 0057  
                     _Adc_Min_Read 0614           _MEF_Subest_Actualizacion 050A  
                    ??_Fin_Proceso 0029                           sprintf@c 003A  
                         sprintf@f 002B                    ___lwmod@divisor 0027  
                  ___lwmod@counter 0074                       _Adc_Rpm_Read 0221  
                         stringtab 0400                       _Adc_Pwm_Read 098F  
                       _WDTCONbits 0105                  _Salida_Modo_Flujo 10F5  
                   ?_Adc_Temp_Read 0070                Pwm1_init@frecuencia 0057  
           __size_of_LCD_character 002D                 ?_Salida_Modo_Flujo 0070  
                    ??_Antirrebote 0020                     LCD_command@cmd 0020  
                ?_Salida_Modo_Fuga 0070                  ?_Salida_Modo_Pulv 0070  
