

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Dec 18 19:06:16 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.20
    76                           ; Generated 09/04/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F886 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  0107                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  0185                     	;# 
   180  0187                     	;# 
   181  0188                     	;# 
   182  0189                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  0105                     	;# 
   247  0107                     	;# 
   248  0108                     	;# 
   249  0109                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0185                     	;# 
   256  0187                     	;# 
   257  0188                     	;# 
   258  0189                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0089                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  008F                     	;# 
   304  0090                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  0105                     	;# 
   323  0107                     	;# 
   324  0108                     	;# 
   325  0109                     	;# 
   326  010C                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  0185                     	;# 
   332  0187                     	;# 
   333  0188                     	;# 
   334  0189                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  000E                     	;# 
   352  000F                     	;# 
   353  0010                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001D                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  0081                     	;# 
   372  0085                     	;# 
   373  0086                     	;# 
   374  0087                     	;# 
   375  0089                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  0105                     	;# 
   399  0107                     	;# 
   400  0108                     	;# 
   401  0109                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0187                     	;# 
   409  0188                     	;# 
   410  0189                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0009                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  000E                     	;# 
   428  000F                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001D                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  0081                     	;# 
   448  0085                     	;# 
   449  0086                     	;# 
   450  0087                     	;# 
   451  0089                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  008F                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  0105                     	;# 
   475  0107                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  0185                     	;# 
   484  0187                     	;# 
   485  0188                     	;# 
   486  0189                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000E                     	;# 
   504  000F                     	;# 
   505  0010                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0014                     	;# 
   510  0015                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  001D                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  0081                     	;# 
   524  0085                     	;# 
   525  0086                     	;# 
   526  0087                     	;# 
   527  0089                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  0105                     	;# 
   551  0107                     	;# 
   552  0108                     	;# 
   553  0109                     	;# 
   554  010C                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  0185                     	;# 
   560  0187                     	;# 
   561  0188                     	;# 
   562  0189                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  0000                     	;# 
   566  0001                     	;# 
   567  0002                     	;# 
   568  0003                     	;# 
   569  0004                     	;# 
   570  0005                     	;# 
   571  0006                     	;# 
   572  0007                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  000E                     	;# 
   580  000F                     	;# 
   581  0010                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001E                     	;# 
   598  001F                     	;# 
   599  0081                     	;# 
   600  0085                     	;# 
   601  0086                     	;# 
   602  0087                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0092                     	;# 
   611  0093                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  009F                     	;# 
   626  0105                     	;# 
   627  0107                     	;# 
   628  0108                     	;# 
   629  0109                     	;# 
   630  010C                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0185                     	;# 
   636  0187                     	;# 
   637  0188                     	;# 
   638  0189                     	;# 
   639  018C                     	;# 
   640  018D                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  000E                     	;# 
   656  000F                     	;# 
   657  0010                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0013                     	;# 
   661  0014                     	;# 
   662  0015                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001B                     	;# 
   671  001C                     	;# 
   672  001D                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  0081                     	;# 
   676  0085                     	;# 
   677  0086                     	;# 
   678  0087                     	;# 
   679  0089                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008F                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  009F                     	;# 
   702  0105                     	;# 
   703  0107                     	;# 
   704  0108                     	;# 
   705  0109                     	;# 
   706  010C                     	;# 
   707  010C                     	;# 
   708  010D                     	;# 
   709  010E                     	;# 
   710  010F                     	;# 
   711  0185                     	;# 
   712  0187                     	;# 
   713  0188                     	;# 
   714  0189                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000E                     	;# 
   732  000F                     	;# 
   733  0010                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0014                     	;# 
   738  0015                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0017                     	;# 
   742  0018                     	;# 
   743  0019                     	;# 
   744  001A                     	;# 
   745  001B                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  0089                     	;# 
   756  008C                     	;# 
   757  008D                     	;# 
   758  008E                     	;# 
   759  008F                     	;# 
   760  0090                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0094                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  009F                     	;# 
   778  0105                     	;# 
   779  0107                     	;# 
   780  0108                     	;# 
   781  0109                     	;# 
   782  010C                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010F                     	;# 
   787  0185                     	;# 
   788  0187                     	;# 
   789  0188                     	;# 
   790  0189                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  000E                     	;# 
   808  000F                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001D                     	;# 
   825  001E                     	;# 
   826  001F                     	;# 
   827  0081                     	;# 
   828  0085                     	;# 
   829  0086                     	;# 
   830  0087                     	;# 
   831  0089                     	;# 
   832  008C                     	;# 
   833  008D                     	;# 
   834  008E                     	;# 
   835  008F                     	;# 
   836  0090                     	;# 
   837  0091                     	;# 
   838  0092                     	;# 
   839  0093                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0094                     	;# 
   843  0095                     	;# 
   844  0096                     	;# 
   845  0097                     	;# 
   846  0098                     	;# 
   847  0099                     	;# 
   848  009A                     	;# 
   849  009B                     	;# 
   850  009C                     	;# 
   851  009D                     	;# 
   852  009E                     	;# 
   853  009F                     	;# 
   854  0105                     	;# 
   855  0107                     	;# 
   856  0108                     	;# 
   857  0109                     	;# 
   858  010C                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  010F                     	;# 
   863  0185                     	;# 
   864  0187                     	;# 
   865  0188                     	;# 
   866  0189                     	;# 
   867  018C                     	;# 
   868  018D                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0009                     	;# 
   878  000A                     	;# 
   879  000B                     	;# 
   880  000C                     	;# 
   881  000D                     	;# 
   882  000E                     	;# 
   883  000E                     	;# 
   884  000F                     	;# 
   885  0010                     	;# 
   886  0011                     	;# 
   887  0012                     	;# 
   888  0013                     	;# 
   889  0014                     	;# 
   890  0015                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0017                     	;# 
   894  0018                     	;# 
   895  0019                     	;# 
   896  001A                     	;# 
   897  001B                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  001D                     	;# 
   901  001E                     	;# 
   902  001F                     	;# 
   903  0081                     	;# 
   904  0085                     	;# 
   905  0086                     	;# 
   906  0087                     	;# 
   907  0089                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  008E                     	;# 
   911  008F                     	;# 
   912  0090                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0093                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  009F                     	;# 
   930  0105                     	;# 
   931  0107                     	;# 
   932  0108                     	;# 
   933  0109                     	;# 
   934  010C                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  010F                     	;# 
   939  0185                     	;# 
   940  0187                     	;# 
   941  0188                     	;# 
   942  0189                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  0000                     	;# 
   946  0001                     	;# 
   947  0002                     	;# 
   948  0003                     	;# 
   949  0004                     	;# 
   950  0005                     	;# 
   951  0006                     	;# 
   952  0007                     	;# 
   953  0009                     	;# 
   954  000A                     	;# 
   955  000B                     	;# 
   956  000C                     	;# 
   957  000D                     	;# 
   958  000E                     	;# 
   959  000E                     	;# 
   960  000F                     	;# 
   961  0010                     	;# 
   962  0011                     	;# 
   963  0012                     	;# 
   964  0013                     	;# 
   965  0014                     	;# 
   966  0015                     	;# 
   967  0015                     	;# 
   968  0016                     	;# 
   969  0017                     	;# 
   970  0018                     	;# 
   971  0019                     	;# 
   972  001A                     	;# 
   973  001B                     	;# 
   974  001B                     	;# 
   975  001C                     	;# 
   976  001D                     	;# 
   977  001E                     	;# 
   978  001F                     	;# 
   979  0081                     	;# 
   980  0085                     	;# 
   981  0086                     	;# 
   982  0087                     	;# 
   983  0089                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  008F                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0094                     	;# 
   995  0095                     	;# 
   996  0096                     	;# 
   997  0097                     	;# 
   998  0098                     	;# 
   999  0099                     	;# 
  1000  009A                     	;# 
  1001  009B                     	;# 
  1002  009C                     	;# 
  1003  009D                     	;# 
  1004  009E                     	;# 
  1005  009F                     	;# 
  1006  0105                     	;# 
  1007  0107                     	;# 
  1008  0108                     	;# 
  1009  0109                     	;# 
  1010  010C                     	;# 
  1011  010C                     	;# 
  1012  010D                     	;# 
  1013  010E                     	;# 
  1014  010F                     	;# 
  1015  0185                     	;# 
  1016  0187                     	;# 
  1017  0188                     	;# 
  1018  0189                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021                           
  1022                           	psect	idataCOMMON
  1023  0801                     __pidataCOMMON:
  1024                           
  1025                           ;initializer for _Delay100ms
  1026  0801  34E8               	retlw	232
  1027  0802  3403               	retlw	3
  1028                           
  1029                           	psect	idataBANK0
  1030  04FC                     __pidataBANK0:	
  1031                           ;initializer for _Delay1s
  1032                           
  1033  04FC  3410               	retlw	16
  1034  04FD  3427               	retlw	39
  1035                           
  1036                           ;initializer for _Delay200ms
  1037  04FE  34D0               	retlw	208
  1038  04FF  3407               	retlw	7
  1039                           
  1040                           	psect	idataBANK1
  1041  13B1                     __pidataBANK1:
  1042                           
  1043                           ;initializer for Pant_Inicio@F1330
  1044  13B1  3406               	retlw	6
  1045  13B2  3409               	retlw	9
  1046  13B3  3409               	retlw	9
  1047  13B4  3406               	retlw	6
  1048  13B5  3400               	retlw	0
  1049  13B6  3400               	retlw	0
  1050  13B7  3400               	retlw	0
  1051  13B8  3400               	retlw	0
  1052                           
  1053                           	psect	stringtext
  1054  0500                     __pstringtext:
  1055  0500                     stringtab:
  1056  0500                     __stringtab:
  1057                           
  1058                           ;	String table - string pointers are 2 bytes each
  1059  0500  1BFF               	btfsc	btemp+1,7
  1060  0501  2D0A               	ljmp	stringcode
  1061  0502  1383               	bcf	3,7
  1062  0503  187F               	btfsc	btemp+1,0
  1063  0504  1783               	bsf	3,7
  1064  0505  0800               	movf	0,w
  1065  0506  0A84               	incf	4,f
  1066  0507  1903               	skipnz
  1067  0508  0AFF               	incf	btemp+1,f
  1068  0509  0008               	return
  1069  050A                     stringcode:
  1070  050A  087F               	movf	btemp+1,w
  1071  050B  397F               	andlw	127
  1072  050C  008A               	movwf	10
  1073  050D  0804               	movf	4,w
  1074  050E  0A84               	incf	4,f
  1075  050F  1903               	skipnz
  1076  0510  0AFF               	incf	btemp+1,f
  1077  0511  0082               	movwf	2
  1078  0512                     __stringbase:
  1079  0512                     __end_of__stringtab:
  1080  0512                     _dpowers:
  1081  0512  3401               	retlw	1
  1082  0513  3400               	retlw	0
  1083  0514  340A               	retlw	10
  1084  0515  3400               	retlw	0
  1085  0516  3464               	retlw	100
  1086  0517  3400               	retlw	0
  1087  0518  34E8               	retlw	232
  1088  0519  3403               	retlw	3
  1089  051A  3410               	retlw	16
  1090  051B  3427               	retlw	39
  1091  051C                     __end_of_dpowers:
  1092  000E                     _TMR1	set	14
  1093  001E                     _ADRESH	set	30
  1094  001F                     _ADCON0	set	31
  1095  001F                     _ADCON0bits	set	31
  1096  0010                     _T1CONbits	set	16
  1097  0007                     _PORTCbits	set	7
  1098  0006                     _PORTBbits	set	6
  1099  0005                     _PORTAbits	set	5
  1100  0007                     _PORTC	set	7
  1101  0006                     _PORTB	set	6
  1102  0005                     _PORTA	set	5
  1103  0034                     _RB4	set	52
  1104  005F                     _GIE	set	95
  1105  005E                     _PEIE	set	94
  1106  0080                     _TMR1ON	set	128
  1107  0060                     _TMR1IF	set	96
  1108  009E                     _ADRESL	set	158
  1109  009F                     _ADCON1bits	set	159
  1110  0087                     _TRISCbits	set	135
  1111  0086                     _TRISBbits	set	134
  1112  0087                     _TRISC	set	135
  1113  0086                     _TRISB	set	134
  1114  0085                     _TRISAbits	set	133
  1115  0434                     _TRISB4	set	1076
  1116  0460                     _TMR1IE	set	1120
  1117  0105                     _WDTCONbits	set	261
  1118  0188                     _ANSELbits	set	392
  1119  0189                     _ANSELHbits	set	393
  1120  051C                     STR_38:
  1121  051C  3420               	retlw	32	;' '
  1122  051D  3420               	retlw	32	;' '
  1123  051E  3420               	retlw	32	;' '
  1124  051F  3420               	retlw	32	;' '
  1125  0520  3420               	retlw	32	;' '
  1126  0521  3420               	retlw	32	;' '
  1127  0522  3420               	retlw	32	;' '
  1128  0523  3420               	retlw	32	;' '
  1129  0524  3420               	retlw	32	;' '
  1130  0525  3420               	retlw	32	;' '
  1131  0526  3420               	retlw	32	;' '
  1132  0527  3420               	retlw	32	;' '
  1133  0528  3420               	retlw	32	;' '
  1134  0529  3420               	retlw	32	;' '
  1135  052A  3420               	retlw	32	;' '
  1136  052B  3420               	retlw	32	;' '
  1137  052C  3420               	retlw	32	;' '
  1138  052D  3420               	retlw	32	;' '
  1139  052E  3420               	retlw	32	;' '
  1140  052F  3420               	retlw	32	;' '
  1141  0530  3400               	retlw	0
  1142  0531                     STR_3:
  1143  0531  3420               	retlw	32	;' '
  1144  0532  3420               	retlw	32	;' '
  1145  0533  3420               	retlw	32	;' '
  1146  0534  3444               	retlw	68	;'D'
  1147  0535  3445               	retlw	69	;'E'
  1148  0536  3420               	retlw	32	;' '
  1149  0537  3449               	retlw	73	;'I'
  1150  0538  344E               	retlw	78	;'N'
  1151  0539  3459               	retlw	89	;'Y'
  1152  053A  3445               	retlw	69	;'E'
  1153  053B  3443               	retlw	67	;'C'
  1154  053C  3454               	retlw	84	;'T'
  1155  053D  344F               	retlw	79	;'O'
  1156  053E  3452               	retlw	82	;'R'
  1157  053F  3445               	retlw	69	;'E'
  1158  0540  3453               	retlw	83	;'S'
  1159  0541  3420               	retlw	32	;' '
  1160  0542  3420               	retlw	32	;' '
  1161  0543  3420               	retlw	32	;' '
  1162  0544  3420               	retlw	32	;' '
  1163  0545  3400               	retlw	0
  1164  0546                     STR_2:
  1165  0546  3450               	retlw	80	;'P'
  1166  0547  3452               	retlw	82	;'R'
  1167  0548  344F               	retlw	79	;'O'
  1168  0549  3442               	retlw	66	;'B'
  1169  054A  3441               	retlw	65	;'A'
  1170  054B  3444               	retlw	68	;'D'
  1171  054C  344F               	retlw	79	;'O'
  1172  054D  3452               	retlw	82	;'R'
  1173  054E  3420               	retlw	32	;' '
  1174  054F  3441               	retlw	65	;'A'
  1175  0550  3455               	retlw	85	;'U'
  1176  0551  3454               	retlw	84	;'T'
  1177  0552  344F               	retlw	79	;'O'
  1178  0553  344D               	retlw	77	;'M'
  1179  0554  344F               	retlw	79	;'O'
  1180  0555  3454               	retlw	84	;'T'
  1181  0556  3452               	retlw	82	;'R'
  1182  0557  3449               	retlw	73	;'I'
  1183  0558  345A               	retlw	90	;'Z'
  1184  0559  3420               	retlw	32	;' '
  1185  055A  3400               	retlw	0
  1186  055B                     STR_1:
  1187  055B  343D               	retlw	61	;'='
  1188  055C  343D               	retlw	61	;'='
  1189  055D  343D               	retlw	61	;'='
  1190  055E  343D               	retlw	61	;'='
  1191  055F  343D               	retlw	61	;'='
  1192  0560  343D               	retlw	61	;'='
  1193  0561  343D               	retlw	61	;'='
  1194  0562  343D               	retlw	61	;'='
  1195  0563  343D               	retlw	61	;'='
  1196  0564  343D               	retlw	61	;'='
  1197  0565  343D               	retlw	61	;'='
  1198  0566  343D               	retlw	61	;'='
  1199  0567  343D               	retlw	61	;'='
  1200  0568  343D               	retlw	61	;'='
  1201  0569  343D               	retlw	61	;'='
  1202  056A  343D               	retlw	61	;'='
  1203  056B  343D               	retlw	61	;'='
  1204  056C  343D               	retlw	61	;'='
  1205  056D  343D               	retlw	61	;'='
  1206  056E  343D               	retlw	61	;'='
  1207  056F  3400               	retlw	0
  1208  0570                     STR_39:
  1209  0570  3420               	retlw	32	;' '
  1210  0571  3450               	retlw	80	;'P'
  1211  0572  3472               	retlw	114	;'r'
  1212  0573  346F               	retlw	111	;'o'
  1213  0574  3463               	retlw	99	;'c'
  1214  0575  3465               	retlw	101	;'e'
  1215  0576  3473               	retlw	115	;'s'
  1216  0577  346F               	retlw	111	;'o'
  1217  0578  3420               	retlw	32	;' '
  1218  0579  3446               	retlw	70	;'F'
  1219  057A  3469               	retlw	105	;'i'
  1220  057B  346E               	retlw	110	;'n'
  1221  057C  3461               	retlw	97	;'a'
  1222  057D  346C               	retlw	108	;'l'
  1223  057E  3469               	retlw	105	;'i'
  1224  057F  347A               	retlw	122	;'z'
  1225  0580  3461               	retlw	97	;'a'
  1226  0581  3464               	retlw	100	;'d'
  1227  0582  346F               	retlw	111	;'o'
  1228  0583  3400               	retlw	0
  1229  0584                     STR_33:
  1230  0584  3420               	retlw	32	;' '
  1231  0585  3420               	retlw	32	;' '
  1232  0586  3420               	retlw	32	;' '
  1233  0587  3420               	retlw	32	;' '
  1234  0588  3450               	retlw	80	;'P'
  1235  0589  3455               	retlw	85	;'U'
  1236  058A  344C               	retlw	76	;'L'
  1237  058B  3456               	retlw	86	;'V'
  1238  058C  3445               	retlw	69	;'E'
  1239  058D  3452               	retlw	82	;'R'
  1240  058E  3449               	retlw	73	;'I'
  1241  058F  345A               	retlw	90	;'Z'
  1242  0590  3441               	retlw	65	;'A'
  1243  0591  3443               	retlw	67	;'C'
  1244  0592  3449               	retlw	73	;'I'
  1245  0593  344F               	retlw	79	;'O'
  1246  0594  344E               	retlw	78	;'N'
  1247  0595  3400               	retlw	0
  1248  0596                     STR_17:
  1249  0596  344C               	retlw	76	;'L'
  1250  0597  3449               	retlw	73	;'I'
  1251  0598  344D               	retlw	77	;'M'
  1252  0599  3450               	retlw	80	;'P'
  1253  059A  342E               	retlw	46	;'.'
  1254  059B  3420               	retlw	32	;' '
  1255  059C  3455               	retlw	85	;'U'
  1256  059D  344C               	retlw	76	;'L'
  1257  059E  3454               	retlw	84	;'T'
  1258  059F  3452               	retlw	82	;'R'
  1259  05A0  3441               	retlw	65	;'A'
  1260  05A1  3453               	retlw	83	;'S'
  1261  05A2  344F               	retlw	79	;'O'
  1262  05A3  344E               	retlw	78	;'N'
  1263  05A4  3449               	retlw	73	;'I'
  1264  05A5  3444               	retlw	68	;'D'
  1265  05A6  344F               	retlw	79	;'O'
  1266  05A7  3400               	retlw	0
  1267  05A8                     STR_32:
  1268  05A8  3420               	retlw	32	;' '
  1269  05A9  3420               	retlw	32	;' '
  1270  05AA  3420               	retlw	32	;' '
  1271  05AB  3420               	retlw	32	;' '
  1272  05AC  344D               	retlw	77	;'M'
  1273  05AD  346F               	retlw	111	;'o'
  1274  05AE  3464               	retlw	100	;'d'
  1275  05AF  346F               	retlw	111	;'o'
  1276  05B0  3420               	retlw	32	;' '
  1277  05B1  3450               	retlw	80	;'P'
  1278  05B2  3472               	retlw	114	;'r'
  1279  05B3  3475               	retlw	117	;'u'
  1280  05B4  3465               	retlw	101	;'e'
  1281  05B5  3462               	retlw	98	;'b'
  1282  05B6  3461               	retlw	97	;'a'
  1283  05B7  343A               	retlw	58	;':'
  1284  05B8  3400               	retlw	0
  1285  05B9                     STR_31:
  1286  05B9  3450               	retlw	80	;'P'
  1287  05BA  3472               	retlw	114	;'r'
  1288  05BB  346F               	retlw	111	;'o'
  1289  05BC  3463               	retlw	99	;'c'
  1290  05BD  3465               	retlw	101	;'e'
  1291  05BE  3473               	retlw	115	;'s'
  1292  05BF  346F               	retlw	111	;'o'
  1293  05C0  3420               	retlw	32	;' '
  1294  05C1  3444               	retlw	68	;'D'
  1295  05C2  3465               	retlw	101	;'e'
  1296  05C3  3474               	retlw	116	;'t'
  1297  05C4  3465               	retlw	101	;'e'
  1298  05C5  346E               	retlw	110	;'n'
  1299  05C6  3469               	retlw	105	;'i'
  1300  05C7  3464               	retlw	100	;'d'
  1301  05C8  346F               	retlw	111	;'o'
  1302  05C9  3400               	retlw	0
  1303  05CA                     STR_22:
  1304  05CA  3454               	retlw	84	;'T'
  1305  05CB  3445               	retlw	69	;'E'
  1306  05CC  344D               	retlw	77	;'M'
  1307  05CD  3450               	retlw	80	;'P'
  1308  05CE  3445               	retlw	69	;'E'
  1309  05CF  3452               	retlw	82	;'R'
  1310  05D0  3441               	retlw	65	;'A'
  1311  05D1  3454               	retlw	84	;'T'
  1312  05D2  3455               	retlw	85	;'U'
  1313  05D3  3452               	retlw	82	;'R'
  1314  05D4  3441               	retlw	65	;'A'
  1315  05D5  343A               	retlw	58	;':'
  1316  05D6  3400               	retlw	0
  1317  05D7                     STR_37:
  1318  05D7  3420               	retlw	32	;' '
  1319  05D8  3420               	retlw	32	;' '
  1320  05D9  3420               	retlw	32	;' '
  1321  05DA  3420               	retlw	32	;' '
  1322  05DB  3446               	retlw	70	;'F'
  1323  05DC  344C               	retlw	76	;'L'
  1324  05DD  3455               	retlw	85	;'U'
  1325  05DE  344A               	retlw	74	;'J'
  1326  05DF  344F               	retlw	79	;'O'
  1327  05E0  3400               	retlw	0
  1328  05E1                     STR_35:
  1329  05E1  3420               	retlw	32	;' '
  1330  05E2  3420               	retlw	32	;' '
  1331  05E3  3420               	retlw	32	;' '
  1332  05E4  3420               	retlw	32	;' '
  1333  05E5  3446               	retlw	70	;'F'
  1334  05E6  3455               	retlw	85	;'U'
  1335  05E7  3447               	retlw	71	;'G'
  1336  05E8  3441               	retlw	65	;'A'
  1337  05E9  3400               	retlw	0
  1338  05EA                     STR_20:
  1339  05EA  3454               	retlw	84	;'T'
  1340  05EB  3449               	retlw	73	;'I'
  1341  05EC  3445               	retlw	69	;'E'
  1342  05ED  344D               	retlw	77	;'M'
  1343  05EE  3450               	retlw	80	;'P'
  1344  05EF  344F               	retlw	79	;'O'
  1345  05F0  343A               	retlw	58	;':'
  1346  05F1  3400               	retlw	0
  1347  05F2                     STR_18:
  1348  05F2  3452               	retlw	82	;'R'
  1349  05F3  3450               	retlw	80	;'P'
  1350  05F4  344D               	retlw	77	;'M'
  1351  05F5  343A               	retlw	58	;':'
  1352  05F6  3400               	retlw	0
  1353  05F7                     STR_19:
  1354  05F7  3450               	retlw	80	;'P'
  1355  05F8  3457               	retlw	87	;'W'
  1356  05F9  344D               	retlw	77	;'M'
  1357  05FA  343A               	retlw	58	;':'
  1358  05FB  3400               	retlw	0
  1359  05FC                     STR_25:
  1360  05FC  3425               	retlw	37	;'%'
  1361  05FD  3430               	retlw	48	;'0'
  1362  05FE  3432               	retlw	50	;'2'
  1363  05FF  3464               	retlw	100	;'d'
  1364  0600  3400               	retlw	0
  1365  0601                     STR_24:
  1366  0601  3425               	retlw	37	;'%'
  1367  0602  3430               	retlw	48	;'0'
  1368  0603  3435               	retlw	53	;'5'
  1369  0604  3475               	retlw	117	;'u'
  1370  0605  3400               	retlw	0
  1371  0606                     STR_5:
  1372  0606  343E               	retlw	62	;'>'
  1373  0607  3400               	retlw	0
  1374  0608                     STR_23:
  1375  0608  3443               	retlw	67	;'C'
  1376  0609  3400               	retlw	0
  1377  052F                     
  1378                           	psect	cinit
  1379  0013                     start_initialization:	
  1380                           ; #config settings
  1381                           
  1382  0013                     __initialization:
  1383                           
  1384                           ; Initialize objects allocated to BANK1
  1385  0013  1383               	bcf	3,7	;select IRP bank0
  1386  0014  30C3               	movlw	low (__pdataBANK1+8)
  1387  0015  00FD               	movwf	btemp+-1
  1388  0016  3013               	movlw	high __pidataBANK1
  1389  0017  00FE               	movwf	btemp
  1390  0018  30B1               	movlw	low __pidataBANK1
  1391  0019  00FF               	movwf	btemp+1
  1392  001A  30BB               	movlw	low __pdataBANK1
  1393  001B  0084               	movwf	4
  1394  001C  160A  118A  23DD  120A  118A  	fcall	init_ram0
  1395                           
  1396                           ; Initialize objects allocated to BANK0
  1397  0021  306F               	movlw	low (__pdataBANK0+4)
  1398  0022  00FD               	movwf	btemp+-1
  1399  0023  3004               	movlw	high __pidataBANK0
  1400  0024  00FE               	movwf	btemp
  1401  0025  30FC               	movlw	low __pidataBANK0
  1402  0026  00FF               	movwf	btemp+1
  1403  0027  306B               	movlw	low __pdataBANK0
  1404  0028  0084               	movwf	4
  1405  0029  160A  118A  23DD  120A  118A  	fcall	init_ram0
  1406                           
  1407                           ; Initialize objects allocated to COMMON
  1408  002E  120A  158A  2001  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1409  0033  00F8               	movwf	__pdataCOMMON& (0+127)
  1410  0034  120A  158A  2002  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  1411  0039  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  1412                           
  1413                           ; Clear objects allocated to BANK1
  1414  003A  30A0               	movlw	low __pbssBANK1
  1415  003B  0084               	movwf	4
  1416  003C  30BB               	movlw	low (__pbssBANK1+27)
  1417  003D  160A  118A  23A9  120A  118A  	fcall	clear_ram0
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  0042  3061               	movlw	low __pbssBANK0
  1421  0043  0084               	movwf	4
  1422  0044  306B               	movlw	low (__pbssBANK0+10)
  1423  0045  160A  118A  23A9   	fcall	clear_ram0
  1424                           
  1425                           ; Clear objects allocated to COMMON
  1426  0048  01FA               	clrf	__pbssCOMMON& (0+127)
  1427  0049                     end_of_initialization:	
  1428                           ;End of C runtime variable initialization code
  1429                           
  1430  0049                     __end_of__initialization:
  1431  0049  0183               	clrf	3
  1432  004A  160A  118A  2CEE   	ljmp	_main	;jump to C main() function
  1433                           
  1434                           	psect	bssCOMMON
  1435  007A                     __pbssCOMMON:
  1436  007A                     _Act_Variables:
  1437  007A                     	ds	1
  1438                           
  1439                           	psect	dataCOMMON
  1440  0078                     __pdataCOMMON:
  1441  0078                     _Delay100ms:
  1442  0078                     	ds	2
  1443                           
  1444                           	psect	bssBANK0
  1445  0061                     __pbssBANK0:
  1446  0061                     _Estado_Actual:
  1447  0061                     	ds	1
  1448  0062                     _Reset:
  1449  0062                     	ds	1
  1450  0063                     _Output:
  1451  0063                     	ds	1
  1452  0064                     _mod_tiempo:
  1453  0064                     	ds	1
  1454  0065                     _Mostrar:
  1455  0065                     	ds	1
  1456  0066                     _Temp:
  1457  0066                     	ds	1
  1458  0067                     _Seg:
  1459  0067                     	ds	1
  1460  0068                     _Min:
  1461  0068                     	ds	1
  1462  0069                     _Pwm:
  1463  0069                     	ds	1
  1464  006A                     _Modo:
  1465  006A                     	ds	1
  1466                           
  1467                           	psect	dataBANK0
  1468  006B                     __pdataBANK0:
  1469  006B                     _Delay1s:
  1470  006B                     	ds	2
  1471  006D                     _Delay200ms:
  1472  006D                     	ds	2
  1473                           
  1474                           	psect	bssBANK1
  1475  00A0                     __pbssBANK1:
  1476  00A0                     Pant_Inicio@F1332:
  1477  00A0                     	ds	8
  1478  00A8                     _Pw_PwmS1:
  1479  00A8                     	ds	3
  1480  00AB                     _Per_PwmS1:
  1481  00AB                     	ds	3
  1482  00AE                     _Rpm:
  1483  00AE                     	ds	2
  1484  00B0                     _PER_T_S1:
  1485  00B0                     	ds	2
  1486  00B2                     _P_W_T_S1:
  1487  00B2                     	ds	2
  1488  00B4                     _PwmS1:
  1489  00B4                     	ds	2
  1490  00B6                     _freqPwmS1:
  1491  00B6                     	ds	2
  1492  00B8                     _Subestado_Actual:
  1493  00B8                     	ds	1
  1494  00B9                     _Temporizador:
  1495  00B9                     	ds	1
  1496  00BA                     _Act_PwmS1:
  1497  00BA                     	ds	1
  1498                           
  1499                           	psect	dataBANK1
  1500  00BB                     __pdataBANK1:
  1501  00BB                     Pant_Inicio@F1330:
  1502  00BB                     	ds	8
  1503                           
  1504                           	psect	inittext
  1505  13D9                     init_fetch0:	
  1506                           ;	Called with low address in FSR and high address in W
  1507                           
  1508  13D9  087E               	movf	126,w
  1509  13DA  008A               	movwf	10
  1510  13DB  087F               	movf	127,w
  1511  13DC  0082               	movwf	2
  1512  13DD                     init_ram0:	
  1513                           ;Called with:
  1514                           ;	high address of idata address in btemp 
  1515                           ;	low address of idata address in btemp+1 
  1516                           ;	low address of data in FSR
  1517                           ;	high address + 1 of data in btemp-1
  1518                           
  1519  13DD  23D9  160A  118A   	fcall	init_fetch0
  1520  13E0  0080               	movwf	0
  1521  13E1  0A84               	incf	4,f
  1522  13E2  0804               	movf	4,w
  1523  13E3  067D               	xorwf	125,w
  1524  13E4  1903               	btfsc	3,2
  1525  13E5  3400               	retlw	0
  1526  13E6  0AFF               	incf	127,f
  1527  13E7  1903               	btfsc	3,2
  1528  13E8  0AFE               	incf	126,f
  1529  13E9  2BDD               	goto	init_ram0
  1530                           
  1531                           	psect	clrtext
  1532  13A9                     clear_ram0:	
  1533                           ;	Called with FSR containing the base address, and
  1534                           ;	W with the last address+1
  1535                           
  1536  13A9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1537  13AA                     clrloop0:
  1538  13AA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1539  13AB  0A84               	incf	4,f	;increment pointer
  1540  13AC  0604               	xorwf	4,w	;XOR with final address
  1541  13AD  1903               	btfsc	3,2	;have we reached the end yet?
  1542  13AE  3400               	retlw	0	;all done for this memory range, return
  1543  13AF  0604               	xorwf	4,w	;XOR again to restore value
  1544  13B0  2BAA               	goto	clrloop0	;do the next byte
  1545                           
  1546                           	psect	cstackBANK1
  1547  00C3                     __pcstackBANK1:
  1548  00C3                     ??_MEF_Subest_Actualizacion:
  1549                           
  1550                           ; 1 bytes @ 0x0
  1551  00C3                     	ds	2
  1552  00C5                     ??_MEF_Actualizacion:
  1553                           
  1554                           ; 1 bytes @ 0x2
  1555  00C5                     	ds	2
  1556                           
  1557                           	psect	cstackCOMMON
  1558  0070                     __pcstackCOMMON:
  1559  0070                     ?_isdigit:
  1560  0070                     ?_Pines_Init:	
  1561                           ; 1 bit 
  1562                           
  1563  0070                     ?_MEF_Init:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_LCD_init:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_Pwm_init:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_Adc_init:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_MEF_Actualizacion:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_Task_Ready:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ??_Task_Ready:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_Pant_Inicio:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_Select_Modo:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_MEF_Subest_Actualizacion:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_Pant_Pulverizacion:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?_Pant_Fuga:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_Pant_Flujo:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_Pant_Modos:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_Pant_Val_Act:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?_Lec_Adc_Modo_Pulv:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_Lec_Adc_Modo_Fuga:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ?_Lec_Adc_Modo_Flujo:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_Salida_Modo_Pulv:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?_Salida_Modo_Fuga:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ?_Salida_Modo_Flujo:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?_Detener:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_Pant_Temporizador:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?_Fin_Proceso:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_LCD_command:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?_Pant_Menu:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_Pant_Selector:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_Pant_Detener:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_Proceso_Fin:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?_Adc_Rpm_Read:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?_Adc_Pwm_Read:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ?_Adc_Min_Read:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ?_Adc_Temp_Read:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     ?_LCD_date:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0070                     ?_main:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0070                     ?_Antirrebote:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0070                     ?_ISR:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674  0070                     ??_ISR:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677                           
  1678                           ; 1 bytes @ 0x0
  1679  0070                     	ds	3
  1680  0073                     ??_Pines_Init:
  1681  0073                     ??_MEF_Init:	
  1682                           ; 1 bytes @ 0x3
  1683                           
  1684  0073                     ??_Pwm_init:	
  1685                           ; 1 bytes @ 0x3
  1686                           
  1687  0073                     ??_Adc_init:	
  1688                           ; 1 bytes @ 0x3
  1689                           
  1690  0073                     ??_Salida_Modo_Pulv:	
  1691                           ; 1 bytes @ 0x3
  1692                           
  1693  0073                     ??_Salida_Modo_Fuga:	
  1694                           ; 1 bytes @ 0x3
  1695                           
  1696  0073                     ??_Salida_Modo_Flujo:	
  1697                           ; 1 bytes @ 0x3
  1698                           
  1699  0073                     ??_LCD_command:	
  1700                           ; 1 bytes @ 0x3
  1701                           
  1702  0073                     ??_LCD_date:	
  1703                           ; 1 bytes @ 0x3
  1704                           
  1705  0073                     ??_isdigit:	
  1706                           ; 1 bytes @ 0x3
  1707                           
  1708  0073                     ??_Antirrebote:	
  1709                           ; 1 bytes @ 0x3
  1710                           
  1711  0073                     ?_Adc:	
  1712                           ; 1 bytes @ 0x3
  1713                           
  1714  0073                     ?___lwdiv:	
  1715                           ; 2 bytes @ 0x3
  1716                           
  1717  0073                     ?___ftpack:	
  1718                           ; 2 bytes @ 0x3
  1719                           
  1720  0073                     _isdigit$1305:	
  1721                           ; 3 bytes @ 0x3
  1722                           
  1723  0073                     ___lwdiv@divisor:	
  1724                           ; 1 bytes @ 0x3
  1725                           
  1726  0073                     ___ftpack@arg:	
  1727                           ; 2 bytes @ 0x3
  1728                           
  1729                           
  1730                           ; 3 bytes @ 0x3
  1731  0073                     	ds	1
  1732  0074                     isdigit@c:
  1733                           
  1734                           ; 1 bytes @ 0x4
  1735  0074                     	ds	1
  1736  0075                     ??_Adc:
  1737  0075                     LCD_command@cmd:	
  1738                           ; 1 bytes @ 0x5
  1739                           
  1740  0075                     LCD_date@date:	
  1741                           ; 1 bytes @ 0x5
  1742                           
  1743  0075                     ___lwdiv@dividend:	
  1744                           ; 1 bytes @ 0x5
  1745                           
  1746                           
  1747                           ; 2 bytes @ 0x5
  1748  0075                     	ds	1
  1749  0076                     ??_LCD_init:
  1750  0076                     ?_LCD_character:	
  1751                           ; 1 bytes @ 0x6
  1752                           
  1753  0076                     ??_LCD_array:	
  1754                           ; 1 bytes @ 0x6
  1755                           
  1756  0076                     ??_LCD_xy:	
  1757                           ; 1 bytes @ 0x6
  1758                           
  1759  0076                     LCD_character@caracter:	
  1760                           ; 1 bytes @ 0x6
  1761                           
  1762  0076                     ___ftpack@exp:	
  1763                           ; 1 bytes @ 0x6
  1764                           
  1765                           
  1766                           ; 1 bytes @ 0x6
  1767  0076                     	ds	1
  1768  0077                     ??_LCD_character:
  1769  0077                     ??___wmul:	
  1770                           ; 1 bytes @ 0x7
  1771                           
  1772  0077                     ??___lwdiv:	
  1773                           ; 1 bytes @ 0x7
  1774                           
  1775  0077                     ??___lwmod:	
  1776                           ; 1 bytes @ 0x7
  1777                           
  1778  0077                     ___ftpack@sign:	
  1779                           ; 1 bytes @ 0x7
  1780                           
  1781  0077                     ___lwmod@counter:	
  1782                           ; 1 bytes @ 0x7
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0x7
  1786  0077                     	ds	1
  1787  0078                     ??_Select_Modo:
  1788  0078                     ??_Pant_Modos:	
  1789                           ; 1 bytes @ 0x8
  1790                           
  1791  0078                     ??_Lec_Adc_Modo_Pulv:	
  1792                           ; 1 bytes @ 0x8
  1793                           
  1794  0078                     ??_Lec_Adc_Modo_Fuga:	
  1795                           ; 1 bytes @ 0x8
  1796                           
  1797  0078                     ??_Lec_Adc_Modo_Flujo:	
  1798                           ; 1 bytes @ 0x8
  1799                           
  1800  0078                     ??_Pant_Menu:	
  1801                           ; 1 bytes @ 0x8
  1802                           
  1803  0078                     ??_Pant_Selector:	
  1804                           ; 1 bytes @ 0x8
  1805                           
  1806  0078                     ??_Pant_Detener:	
  1807                           ; 1 bytes @ 0x8
  1808                           
  1809  0078                     ??_Proceso_Fin:	
  1810                           ; 1 bytes @ 0x8
  1811                           
  1812  0078                     ??_Adc_Pwm_Read:	
  1813                           ; 1 bytes @ 0x8
  1814                           
  1815  0078                     ??_Adc_Min_Read:	
  1816                           ; 1 bytes @ 0x8
  1817                           
  1818  0078                     ??_Adc_Temp_Read:	
  1819                           ; 1 bytes @ 0x8
  1820                           
  1821  0078                     ??_main:	
  1822                           ; 1 bytes @ 0x8
  1823                           
  1824  0078                     ??___awtoft:	
  1825                           ; 1 bytes @ 0x8
  1826                           
  1827                           
  1828                           	psect	cstackBANK0
  1829  0020                     __pcstackBANK0:	
  1830                           ; 1 bytes @ 0x8
  1831                           
  1832  0020                     ?_LCD_array:
  1833  0020                     ?_LCD_xy:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836  0020                     ??___ftpack:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839  0020                     LCD_init@i:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842  0020                     LCD_character@adress:	
  1843                           ; 1 bytes @ 0x0
  1844                           
  1845  0020                     Adc@channel:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848  0020                     ___lwdiv@counter:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851  0020                     LCD_array@x:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854  0020                     LCD_xy@x:	
  1855                           ; 2 bytes @ 0x0
  1856                           
  1857                           
  1858                           ; 2 bytes @ 0x0
  1859  0020                     	ds	1
  1860  0021                     LCD_character@i:
  1861  0021                     Adc@convertion:	
  1862                           ; 1 bytes @ 0x1
  1863                           
  1864  0021                     ___lwdiv@quotient:	
  1865                           ; 2 bytes @ 0x1
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x1
  1869  0021                     	ds	1
  1870  0022                     LCD_array@y:
  1871  0022                     LCD_xy@y:	
  1872                           ; 2 bytes @ 0x2
  1873                           
  1874                           
  1875                           ; 2 bytes @ 0x2
  1876  0022                     	ds	1
  1877  0023                     ?___wmul:
  1878  0023                     ?___lwmod:	
  1879                           ; 2 bytes @ 0x3
  1880                           
  1881  0023                     ?___awtoft:	
  1882                           ; 2 bytes @ 0x3
  1883                           
  1884  0023                     ___wmul@multiplier:	
  1885                           ; 3 bytes @ 0x3
  1886                           
  1887  0023                     ___awtoft@c:	
  1888                           ; 2 bytes @ 0x3
  1889                           
  1890  0023                     ___lwmod@divisor:	
  1891                           ; 2 bytes @ 0x3
  1892                           
  1893                           
  1894                           ; 2 bytes @ 0x3
  1895  0023                     	ds	1
  1896  0024                     LCD_array@date:
  1897                           
  1898                           ; 2 bytes @ 0x4
  1899  0024                     	ds	1
  1900  0025                     ___wmul@multiplicand:
  1901  0025                     ___lwmod@dividend:	
  1902                           ; 2 bytes @ 0x5
  1903                           
  1904                           
  1905                           ; 2 bytes @ 0x5
  1906  0025                     	ds	1
  1907  0026                     ??_Pant_Inicio:
  1908  0026                     ??_Pant_Pulverizacion:	
  1909                           ; 1 bytes @ 0x6
  1910                           
  1911  0026                     ??_Pant_Fuga:	
  1912                           ; 1 bytes @ 0x6
  1913                           
  1914  0026                     ??_Pant_Flujo:	
  1915                           ; 1 bytes @ 0x6
  1916                           
  1917  0026                     ??_Detener:	
  1918                           ; 1 bytes @ 0x6
  1919                           
  1920  0026                     ??_Fin_Proceso:	
  1921                           ; 1 bytes @ 0x6
  1922                           
  1923  0026                     ___awtoft@sign:	
  1924                           ; 1 bytes @ 0x6
  1925                           
  1926                           
  1927                           ; 1 bytes @ 0x6
  1928  0026                     	ds	1
  1929  0027                     ?___ftmul:
  1930  0027                     ___wmul@product:	
  1931                           ; 3 bytes @ 0x7
  1932                           
  1933  0027                     ___ftmul@f1:	
  1934                           ; 2 bytes @ 0x7
  1935                           
  1936                           
  1937                           ; 3 bytes @ 0x7
  1938  0027                     	ds	2
  1939  0029                     ?_sprintf:
  1940  0029                     Detener@i:	
  1941                           ; 2 bytes @ 0x9
  1942                           
  1943  0029                     Fin_Proceso@i:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946  0029                     sprintf@f:	
  1947                           ; 1 bytes @ 0x9
  1948                           
  1949                           
  1950                           ; 2 bytes @ 0x9
  1951  0029                     	ds	1
  1952  002A                     ___ftmul@f2:
  1953  002A                     Pant_Inicio@caracter1:	
  1954                           ; 3 bytes @ 0xA
  1955                           
  1956                           
  1957                           ; 8 bytes @ 0xA
  1958  002A                     	ds	3
  1959  002D                     ??_sprintf:
  1960  002D                     ??___ftmul:	
  1961                           ; 1 bytes @ 0xD
  1962                           
  1963                           
  1964                           ; 1 bytes @ 0xD
  1965  002D                     	ds	3
  1966  0030                     ___ftmul@exp:
  1967                           
  1968                           ; 1 bytes @ 0x10
  1969  0030                     	ds	1
  1970  0031                     sprintf@prec:
  1971  0031                     ___ftmul@f3_as_product:	
  1972                           ; 1 bytes @ 0x11
  1973                           
  1974                           
  1975                           ; 3 bytes @ 0x11
  1976  0031                     	ds	1
  1977  0032                     sprintf@ap:
  1978  0032                     Pant_Inicio@caracter:	
  1979                           ; 1 bytes @ 0x12
  1980                           
  1981                           
  1982                           ; 8 bytes @ 0x12
  1983  0032                     	ds	1
  1984  0033                     sprintf@val:
  1985                           
  1986                           ; 2 bytes @ 0x13
  1987  0033                     	ds	1
  1988  0034                     ___ftmul@cntr:
  1989                           
  1990                           ; 1 bytes @ 0x14
  1991  0034                     	ds	1
  1992  0035                     sprintf@flag:
  1993  0035                     ___ftmul@sign:	
  1994                           ; 1 bytes @ 0x15
  1995                           
  1996                           
  1997                           ; 1 bytes @ 0x15
  1998  0035                     	ds	1
  1999  0036                     ?___ftdiv:
  2000  0036                     sprintf@width:	
  2001                           ; 3 bytes @ 0x16
  2002                           
  2003  0036                     ___ftdiv@f2:	
  2004                           ; 2 bytes @ 0x16
  2005                           
  2006                           
  2007                           ; 3 bytes @ 0x16
  2008  0036                     	ds	2
  2009  0038                     sprintf@c:
  2010                           
  2011                           ; 1 bytes @ 0x18
  2012  0038                     	ds	1
  2013  0039                     sprintf@sp:
  2014  0039                     ___ftdiv@f1:	
  2015                           ; 1 bytes @ 0x19
  2016                           
  2017                           
  2018                           ; 3 bytes @ 0x19
  2019  0039                     	ds	1
  2020  003A                     ??_Pant_Val_Act:
  2021  003A                     ??_Pant_Temporizador:	
  2022                           ; 1 bytes @ 0x1A
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x1A
  2026  003A                     	ds	2
  2027  003C                     ??___ftdiv:
  2028  003C                     Pant_Val_Act@buffer:	
  2029                           ; 1 bytes @ 0x1C
  2030                           
  2031  003C                     Pant_Temporizador@buffer:	
  2032                           ; 20 bytes @ 0x1C
  2033                           
  2034                           
  2035                           ; 20 bytes @ 0x1C
  2036  003C                     	ds	3
  2037  003F                     ___ftdiv@cntr:
  2038                           
  2039                           ; 1 bytes @ 0x1F
  2040  003F                     	ds	1
  2041  0040                     ___ftdiv@f3:
  2042                           
  2043                           ; 3 bytes @ 0x20
  2044  0040                     	ds	3
  2045  0043                     ___ftdiv@exp:
  2046                           
  2047                           ; 1 bytes @ 0x23
  2048  0043                     	ds	1
  2049  0044                     ___ftdiv@sign:
  2050                           
  2051                           ; 1 bytes @ 0x24
  2052  0044                     	ds	1
  2053  0045                     ?___fttol:
  2054  0045                     ___fttol@f1:	
  2055                           ; 4 bytes @ 0x25
  2056                           
  2057                           
  2058                           ; 3 bytes @ 0x25
  2059  0045                     	ds	4
  2060  0049                     ??___fttol:
  2061                           
  2062                           ; 1 bytes @ 0x29
  2063  0049                     	ds	3
  2064  004C                     ___fttol@sign1:
  2065                           
  2066                           ; 1 bytes @ 0x2C
  2067  004C                     	ds	1
  2068  004D                     ___fttol@lval:
  2069                           
  2070                           ; 4 bytes @ 0x2D
  2071  004D                     	ds	4
  2072  0051                     ___fttol@exp1:
  2073                           
  2074                           ; 1 bytes @ 0x31
  2075  0051                     	ds	1
  2076  0052                     ??_Adc_Rpm_Read:
  2077  0052                     _Adc_Pwm_Read$1503:	
  2078                           ; 1 bytes @ 0x32
  2079                           
  2080  0052                     _Adc_Min_Read$1504:	
  2081                           ; 3 bytes @ 0x32
  2082                           
  2083  0052                     _Adc_Temp_Read$1505:	
  2084                           ; 3 bytes @ 0x32
  2085                           
  2086                           
  2087                           ; 3 bytes @ 0x32
  2088  0052                     	ds	4
  2089  0056                     _Adc_Rpm_Read$1502:
  2090                           
  2091                           ; 3 bytes @ 0x36
  2092  0056                     	ds	3
  2093  0059                     Adc_Rpm_Read@cent:
  2094                           
  2095                           ; 2 bytes @ 0x39
  2096  0059                     	ds	2
  2097  005B                     Adc_Rpm_Read@uni_m:
  2098                           
  2099                           ; 2 bytes @ 0x3B
  2100  005B                     	ds	2
  2101  005D                     Adc_Rpm_Read@dec_m:
  2102                           
  2103                           ; 2 bytes @ 0x3D
  2104  005D                     	ds	2
  2105  005F                     Adc_Rpm_Read@valor:
  2106                           
  2107                           ; 2 bytes @ 0x3F
  2108  005F                     	ds	2
  2109                           
  2110                           	psect	maintext
  2111  14EE                     __pmaintext:	
  2112 ;;
  2113 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2114 ;;
  2115 ;; *************** function _main *****************
  2116 ;; Defined at:
  2117 ;;		line 35 in file "Main.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : B00/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels required when called:    8
  2137 ;; This function calls:
  2138 ;;		_Adc_init
  2139 ;;		_LCD_init
  2140 ;;		_MEF_Actualizacion
  2141 ;;		_MEF_Init
  2142 ;;		_Pines_Init
  2143 ;;		_Pwm_init
  2144 ;; This function is called by:
  2145 ;;		Startup code after reset
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _main
  2151  14EE                     _main:
  2152                           
  2153                           ;Main.c: 38:     Pines_Init();
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2157  14EE  160A  118A  2415  160A  118A  	fcall	_Pines_Init
  2158                           
  2159                           ;Main.c: 39:     MEF_Init();
  2160  14F3  160A  118A  23A2  160A  118A  	fcall	_MEF_Init
  2161                           
  2162                           ;Main.c: 40:     LCD_init();
  2163  14F8  120A  158A  225D  160A  118A  	fcall	_LCD_init
  2164                           
  2165                           ;Main.c: 41:     Pwm_init();
  2166  14FD  120A  158A  2003  160A  118A  	fcall	_Pwm_init
  2167                           
  2168                           ;Main.c: 42:     Adc_init();
  2169  1502  160A  118A  2451  160A  118A  	fcall	_Adc_init
  2170                           
  2171                           ;Main.c: 44:     TMR1IE=1,TMR1IF=1;
  2172  1507  1683               	bsf	3,5	;RP0=1, select bank1
  2173  1508  1303               	bcf	3,6	;RP1=0, select bank1
  2174  1509  140C               	bsf	12,0	;volatile
  2175  150A  1283               	bcf	3,5	;RP0=0, select bank0
  2176  150B  1303               	bcf	3,6	;RP1=0, select bank0
  2177  150C  140C               	bsf	12,0	;volatile
  2178                           
  2179                           ;Main.c: 46:     WDTCONbits.SWDTEN = 1;
  2180  150D  1283               	bcf	3,5	;RP0=0, select bank2
  2181  150E  1703               	bsf	3,6	;RP1=1, select bank2
  2182  150F  1405               	bsf	5,0	;volatile
  2183                           
  2184                           ;Main.c: 47:     WDTCONbits.WDTPS = 0b1010;
  2185  1510  0805               	movf	5,w	;volatile
  2186  1511  39E1               	andlw	-31
  2187  1512  3814               	iorlw	20
  2188  1513  0085               	movwf	5	;volatile
  2189  1514                     l4946:
  2190                           
  2191                           ;Main.c: 50:     {;Main.c: 51:         MEF_Actualizacion();
  2192  1514  120A  158A  2125  160A  118A  	fcall	_MEF_Actualizacion
  2193  1519  2D14               	goto	l4946
  2194  151A                     __end_of_main:
  2195                           
  2196                           	psect	text1
  2197  0803                     __ptext1:	
  2198 ;; *************** function _Pwm_init *****************
  2199 ;; Defined at:
  2200 ;;		line 5 in file "Pwm_Soft.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    2
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _Pwm_init
  2230  0803                     _Pwm_init:
  2231                           
  2232                           ;Pwm_Soft.c: 7:     ANSELHbits.ANS11 = 0;
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _Pwm_init: [wreg+status,2+status,0]
  2236  0803  1683               	bsf	3,5	;RP0=1, select bank3
  2237  0804  1703               	bsf	3,6	;RP1=1, select bank3
  2238  0805  1189               	bcf	9,3	;volatile
  2239                           
  2240                           ;Pwm_Soft.c: 10:     T1CONbits.TMR1GE = 0;
  2241  0806  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0807  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0808  1310               	bcf	16,6	;volatile
  2244                           
  2245                           ;Pwm_Soft.c: 11:     T1CONbits.T1SYNC = 1;
  2246  0809  1510               	bsf	16,2	;volatile
  2247                           
  2248                           ;Pwm_Soft.c: 12:     T1CONbits.TMR1CS = 0;
  2249  080A  1090               	bcf	16,1	;volatile
  2250                           
  2251                           ;Pwm_Soft.c: 13:     T1CONbits.T1CKPS = 0b01;
  2252  080B  0810               	movf	16,w	;volatile
  2253  080C  39CF               	andlw	-49
  2254  080D  3810               	iorlw	16
  2255  080E  0090               	movwf	16	;volatile
  2256                           
  2257                           ;Pwm_Soft.c: 14:     T1CONbits.TMR1ON = 1;
  2258  080F  1410               	bsf	16,0	;volatile
  2259                           
  2260                           ;Pwm_Soft.c: 16:     TMR1 = 65285;
  2261  0810  30FF               	movlw	255
  2262  0811  008F               	movwf	15	;volatile
  2263  0812  3005               	movlw	5
  2264  0813  008E               	movwf	14	;volatile
  2265                           
  2266                           ;Pwm_Soft.c: 19:     PEIE = 1;
  2267  0814  170B               	bsf	11,6	;volatile
  2268                           
  2269                           ;Pwm_Soft.c: 20:     GIE = 1;
  2270  0815  178B               	bsf	11,7	;volatile
  2271                           
  2272                           ;Pwm_Soft.c: 21:     TMR1IE = 0;
  2273  0816  1683               	bsf	3,5	;RP0=1, select bank1
  2274  0817  1303               	bcf	3,6	;RP1=0, select bank1
  2275  0818  100C               	bcf	12,0	;volatile
  2276                           
  2277                           ;Pwm_Soft.c: 22:     TMR1IF = 1;
  2278  0819  1283               	bcf	3,5	;RP0=0, select bank0
  2279  081A  1303               	bcf	3,6	;RP1=0, select bank0
  2280  081B  140C               	bsf	12,0	;volatile
  2281  081C  0008               	return
  2282  081D                     __end_of_Pwm_init:
  2283                           
  2284                           	psect	text2
  2285  1415                     __ptext2:	
  2286 ;; *************** function _Pines_Init *****************
  2287 ;; Defined at:
  2288 ;;		line 57 in file "Main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _Pines_Init
  2318  1415                     _Pines_Init:
  2319                           
  2320                           ;Main.c: 60:     TRISAbits.TRISA5 = 0;
  2321                           
  2322                           ;incstack = 0
  2323                           ; Regs used in _Pines_Init: [wreg+status,2]
  2324  1415  1683               	bsf	3,5	;RP0=1, select bank1
  2325  1416  1303               	bcf	3,6	;RP1=0, select bank1
  2326  1417  1285               	bcf	5,5	;volatile
  2327                           
  2328                           ;Main.c: 61:     PORTA = 0;
  2329  1418  1283               	bcf	3,5	;RP0=0, select bank0
  2330  1419  1303               	bcf	3,6	;RP1=0, select bank0
  2331  141A  0185               	clrf	5	;volatile
  2332                           
  2333                           ;Main.c: 62:     PORTB = 0;
  2334  141B  0186               	clrf	6	;volatile
  2335                           
  2336                           ;Main.c: 63:     PORTC = 0;
  2337  141C  0187               	clrf	7	;volatile
  2338                           
  2339                           ;Main.c: 64:     TRISB = 0xFF;
  2340  141D  30FF               	movlw	255
  2341  141E  1683               	bsf	3,5	;RP0=1, select bank1
  2342  141F  1303               	bcf	3,6	;RP1=0, select bank1
  2343  1420  0086               	movwf	6	;volatile
  2344                           
  2345                           ;Main.c: 65:     TRISC = 0x00;
  2346  1421  0187               	clrf	7	;volatile
  2347                           
  2348                           ;Main.c: 66:     ANSELHbits.ANS12 = 0;
  2349  1422  1683               	bsf	3,5	;RP0=1, select bank3
  2350  1423  1703               	bsf	3,6	;RP1=1, select bank3
  2351  1424  1209               	bcf	9,4	;volatile
  2352                           
  2353                           ;Main.c: 67:     ANSELHbits.ANS11 = 0;
  2354  1425  1189               	bcf	9,3	;volatile
  2355                           
  2356                           ;Main.c: 68:     ANSELHbits.ANS10 = 0;
  2357  1426  1109               	bcf	9,2	;volatile
  2358                           
  2359                           ;Main.c: 69:     ANSELHbits.ANS8 = 0;
  2360  1427  1009               	bcf	9,0	;volatile
  2361                           
  2362                           ;Main.c: 70:     ANSELHbits.ANS9 = 0;
  2363  1428  1089               	bcf	9,1	;volatile
  2364                           
  2365                           ;Main.c: 71:     ANSELbits.ANS4 = 0;
  2366  1429  1208               	bcf	8,4	;volatile
  2367                           
  2368                           ;Main.c: 73:     TRISBbits.TRISB4 = 0;
  2369  142A  1683               	bsf	3,5	;RP0=1, select bank1
  2370  142B  1303               	bcf	3,6	;RP1=0, select bank1
  2371  142C  1206               	bcf	6,4	;volatile
  2372  142D  0008               	return
  2373  142E                     __end_of_Pines_Init:
  2374                           
  2375                           	psect	text3
  2376  13A2                     __ptext3:	
  2377 ;; *************** function _MEF_Init *****************
  2378 ;; Defined at:
  2379 ;;		line 40 in file "MEF.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		status,2
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function _MEF_Init
  2409  13A2                     _MEF_Init:
  2410                           
  2411                           ;MEF.c: 42:     Estado_Actual = ESTADO_INICIO;
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _MEF_Init: [status,2]
  2415  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  2416  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  2417  13A4  01E1               	clrf	_Estado_Actual
  2418                           
  2419                           ;MEF.c: 43:     Subestado_Actual = SUBEST_INICIAL;
  2420  13A5  1683               	bsf	3,5	;RP0=1, select bank1
  2421  13A6  1303               	bcf	3,6	;RP1=0, select bank1
  2422  13A7  01B8               	clrf	_Subestado_Actual^(0+128)
  2423  13A8  0008               	return
  2424  13A9                     __end_of_MEF_Init:
  2425                           
  2426                           	psect	text4
  2427  0925                     __ptext4:	
  2428 ;; *************** function _MEF_Actualizacion *****************
  2429 ;; Defined at:
  2430 ;;		line 48 in file "MEF.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2444 ;;      Params:         0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0
  2446 ;;      Temps:          0       0       2       0       0
  2447 ;;      Totals:         0       0       2       0       0
  2448 ;;Total ram usage:        2 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    7
  2451 ;; This function calls:
  2452 ;;		_Antirrebote
  2453 ;;		_MEF_Subest_Actualizacion
  2454 ;;		_Pant_Inicio
  2455 ;;		_Select_Modo
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _MEF_Actualizacion
  2463  0925                     _MEF_Actualizacion:
  2464                           
  2465                           ;MEF.c: 50:     switch(Estado_Actual)
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2469  0925  2967               	goto	l4844
  2470  0926                     l4794:
  2471                           
  2472                           ;MEF.c: 53:         {;MEF.c: 54:             Pant_Inicio();
  2473  0926  120A  158A  2468   	fcall	_Pant_Inicio
  2474  0929                     l4796:
  2475                           
  2476                           ;MEF.c: 56:             Estado_Actual = ESTADO_MENU;
  2477  0929  1283               	bcf	3,5	;RP0=0, select bank0
  2478  092A  1303               	bcf	3,6	;RP1=0, select bank0
  2479  092B  01E1               	clrf	_Estado_Actual
  2480  092C  0AE1               	incf	_Estado_Actual,f
  2481                           
  2482                           ;MEF.c: 57:         break;
  2483  092D  0008               	return
  2484  092E                     l4798:
  2485                           
  2486                           ;MEF.c: 60:         {;MEF.c: 61:             Select_Modo();
  2487  092E  160A  118A  249A  120A  158A  	fcall	_Select_Modo
  2488                           
  2489                           ;MEF.c: 63:             if(PORTBbits.RB1 && Modo==1) Estado_Actual = ESTADO_MODO_PULV,An
      +                          tirrebote();
  2490  0933  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0934  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0935  1C86               	btfss	6,1	;volatile
  2493  0936  2948               	goto	l220
  2494  0937  036A               	decf	_Modo,w
  2495  0938  1D03               	btfss	3,2
  2496  0939  2948               	goto	l220
  2497  093A  3002               	movlw	2
  2498  093B  2941               	goto	L1
  2499  093C                     l4808:
  2500  093C  3002               	movlw	2
  2501  093D  066A               	xorwf	_Modo,w
  2502  093E  1D03               	btfss	3,2
  2503  093F  294A               	goto	l222
  2504  0940  3003               	movlw	3
  2505  0941                     L1:
  2506  0941  00FF               	movwf	127
  2507  0942  087F               	movf	127,w
  2508  0943  00E1               	movwf	_Estado_Actual
  2509  0944  120A  118A  27D8   	fcall	_Antirrebote
  2510  0947  0008               	return
  2511  0948                     l220:	
  2512                           ;MEF.c: 64:             else if(PORTBbits.RB1 && Modo==2) Estado_Actual = ESTADO_MODO_FU
      +                          GA,Antirrebote();
  2513                           
  2514  0948  1886               	btfsc	6,1	;volatile
  2515  0949  293C               	goto	l4808
  2516  094A                     l222:	
  2517                           ;MEF.c: 65:             else if(PORTBbits.RB1 && Modo==3) Estado_Actual = ESTADO_MODO_FL
      +                          UJO,Antirrebote();
  2518                           
  2519  094A  1C86               	btfss	6,1	;volatile
  2520  094B  0008               	return
  2521  094C  3003               	movlw	3
  2522  094D  066A               	xorwf	_Modo,w
  2523  094E  1D03               	btfss	3,2
  2524  094F  0008               	return
  2525  0950  3004               	movlw	4
  2526  0951  2941               	goto	L1
  2527  0952                     l4820:	
  2528                           ;MEF.c: 66:         break;
  2529                           
  2530                           
  2531                           ;MEF.c: 69:         {;MEF.c: 70:             MEF_Subest_Actualizacion();
  2532  0952  120A  118A  2354  120A  158A  	fcall	_MEF_Subest_Actualizacion
  2533                           
  2534                           ;MEF.c: 72:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2535  0957  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0958  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0959  0862               	movf	_Reset,w
  2538  095A  1903               	btfsc	3,2
  2539  095B  0008               	return
  2540  095C  3005               	movlw	5
  2541  095D  00FF               	movwf	127
  2542  095E  087F               	movf	127,w
  2543  095F  00E1               	movwf	_Estado_Actual
  2544  0960  0008               	return
  2545  0961                     l4826:
  2546  0961                     l4832:	
  2547                           ;MEF.c: 79:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2548                           
  2549                           ;MEF.c: 76:         {;MEF.c: 77:             MEF_Subest_Actualizacion();
  2550                           
  2551  0961  2952               	goto	l4820
  2552  0962                     l4838:	
  2553                           ;MEF.c: 86:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2554                           
  2555                           ;MEF.c: 83:         {;MEF.c: 84:             MEF_Subest_Actualizacion();
  2556                           
  2557                           
  2558                           ;MEF.c: 90:         {;MEF.c: 91:             Subestado_Actual = SUBEST_INICIAL;
  2559  0962  01B8               	clrf	_Subestado_Actual^(0+128)
  2560                           
  2561                           ;MEF.c: 92:             Reset = 0;
  2562  0963  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0964  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0965  01E2               	clrf	_Reset
  2565  0966  2929               	goto	l4796
  2566  0967                     l4844:
  2567  0967  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0968  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0969  0861               	movf	_Estado_Actual,w
  2570  096A  1683               	bsf	3,5	;RP0=1, select bank1
  2571  096B  1303               	bcf	3,6	;RP1=0, select bank1
  2572  096C  00C5               	movwf	??_MEF_Actualizacion^(0+128)
  2573  096D  01C6               	clrf	(??_MEF_Actualizacion^(0+128)+1)
  2574                           
  2575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2576                           ; Switch size 1, requested type "simple"
  2577                           ; Number of cases is 1, Range of values is 0 to 0
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte            4     3 (average)
  2581                           ; direct_byte           11     8 (fixed)
  2582                           ; jumptable            260     6 (fixed)
  2583                           ;	Chosen strategy is simple_byte
  2584  096E  0846               	movf	(??_MEF_Actualizacion+1)^(0+128),w
  2585  096F  3A00               	xorlw	0	; case 0
  2586  0970  1903               	skipnz
  2587  0971  2973               	goto	l5126
  2588  0972  2987               	goto	l232
  2589  0973                     l5126:
  2590                           
  2591                           ; Switch size 1, requested type "simple"
  2592                           ; Number of cases is 6, Range of values is 0 to 5
  2593                           ; switch strategies available:
  2594                           ; Name         Instructions Cycles
  2595                           ; simple_byte           19    10 (average)
  2596                           ; direct_byte           26     8 (fixed)
  2597                           ; jumptable            260     6 (fixed)
  2598                           ;	Chosen strategy is simple_byte
  2599  0973  0845               	movf	??_MEF_Actualizacion^(0+128),w
  2600  0974  3A00               	xorlw	0	; case 0
  2601  0975  1903               	skipnz
  2602  0976  2926               	goto	l4794
  2603  0977  3A01               	xorlw	1	; case 1
  2604  0978  1903               	skipnz
  2605  0979  292E               	goto	l4798
  2606  097A  3A03               	xorlw	3	; case 2
  2607  097B  1903               	skipnz
  2608  097C  2952               	goto	l4820
  2609  097D  3A01               	xorlw	1	; case 3
  2610  097E  1903               	skipnz
  2611  097F  2961               	goto	l4826
  2612  0980  3A07               	xorlw	7	; case 4
  2613  0981  1903               	skipnz
  2614  0982  2961               	goto	l4832
  2615  0983  3A01               	xorlw	1	; case 5
  2616  0984  1903               	skipnz
  2617  0985  2962               	goto	l4838
  2618  0986  2987               	goto	l232
  2619  0987                     l232:
  2620  0987  0008               	return
  2621  0988                     __end_of_MEF_Actualizacion:
  2622                           
  2623                           	psect	text5
  2624  149A                     __ptext5:	
  2625 ;; *************** function _Select_Modo *****************
  2626 ;; Defined at:
  2627 ;;		line 14 in file "Menu_Modo.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    5
  2648 ;; This function calls:
  2649 ;;		_Antirrebote
  2650 ;;		_Pant_Menu
  2651 ;;		_Pant_Selector
  2652 ;; This function is called by:
  2653 ;;		_MEF_Actualizacion
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _Select_Modo
  2659  149A                     _Select_Modo:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _Select_Modo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2663  149A  0064               	clrwdt	;# 
  2664                           
  2665                           ;Menu_Modo.c: 18:     if(Mostrar) Pant_Menu(),Mostrar=0;
  2666  149B  1283               	bcf	3,5	;RP0=0, select bank0
  2667  149C  1303               	bcf	3,6	;RP1=0, select bank0
  2668  149D  0865               	movf	_Mostrar,w
  2669  149E  1903               	btfsc	3,2
  2670  149F  2CA8               	goto	l4636
  2671  14A0  160A  118A  27B5  160A  118A  	fcall	_Pant_Menu
  2672  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  2673  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  2674  14A7  01E5               	clrf	_Mostrar
  2675  14A8                     l4636:
  2676                           
  2677                           ;Menu_Modo.c: 20:     if(PORTBbits.RB3 || Modo==0)
  2678  14A8  1986               	btfsc	6,3	;volatile
  2679  14A9  2CAD               	goto	l4640
  2680  14AA  086A               	movf	_Modo,w
  2681  14AB  1D03               	btfss	3,2
  2682  14AC  0008               	return
  2683  14AD                     l4640:
  2684                           
  2685                           ;Menu_Modo.c: 21:     {;Menu_Modo.c: 22:         Modo+=1;
  2686  14AD  3001               	movlw	1
  2687  14AE  00FF               	movwf	127
  2688  14AF  087F               	movf	127,w
  2689  14B0  07EA               	addwf	_Modo,f
  2690                           
  2691                           ;Menu_Modo.c: 23:         if(Modo>=5||Modo<1) Modo=1;
  2692  14B1  3005               	movlw	5
  2693  14B2  026A               	subwf	_Modo,w
  2694  14B3  1803               	skipnc
  2695  14B4  2CB8               	goto	l314
  2696  14B5  086A               	movf	_Modo,w
  2697  14B6  1D03               	btfss	3,2
  2698  14B7  2CBA               	goto	l4646
  2699  14B8                     l314:
  2700  14B8  01EA               	clrf	_Modo
  2701  14B9  0AEA               	incf	_Modo,f
  2702  14BA                     l4646:
  2703                           
  2704                           ;Menu_Modo.c: 24:         Pant_Selector(),Antirrebote();
  2705  14BA  120A  118A  245F  160A  118A  	fcall	_Pant_Selector
  2706  14BF  120A  118A  27D8   	fcall	_Antirrebote
  2707  14C2  0008               	return
  2708  14C3                     __end_of_Select_Modo:
  2709                           
  2710                           	psect	text6
  2711  045F                     __ptext6:	
  2712 ;; *************** function _Pant_Selector *****************
  2713 ;; Defined at:
  2714 ;;		line 44 in file "Display_Lcd.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    4
  2735 ;; This function calls:
  2736 ;;		_LCD_array
  2737 ;; This function is called by:
  2738 ;;		_Select_Modo
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _Pant_Selector
  2744  045F                     _Pant_Selector:
  2745                           
  2746                           ;Display_Lcd.c: 46:     if(Modo == 1) LCD_array(4,1," "),LCD_array(1,1,">");
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _Pant_Selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2750  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0461  036A               	decf	_Modo,w
  2753  0462  1D03               	btfss	3,2
  2754  0463  2C87               	goto	l4574
  2755  0464  3004               	movlw	4
  2756  0465  00A0               	movwf	LCD_array@x
  2757  0466  3000               	movlw	0
  2758  0467  00A1               	movwf	LCD_array@x+1
  2759  0468  3001               	movlw	1
  2760  0469  00A2               	movwf	LCD_array@y
  2761  046A  3000               	movlw	0
  2762  046B  00A3               	movwf	LCD_array@y+1
  2763  046C  302F               	movlw	low ((STR_38+19)| (0+32768))
  2764  046D  00A4               	movwf	LCD_array@date
  2765  046E  3085               	movlw	high ((STR_38+19)| (0+32768))
  2766  046F  00A5               	movwf	LCD_array@date+1
  2767  0470  120A  158A  2188  120A  118A  	fcall	_LCD_array
  2768  0475  3001               	movlw	1
  2769  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0478  00A0               	movwf	LCD_array@x
  2772  0479  3000               	movlw	0
  2773  047A  00A1               	movwf	LCD_array@x+1
  2774  047B  3001               	movlw	1
  2775  047C  00A2               	movwf	LCD_array@y
  2776  047D  3000               	movlw	0
  2777  047E  00A3               	movwf	LCD_array@y+1
  2778  047F  3006               	movlw	low (STR_5| (0+32768))
  2779  0480  00A4               	movwf	LCD_array@date
  2780  0481  3086               	movlw	high (STR_5| (0+32768))
  2781  0482  00A5               	movwf	LCD_array@date+1
  2782  0483  120A  158A  2188   	fcall	_LCD_array
  2783  0486  0008               	return
  2784  0487                     l4574:
  2785  0487  3002               	movlw	2
  2786  0488  066A               	xorwf	_Modo,w
  2787  0489  1D03               	btfss	3,2
  2788  048A  2CAE               	goto	l4578
  2789  048B  3001               	movlw	1
  2790  048C  00A0               	movwf	LCD_array@x
  2791  048D  3000               	movlw	0
  2792  048E  00A1               	movwf	LCD_array@x+1
  2793  048F  3001               	movlw	1
  2794  0490  00A2               	movwf	LCD_array@y
  2795  0491  3000               	movlw	0
  2796  0492  00A3               	movwf	LCD_array@y+1
  2797  0493  302F               	movlw	low ((STR_38+19)| (0+32768))
  2798  0494  00A4               	movwf	LCD_array@date
  2799  0495  3085               	movlw	high ((STR_38+19)| (0+32768))
  2800  0496  00A5               	movwf	LCD_array@date+1
  2801  0497  120A  158A  2188  120A  118A  	fcall	_LCD_array
  2802  049C  3002               	movlw	2
  2803  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2804  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2805  049F  00A0               	movwf	LCD_array@x
  2806  04A0  3000               	movlw	0
  2807  04A1  00A1               	movwf	LCD_array@x+1
  2808  04A2  3001               	movlw	1
  2809  04A3  00A2               	movwf	LCD_array@y
  2810  04A4  3000               	movlw	0
  2811  04A5  00A3               	movwf	LCD_array@y+1
  2812  04A6  3006               	movlw	low (STR_5| (0+32768))
  2813  04A7  00A4               	movwf	LCD_array@date
  2814  04A8  3086               	movlw	high (STR_5| (0+32768))
  2815  04A9  00A5               	movwf	LCD_array@date+1
  2816  04AA  120A  158A  2188   	fcall	_LCD_array
  2817  04AD  0008               	return
  2818  04AE                     l4578:
  2819  04AE  3003               	movlw	3
  2820  04AF  066A               	xorwf	_Modo,w
  2821  04B0  1D03               	btfss	3,2
  2822  04B1  2CD5               	goto	l4582
  2823  04B2  3002               	movlw	2
  2824  04B3  00A0               	movwf	LCD_array@x
  2825  04B4  3000               	movlw	0
  2826  04B5  00A1               	movwf	LCD_array@x+1
  2827  04B6  3001               	movlw	1
  2828  04B7  00A2               	movwf	LCD_array@y
  2829  04B8  3000               	movlw	0
  2830  04B9  00A3               	movwf	LCD_array@y+1
  2831  04BA  302F               	movlw	low ((STR_38+19)| (0+32768))
  2832  04BB  00A4               	movwf	LCD_array@date
  2833  04BC  3085               	movlw	high ((STR_38+19)| (0+32768))
  2834  04BD  00A5               	movwf	LCD_array@date+1
  2835  04BE  120A  158A  2188  120A  118A  	fcall	_LCD_array
  2836  04C3  3003               	movlw	3
  2837  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2838  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2839  04C6  00A0               	movwf	LCD_array@x
  2840  04C7  3000               	movlw	0
  2841  04C8  00A1               	movwf	LCD_array@x+1
  2842  04C9  3001               	movlw	1
  2843  04CA  00A2               	movwf	LCD_array@y
  2844  04CB  3000               	movlw	0
  2845  04CC  00A3               	movwf	LCD_array@y+1
  2846  04CD  3006               	movlw	low (STR_5| (0+32768))
  2847  04CE  00A4               	movwf	LCD_array@date
  2848  04CF  3086               	movlw	high (STR_5| (0+32768))
  2849  04D0  00A5               	movwf	LCD_array@date+1
  2850  04D1  120A  158A  2188   	fcall	_LCD_array
  2851  04D4  0008               	return
  2852  04D5                     l4582:
  2853  04D5  3004               	movlw	4
  2854  04D6  066A               	xorwf	_Modo,w
  2855  04D7  1D03               	btfss	3,2
  2856  04D8  0008               	return
  2857  04D9  3003               	movlw	3
  2858  04DA  00A0               	movwf	LCD_array@x
  2859  04DB  3000               	movlw	0
  2860  04DC  00A1               	movwf	LCD_array@x+1
  2861  04DD  3001               	movlw	1
  2862  04DE  00A2               	movwf	LCD_array@y
  2863  04DF  3000               	movlw	0
  2864  04E0  00A3               	movwf	LCD_array@y+1
  2865  04E1  302F               	movlw	low ((STR_38+19)| (0+32768))
  2866  04E2  00A4               	movwf	LCD_array@date
  2867  04E3  3085               	movlw	high ((STR_38+19)| (0+32768))
  2868  04E4  00A5               	movwf	LCD_array@date+1
  2869  04E5  120A  158A  2188  120A  118A  	fcall	_LCD_array
  2870  04EA  3004               	movlw	4
  2871  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2872  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2873  04ED  00A0               	movwf	LCD_array@x
  2874  04EE  3000               	movlw	0
  2875  04EF  00A1               	movwf	LCD_array@x+1
  2876  04F0  3001               	movlw	1
  2877  04F1  00A2               	movwf	LCD_array@y
  2878  04F2  3000               	movlw	0
  2879  04F3  00A3               	movwf	LCD_array@y+1
  2880  04F4  3006               	movlw	low (STR_5| (0+32768))
  2881  04F5  00A4               	movwf	LCD_array@date
  2882  04F6  3086               	movlw	high (STR_5| (0+32768))
  2883  04F7  00A5               	movwf	LCD_array@date+1
  2884  04F8  120A  158A  2188   	fcall	_LCD_array
  2885  04FB  0008               	return
  2886  04FC                     __end_of_Pant_Selector:
  2887                           
  2888                           	psect	text7
  2889  17B5                     __ptext7:	
  2890 ;; *************** function _Pant_Menu *****************
  2891 ;; Defined at:
  2892 ;;		line 54 in file "Display_Lcd.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		_LCD_array
  2915 ;; This function is called by:
  2916 ;;		_Select_Modo
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function _Pant_Menu
  2922  17B5                     _Pant_Menu:
  2923                           
  2924                           ;Display_Lcd.c: 56:     LCD_array(1,3,"PULVERIZACION");
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _Pant_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2928  17B5  3001               	movlw	1
  2929  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  2930  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  2931  17B8  00A0               	movwf	LCD_array@x
  2932  17B9  3000               	movlw	0
  2933  17BA  00A1               	movwf	LCD_array@x+1
  2934  17BB  3003               	movlw	3
  2935  17BC  00A2               	movwf	LCD_array@y
  2936  17BD  3000               	movlw	0
  2937  17BE  00A3               	movwf	LCD_array@y+1
  2938  17BF  3088               	movlw	low ((STR_33+4)| (0+32768))
  2939  17C0  00A4               	movwf	LCD_array@date
  2940  17C1  3085               	movlw	high ((STR_33+4)| (0+32768))
  2941  17C2  00A5               	movwf	LCD_array@date+1
  2942  17C3  120A  158A  2188  160A  118A  	fcall	_LCD_array
  2943                           
  2944                           ;Display_Lcd.c: 57:     LCD_array(2,3,"FUGA");
  2945  17C8  3002               	movlw	2
  2946  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  2947  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  2948  17CB  00A0               	movwf	LCD_array@x
  2949  17CC  3000               	movlw	0
  2950  17CD  00A1               	movwf	LCD_array@x+1
  2951  17CE  3003               	movlw	3
  2952  17CF  00A2               	movwf	LCD_array@y
  2953  17D0  3000               	movlw	0
  2954  17D1  00A3               	movwf	LCD_array@y+1
  2955  17D2  30E5               	movlw	low ((STR_35+4)| (0+32768))
  2956  17D3  00A4               	movwf	LCD_array@date
  2957  17D4  3085               	movlw	high ((STR_35+4)| (0+32768))
  2958  17D5  00A5               	movwf	LCD_array@date+1
  2959  17D6  120A  158A  2188  160A  118A  	fcall	_LCD_array
  2960                           
  2961                           ;Display_Lcd.c: 58:     LCD_array(3,3,"FLUJO");
  2962  17DB  3003               	movlw	3
  2963  17DC  1283               	bcf	3,5	;RP0=0, select bank0
  2964  17DD  1303               	bcf	3,6	;RP1=0, select bank0
  2965  17DE  00A0               	movwf	LCD_array@x
  2966  17DF  3000               	movlw	0
  2967  17E0  00A1               	movwf	LCD_array@x+1
  2968  17E1  3003               	movlw	3
  2969  17E2  00A2               	movwf	LCD_array@y
  2970  17E3  3000               	movlw	0
  2971  17E4  00A3               	movwf	LCD_array@y+1
  2972  17E5  30DB               	movlw	low ((STR_37+4)| (0+32768))
  2973  17E6  00A4               	movwf	LCD_array@date
  2974  17E7  3085               	movlw	high ((STR_37+4)| (0+32768))
  2975  17E8  00A5               	movwf	LCD_array@date+1
  2976  17E9  120A  158A  2188  160A  118A  	fcall	_LCD_array
  2977                           
  2978                           ;Display_Lcd.c: 59:     LCD_array(4,3,"LIMP. ULTRASONIDO");
  2979  17EE  3004               	movlw	4
  2980  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  2981  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  2982  17F1  00A0               	movwf	LCD_array@x
  2983  17F2  3000               	movlw	0
  2984  17F3  00A1               	movwf	LCD_array@x+1
  2985  17F4  3003               	movlw	3
  2986  17F5  00A2               	movwf	LCD_array@y
  2987  17F6  3000               	movlw	0
  2988  17F7  00A3               	movwf	LCD_array@y+1
  2989  17F8  3096               	movlw	low (STR_17| (0+32768))
  2990  17F9  00A4               	movwf	LCD_array@date
  2991  17FA  3085               	movlw	high (STR_17| (0+32768))
  2992  17FB  00A5               	movwf	LCD_array@date+1
  2993  17FC  120A  158A  2188   	fcall	_LCD_array
  2994  17FF  0008               	return
  2995  1800                     __end_of_Pant_Menu:
  2996                           
  2997                           	psect	text8
  2998  0C68                     __ptext8:	
  2999 ;; *************** function _Pant_Inicio *****************
  3000 ;; Defined at:
  3001 ;;		line 8 in file "Display_Lcd.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  caracter        8   18[BANK0 ] unsigned char [8]
  3006 ;;  caracter1       8   10[BANK0 ] unsigned char [8]
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         0      16       0       0       0
  3018 ;;      Temps:          0       4       0       0       0
  3019 ;;      Totals:         0      20       0       0       0
  3020 ;;Total ram usage:       20 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    4
  3023 ;; This function calls:
  3024 ;;		_LCD_array
  3025 ;;		_LCD_character
  3026 ;;		_LCD_command
  3027 ;; This function is called by:
  3028 ;;		_MEF_Actualizacion
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _Pant_Inicio
  3034  0C68                     _Pant_Inicio:
  3035                           
  3036                           ;Display_Lcd.c: 11:     char caracter1[8] =
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3040  0C68  302A               	movlw	Pant_Inicio@caracter1& (0+255)
  3041  0C69  0084               	movwf	4
  3042  0C6A  30BB               	movlw	low Pant_Inicio@F1330
  3043  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0C6D  00A6               	movwf	??_Pant_Inicio
  3046  0C6E  0804               	movf	4,w
  3047  0C6F  00A7               	movwf	??_Pant_Inicio+1
  3048  0C70  3008               	movlw	8
  3049  0C71  00A8               	movwf	??_Pant_Inicio+2
  3050  0C72                     u4760:
  3051  0C72  0826               	movf	??_Pant_Inicio,w
  3052  0C73  0084               	movwf	4
  3053  0C74  1383               	bcf	3,7	;select IRP bank1
  3054  0C75  0800               	movf	0,w
  3055  0C76  00A9               	movwf	??_Pant_Inicio+3
  3056  0C77  0AA6               	incf	??_Pant_Inicio,f
  3057  0C78  0827               	movf	??_Pant_Inicio+1,w
  3058  0C79  0084               	movwf	4
  3059  0C7A  0829               	movf	??_Pant_Inicio+3,w
  3060  0C7B  0080               	movwf	0
  3061  0C7C  0AA7               	incf	??_Pant_Inicio+1,f
  3062  0C7D  0BA8               	decfsz	??_Pant_Inicio+2,f
  3063  0C7E  2C72               	goto	u4760
  3064                           
  3065                           ;Display_Lcd.c: 22:     LCD_character(0x01,caracter1);
  3066  0C7F  302A               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  3067  0C80  00FF               	movwf	127
  3068  0C81  087F               	movf	127,w
  3069  0C82  00F6               	movwf	LCD_character@caracter
  3070  0C83  3001               	movlw	1
  3071  0C84  160A  118A  251A  120A  158A  	fcall	_LCD_character
  3072                           
  3073                           ;Display_Lcd.c: 25:     char caracter[8] = {0,0,0,0,0,0,0,0};
  3074  0C89  3032               	movlw	Pant_Inicio@caracter& (0+255)
  3075  0C8A  0084               	movwf	4
  3076  0C8B  3008               	movlw	8
  3077  0C8C  00FF               	movwf	127
  3078  0C8D                     u4770:
  3079  0C8D  1383               	bcf	3,7	;select IRP bank0
  3080  0C8E  0180               	clrf	0
  3081  0C8F  0A84               	incf	4,f
  3082  0C90  0BFF               	decfsz	127,f
  3083  0C91  2C8D               	goto	u4770
  3084                           
  3085                           ;Display_Lcd.c: 26:     LCD_character(0x00,caracter);
  3086  0C92  3032               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  3087  0C93  00FF               	movwf	127
  3088  0C94  087F               	movf	127,w
  3089  0C95  00F6               	movwf	LCD_character@caracter
  3090  0C96  3000               	movlw	0
  3091  0C97  160A  118A  251A  120A  158A  	fcall	_LCD_character
  3092                           
  3093                           ;Display_Lcd.c: 29:     LCD_command(0x01);
  3094  0C9C  3001               	movlw	1
  3095  0C9D  120A  158A  2684  120A  158A  	fcall	_LCD_command
  3096                           
  3097                           ;Display_Lcd.c: 30:     LCD_array(1,1,"====================");
  3098  0CA2  3001               	movlw	1
  3099  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0CA5  00A0               	movwf	LCD_array@x
  3102  0CA6  3000               	movlw	0
  3103  0CA7  00A1               	movwf	LCD_array@x+1
  3104  0CA8  3001               	movlw	1
  3105  0CA9  00A2               	movwf	LCD_array@y
  3106  0CAA  3000               	movlw	0
  3107  0CAB  00A3               	movwf	LCD_array@y+1
  3108  0CAC  305B               	movlw	low (STR_1| (0+32768))
  3109  0CAD  00A4               	movwf	LCD_array@date
  3110  0CAE  3085               	movlw	high (STR_1| (0+32768))
  3111  0CAF  00A5               	movwf	LCD_array@date+1
  3112  0CB0  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3113                           
  3114                           ;Display_Lcd.c: 31:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  3115  0CB5  3002               	movlw	2
  3116  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0CB8  00A0               	movwf	LCD_array@x
  3119  0CB9  3000               	movlw	0
  3120  0CBA  00A1               	movwf	LCD_array@x+1
  3121  0CBB  3001               	movlw	1
  3122  0CBC  00A2               	movwf	LCD_array@y
  3123  0CBD  3000               	movlw	0
  3124  0CBE  00A3               	movwf	LCD_array@y+1
  3125  0CBF  3046               	movlw	low (STR_2| (0+32768))
  3126  0CC0  00A4               	movwf	LCD_array@date
  3127  0CC1  3085               	movlw	high (STR_2| (0+32768))
  3128  0CC2  00A5               	movwf	LCD_array@date+1
  3129  0CC3  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3130                           
  3131                           ;Display_Lcd.c: 32:     LCD_array(3,1,"   DE INYECTORES    ");
  3132  0CC8  3003               	movlw	3
  3133  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0CCB  00A0               	movwf	LCD_array@x
  3136  0CCC  3000               	movlw	0
  3137  0CCD  00A1               	movwf	LCD_array@x+1
  3138  0CCE  3001               	movlw	1
  3139  0CCF  00A2               	movwf	LCD_array@y
  3140  0CD0  3000               	movlw	0
  3141  0CD1  00A3               	movwf	LCD_array@y+1
  3142  0CD2  3031               	movlw	low (STR_3| (0+32768))
  3143  0CD3  00A4               	movwf	LCD_array@date
  3144  0CD4  3085               	movlw	high (STR_3| (0+32768))
  3145  0CD5  00A5               	movwf	LCD_array@date+1
  3146  0CD6  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3147                           
  3148                           ;Display_Lcd.c: 33:     LCD_array(4,1,"====================");
  3149  0CDB  3004               	movlw	4
  3150  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0CDE  00A0               	movwf	LCD_array@x
  3153  0CDF  3000               	movlw	0
  3154  0CE0  00A1               	movwf	LCD_array@x+1
  3155  0CE1  3001               	movlw	1
  3156  0CE2  00A2               	movwf	LCD_array@y
  3157  0CE3  3000               	movlw	0
  3158  0CE4  00A3               	movwf	LCD_array@y+1
  3159  0CE5  305B               	movlw	low (STR_1| (0+32768))
  3160  0CE6  00A4               	movwf	LCD_array@date
  3161  0CE7  3085               	movlw	high (STR_1| (0+32768))
  3162  0CE8  00A5               	movwf	LCD_array@date+1
  3163  0CE9  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3164                           
  3165                           ;Display_Lcd.c: 34:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  3166  0CEE  3033               	movlw	51
  3167  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0CF1  00A8               	movwf	??_Pant_Inicio+2
  3170  0CF2  30BB               	movlw	187
  3171  0CF3  00A7               	movwf	??_Pant_Inicio+1
  3172  0CF4  30DF               	movlw	223
  3173  0CF5  00A6               	movwf	??_Pant_Inicio
  3174  0CF6                     u5387:
  3175  0CF6  0BA6               	decfsz	??_Pant_Inicio,f
  3176  0CF7  2CF6               	goto	u5387
  3177  0CF8  0BA7               	decfsz	??_Pant_Inicio+1,f
  3178  0CF9  2CF6               	goto	u5387
  3179  0CFA  0BA8               	decfsz	??_Pant_Inicio+2,f
  3180  0CFB  2CF6               	goto	u5387
  3181                           
  3182                           ;Display_Lcd.c: 37:     LCD_command(0x01);
  3183  0CFC  3001               	movlw	1
  3184  0CFD  120A  158A  2684  120A  158A  	fcall	_LCD_command
  3185                           
  3186                           ;Display_Lcd.c: 39:     LCD_array(1,1,">");
  3187  0D02  3001               	movlw	1
  3188  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0D05  00A0               	movwf	LCD_array@x
  3191  0D06  3000               	movlw	0
  3192  0D07  00A1               	movwf	LCD_array@x+1
  3193  0D08  3001               	movlw	1
  3194  0D09  00A2               	movwf	LCD_array@y
  3195  0D0A  3000               	movlw	0
  3196  0D0B  00A3               	movwf	LCD_array@y+1
  3197  0D0C  3006               	movlw	low (STR_5| (0+32768))
  3198  0D0D  00A4               	movwf	LCD_array@date
  3199  0D0E  3086               	movlw	high (STR_5| (0+32768))
  3200  0D0F  00A5               	movwf	LCD_array@date+1
  3201  0D10  120A  158A  2188   	fcall	_LCD_array
  3202  0D13  0008               	return
  3203  0D14                     __end_of_Pant_Inicio:
  3204                           
  3205                           	psect	text9
  3206  151A                     __ptext9:	
  3207 ;; *************** function _LCD_character *****************
  3208 ;; Defined at:
  3209 ;;		line 197 in file "Lcd.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  adress          1    wreg     unsigned char 
  3212 ;;  caracter        1    6[COMMON] PTR unsigned char 
  3213 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  adress          1    0[BANK0 ] unsigned char 
  3216 ;;  i               1    1[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         1       0       0       0       0
  3227 ;;      Locals:         0       2       0       0       0
  3228 ;;      Temps:          1       0       0       0       0
  3229 ;;      Totals:         2       2       0       0       0
  3230 ;;Total ram usage:        4 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    3
  3233 ;; This function calls:
  3234 ;;		_LCD_command
  3235 ;;		_LCD_date
  3236 ;; This function is called by:
  3237 ;;		_Pant_Inicio
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _LCD_character
  3243  151A                     _LCD_character:
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3247                           ;LCD_character@adress stored from wreg
  3248  151A  1283               	bcf	3,5	;RP0=0, select bank0
  3249  151B  1303               	bcf	3,6	;RP1=0, select bank0
  3250  151C  00A0               	movwf	LCD_character@adress
  3251                           
  3252                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  3253  151D  0820               	movf	LCD_character@adress,w
  3254  151E  00F7               	movwf	??_LCD_character
  3255  151F  3002               	movlw	2
  3256  1520                     u4745:
  3257  1520  1003               	clrc
  3258  1521  0DF7               	rlf	??_LCD_character,f
  3259  1522  3EFF               	addlw	-1
  3260  1523  1D03               	skipz
  3261  1524  2D20               	goto	u4745
  3262  1525  1003               	clrc
  3263  1526  0D77               	rlf	??_LCD_character,w
  3264  1527  3E40               	addlw	64
  3265  1528  120A  158A  2684  160A  118A  	fcall	_LCD_command
  3266                           
  3267                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  3268  152D  1283               	bcf	3,5	;RP0=0, select bank0
  3269  152E  1303               	bcf	3,6	;RP1=0, select bank0
  3270  152F  01A1               	clrf	LCD_character@i
  3271  1530                     l4596:
  3272                           
  3273                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  3274  1530  0821               	movf	LCD_character@i,w
  3275  1531  0776               	addwf	LCD_character@caracter,w
  3276  1532  00F7               	movwf	??_LCD_character
  3277  1533  0877               	movf	??_LCD_character,w
  3278  1534  0084               	movwf	4
  3279  1535  1383               	bcf	3,7	;select IRP bank0
  3280  1536  0800               	movf	0,w
  3281  1537  120A  158A  2514  160A  118A  	fcall	_LCD_date
  3282                           
  3283                           ;Lcd.c: 203:     }
  3284  153C  3001               	movlw	1
  3285  153D  00FF               	movwf	127
  3286  153E  087F               	movf	127,w
  3287  153F  1283               	bcf	3,5	;RP0=0, select bank0
  3288  1540  1303               	bcf	3,6	;RP1=0, select bank0
  3289  1541  07A1               	addwf	LCD_character@i,f
  3290  1542  3008               	movlw	8
  3291  1543  0221               	subwf	LCD_character@i,w
  3292  1544  1803               	btfsc	3,0
  3293  1545  0008               	return
  3294  1546  2D30               	goto	l4596
  3295  1547                     __end_of_LCD_character:
  3296                           
  3297                           	psect	text10
  3298  0354                     __ptext10:	
  3299 ;; *************** function _MEF_Subest_Actualizacion *****************
  3300 ;; Defined at:
  3301 ;;		line 102 in file "MEF.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       2       0       0
  3318 ;;      Totals:         0       0       2       0       0
  3319 ;;Total ram usage:        2 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    6
  3322 ;; This function calls:
  3323 ;;		_Antirrebote
  3324 ;;		_Detener
  3325 ;;		_Fin_Proceso
  3326 ;;		_LCD_command
  3327 ;;		_Lec_Adc_Modo_Flujo
  3328 ;;		_Lec_Adc_Modo_Fuga
  3329 ;;		_Lec_Adc_Modo_Pulv
  3330 ;;		_Pant_Flujo
  3331 ;;		_Pant_Fuga
  3332 ;;		_Pant_Modos
  3333 ;;		_Pant_Pulverizacion
  3334 ;;		_Pant_Temporizador
  3335 ;;		_Pant_Val_Act
  3336 ;;		_Salida_Modo_Flujo
  3337 ;;		_Salida_Modo_Fuga
  3338 ;;		_Salida_Modo_Pulv
  3339 ;; This function is called by:
  3340 ;;		_MEF_Actualizacion
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function _MEF_Subest_Actualizacion
  3346  0354                     _MEF_Subest_Actualizacion:
  3347                           
  3348                           ;MEF.c: 104:     switch(Subestado_Actual)
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _MEF_Subest_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  3352  0354  2C40               	goto	l4746
  3353  0355                     l4654:
  3354                           
  3355                           ;MEF.c: 107:         {;MEF.c: 108:             if(Estado_Actual==ESTADO_MODO_PULV) Pant_
      +                          Pulverizacion();
  3356  0355  3002               	movlw	2
  3357  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0358  0661               	xorwf	_Estado_Actual,w
  3360  0359  1D03               	btfss	3,2
  3361  035A  2B61               	goto	l4658
  3362  035B  160A  118A  265F  120A  118A  	fcall	_Pant_Pulverizacion
  3363  0360  2B74               	goto	l238
  3364  0361                     l4658:
  3365  0361  3003               	movlw	3
  3366  0362  0661               	xorwf	_Estado_Actual,w
  3367  0363  1D03               	btfss	3,2
  3368  0364  2B6B               	goto	l4662
  3369  0365  160A  118A  2623  120A  118A  	fcall	_Pant_Fuga
  3370  036A  2B74               	goto	l238
  3371  036B                     l4662:
  3372  036B  3004               	movlw	4
  3373  036C  0661               	xorwf	_Estado_Actual,w
  3374  036D  1D03               	btfss	3,2
  3375  036E  2B74               	goto	l238
  3376  036F  160A  118A  25E7  120A  118A  	fcall	_Pant_Flujo
  3377  0374                     l238:
  3378                           
  3379                           ;MEF.c: 112:             Pant_Modos();
  3380  0374  120A  158A  23DC   	fcall	_Pant_Modos
  3381                           
  3382                           ;MEF.c: 114:             Subestado_Actual = SUBEST_DISPLAY;
  3383  0377  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0378  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0379  01B8               	clrf	_Subestado_Actual^(0+128)
  3386  037A  0AB8               	incf	_Subestado_Actual^(0+128),f
  3387                           
  3388                           ;MEF.c: 115:         break;
  3389  037B  0008               	return
  3390  037C                     l4668:
  3391                           
  3392                           ;MEF.c: 118:         {;MEF.c: 119:             Pant_Val_Act();
  3393  037C  120A  158A  273E   	fcall	_Pant_Val_Act
  3394                           
  3395                           ;MEF.c: 121:             Subestado_Actual = SUBEST_ADC;
  3396  037F  3002               	movlw	2
  3397  0380  00FF               	movwf	127
  3398  0381  087F               	movf	127,w
  3399  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3400  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3401  0384  00B8               	movwf	_Subestado_Actual^(0+128)
  3402                           
  3403                           ;MEF.c: 122:         break;
  3404  0385  0008               	return
  3405  0386                     l4672:
  3406                           
  3407                           ;MEF.c: 125:         {;MEF.c: 126:             if(Estado_Actual==ESTADO_MODO_PULV) Lec_A
      +                          dc_Modo_Pulv();
  3408  0386  3002               	movlw	2
  3409  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0389  0661               	xorwf	_Estado_Actual,w
  3412  038A  1D03               	btfss	3,2
  3413  038B  2B92               	goto	l4676
  3414  038C  160A  118A  23EA  120A  118A  	fcall	_Lec_Adc_Modo_Pulv
  3415  0391  2BA5               	goto	l4684
  3416  0392                     l4676:
  3417  0392  3003               	movlw	3
  3418  0393  0661               	xorwf	_Estado_Actual,w
  3419  0394  1D03               	btfss	3,2
  3420  0395  2B9C               	goto	l4680
  3421  0396  160A  118A  23C2  120A  118A  	fcall	_Lec_Adc_Modo_Fuga
  3422  039B  2BA5               	goto	l4684
  3423  039C                     l4680:
  3424  039C  3004               	movlw	4
  3425  039D  0661               	xorwf	_Estado_Actual,w
  3426  039E  1D03               	btfss	3,2
  3427  039F  2BA5               	goto	l4684
  3428  03A0  160A  118A  23B9  120A  118A  	fcall	_Lec_Adc_Modo_Flujo
  3429  03A5                     l4684:
  3430                           
  3431                           ;MEF.c: 130:             if(PORTBbits.RB3) mod_tiempo=!mod_tiempo,Antirrebote();
  3432  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3433  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3434  03A7  1D86               	btfss	6,3	;volatile
  3435  03A8  2BB7               	goto	l4690
  3436  03A9  0864               	movf	_mod_tiempo,w
  3437  03AA  1D03               	btfss	3,2
  3438  03AB  2BAE               	goto	u4900
  3439  03AC  3001               	movlw	1
  3440  03AD  2BAF               	goto	u4910
  3441  03AE                     u4900:
  3442  03AE  3000               	movlw	0
  3443  03AF                     u4910:
  3444  03AF  00FF               	movwf	127
  3445  03B0  087F               	movf	127,w
  3446  03B1  00E4               	movwf	_mod_tiempo
  3447  03B2  120A  118A  27D8  120A  118A  	fcall	_Antirrebote
  3448  03B7                     l4690:
  3449                           
  3450                           ;MEF.c: 132:             if(Act_Variables) Subestado_Actual = SUBEST_DISPLAY,Act_Variabl
      +                          es=0;
  3451  03B7  087A               	movf	_Act_Variables,w
  3452  03B8  1903               	btfsc	3,2
  3453  03B9  2BBF               	goto	l4696
  3454  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3455  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3456  03BC  01B8               	clrf	_Subestado_Actual^(0+128)
  3457  03BD  0AB8               	incf	_Subestado_Actual^(0+128),f
  3458  03BE  01FA               	clrf	_Act_Variables
  3459  03BF                     l4696:
  3460                           
  3461                           ;MEF.c: 133:             if(PORTBbits.RB0) Subestado_Actual = SUBEST_SALIDA,Antirrebote(
      +                          ),Output=!Output;
  3462  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3463  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3464  03C1  1C06               	btfss	6,0	;volatile
  3465  03C2  0008               	return
  3466  03C3  3003               	movlw	3
  3467  03C4  00FF               	movwf	127
  3468  03C5  087F               	movf	127,w
  3469  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  3470  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  3471  03C8  00B8               	movwf	_Subestado_Actual^(0+128)
  3472  03C9  120A  118A  27D8  120A  118A  	fcall	_Antirrebote
  3473  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3474  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3475  03D0  0863               	movf	_Output,w
  3476  03D1  1D03               	btfss	3,2
  3477  03D2  2BD5               	goto	u4940
  3478  03D3  3001               	movlw	1
  3479  03D4  2BD6               	goto	u4950
  3480  03D5                     u4940:
  3481  03D5  3000               	movlw	0
  3482  03D6                     u4950:
  3483  03D6  00FF               	movwf	127
  3484  03D7  087F               	movf	127,w
  3485  03D8  00E3               	movwf	_Output
  3486  03D9  0008               	return
  3487  03DA                     l4704:
  3488                           
  3489                           ;MEF.c: 137:         {;MEF.c: 138:             if(Estado_Actual==ESTADO_MODO_PULV) Salid
      +                          a_Modo_Pulv();
  3490  03DA  3002               	movlw	2
  3491  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  3492  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  3493  03DD  0661               	xorwf	_Estado_Actual,w
  3494  03DE  1D03               	btfss	3,2
  3495  03DF  2BE6               	goto	l4708
  3496  03E0  120A  118A  27FF  120A  118A  	fcall	_Salida_Modo_Pulv
  3497  03E5  2BF9               	goto	l4716
  3498  03E6                     l4708:
  3499  03E6  3003               	movlw	3
  3500  03E7  0661               	xorwf	_Estado_Actual,w
  3501  03E8  1D03               	btfss	3,2
  3502  03E9  2BF0               	goto	l4712
  3503  03EA  160A  118A  239E  120A  118A  	fcall	_Salida_Modo_Fuga
  3504  03EF  2BF9               	goto	l4716
  3505  03F0                     l4712:
  3506  03F0  3004               	movlw	4
  3507  03F1  0661               	xorwf	_Estado_Actual,w
  3508  03F2  1D03               	btfss	3,2
  3509  03F3  2BF9               	goto	l4716
  3510  03F4  160A  118A  239A  120A  118A  	fcall	_Salida_Modo_Flujo
  3511  03F9                     l4716:
  3512                           
  3513                           ;MEF.c: 142:             if(Temporizador) Subestado_Actual = SUBEST_TIEMPO;
  3514  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3515  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3516  03FB  0839               	movf	_Temporizador^(0+128),w
  3517  03FC  1903               	btfsc	3,2
  3518  03FD  2C02               	goto	l4720
  3519  03FE  3004               	movlw	4
  3520  03FF  00FF               	movwf	127
  3521  0400  087F               	movf	127,w
  3522  0401  00B8               	movwf	_Subestado_Actual^(0+128)
  3523  0402                     l4720:
  3524                           
  3525                           ;MEF.c: 143:             if(PORTBbits.RB2) Subestado_Actual = SUBEST_INICIAL,Detener();
  3526  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0404  1D06               	btfss	6,2	;volatile
  3529  0405  0008               	return
  3530  0406  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0407  1303               	bcf	3,6	;RP1=0, select bank1
  3532  0408  01B8               	clrf	_Subestado_Actual^(0+128)
  3533  0409  120A  158A  201D   	fcall	_Detener
  3534  040C  0008               	return
  3535  040D                     l4726:
  3536                           
  3537                           ;MEF.c: 147:         {;MEF.c: 148:             Pant_Temporizador();
  3538  040D  160A  118A  276A  120A  118A  	fcall	_Pant_Temporizador
  3539                           
  3540                           ;MEF.c: 149:             Fin_Proceso();
  3541  0412  120A  158A  2070  120A  118A  	fcall	_Fin_Proceso
  3542                           
  3543                           ;MEF.c: 151:             if(Output) Subestado_Actual = SUBEST_SALIDA;
  3544  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0419  0863               	movf	_Output,w
  3547  041A  1903               	btfsc	3,2
  3548  041B  2C23               	goto	l4732
  3549  041C  3003               	movlw	3
  3550  041D  00FF               	movwf	127
  3551  041E  087F               	movf	127,w
  3552  041F  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0420  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0421  00B8               	movwf	_Subestado_Actual^(0+128)
  3555  0422  0008               	return
  3556  0423                     l4732:
  3557  0423  3005               	movlw	5
  3558  0424  00FF               	movwf	127
  3559  0425  087F               	movf	127,w
  3560  0426  1683               	bsf	3,5	;RP0=1, select bank1
  3561  0427  1303               	bcf	3,6	;RP1=0, select bank1
  3562  0428  00B8               	movwf	_Subestado_Actual^(0+128)
  3563  0429  0008               	return
  3564  042A                     l4734:
  3565                           
  3566                           ;MEF.c: 156:         {;MEF.c: 157:             Rpm=0,Pwm=0,Min=0,Seg=0,Temp=0,Modo=0;
  3567  042A  01AE               	clrf	_Rpm^(0+128)
  3568  042B  01AF               	clrf	(_Rpm+1)^(0+128)
  3569  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3570  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3571  042E  01E9               	clrf	_Pwm
  3572  042F  01E8               	clrf	_Min
  3573  0430  01E7               	clrf	_Seg
  3574  0431  01E6               	clrf	_Temp
  3575  0432  01EA               	clrf	_Modo
  3576                           
  3577                           ;MEF.c: 158:             PORTBbits.RB4=0;
  3578  0433  1206               	bcf	6,4	;volatile
  3579                           
  3580                           ;MEF.c: 159:             LCD_command(0x01);
  3581  0434  3001               	movlw	1
  3582  0435  120A  158A  2684   	fcall	_LCD_command
  3583                           
  3584                           ;MEF.c: 160:             Reset = 1;
  3585  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3587  043A  01E2               	clrf	_Reset
  3588  043B  0AE2               	incf	_Reset,f
  3589                           
  3590                           ;MEF.c: 162:             Subestado_Actual = SUBEST_INICIAL;
  3591  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3592  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3593  043E  01B8               	clrf	_Subestado_Actual^(0+128)
  3594                           
  3595                           ;MEF.c: 163:         break;
  3596  043F  0008               	return
  3597  0440                     l4746:
  3598  0440  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0441  1303               	bcf	3,6	;RP1=0, select bank1
  3600  0442  0838               	movf	_Subestado_Actual^(0+128),w
  3601  0443  00C3               	movwf	??_MEF_Subest_Actualizacion^(0+128)
  3602  0444  01C4               	clrf	(??_MEF_Subest_Actualizacion^(0+128)+1)
  3603                           
  3604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3605                           ; Switch size 1, requested type "simple"
  3606                           ; Number of cases is 1, Range of values is 0 to 0
  3607                           ; switch strategies available:
  3608                           ; Name         Instructions Cycles
  3609                           ; simple_byte            4     3 (average)
  3610                           ; direct_byte           11     8 (fixed)
  3611                           ; jumptable            260     6 (fixed)
  3612                           ;	Chosen strategy is simple_byte
  3613  0445  0844               	movf	(??_MEF_Subest_Actualizacion+1)^(0+128),w
  3614  0446  3A00               	xorlw	0	; case 0
  3615  0447  1903               	skipnz
  3616  0448  2C4A               	goto	l5128
  3617  0449  2C5E               	goto	l265
  3618  044A                     l5128:
  3619                           
  3620                           ; Switch size 1, requested type "simple"
  3621                           ; Number of cases is 6, Range of values is 0 to 5
  3622                           ; switch strategies available:
  3623                           ; Name         Instructions Cycles
  3624                           ; simple_byte           19    10 (average)
  3625                           ; direct_byte           26     8 (fixed)
  3626                           ; jumptable            260     6 (fixed)
  3627                           ;	Chosen strategy is simple_byte
  3628  044A  0843               	movf	??_MEF_Subest_Actualizacion^(0+128),w
  3629  044B  3A00               	xorlw	0	; case 0
  3630  044C  1903               	skipnz
  3631  044D  2B55               	goto	l4654
  3632  044E  3A01               	xorlw	1	; case 1
  3633  044F  1903               	skipnz
  3634  0450  2B7C               	goto	l4668
  3635  0451  3A03               	xorlw	3	; case 2
  3636  0452  1903               	skipnz
  3637  0453  2B86               	goto	l4672
  3638  0454  3A01               	xorlw	1	; case 3
  3639  0455  1903               	skipnz
  3640  0456  2BDA               	goto	l4704
  3641  0457  3A07               	xorlw	7	; case 4
  3642  0458  1903               	skipnz
  3643  0459  2C0D               	goto	l4726
  3644  045A  3A01               	xorlw	1	; case 5
  3645  045B  1903               	skipnz
  3646  045C  2C2A               	goto	l4734
  3647  045D  2C5E               	goto	l265
  3648  045E                     l265:
  3649  045E  0008               	return
  3650  045F                     __end_of_MEF_Subest_Actualizacion:
  3651                           
  3652                           	psect	text11
  3653  07FF                     __ptext11:	
  3654 ;; *************** function _Salida_Modo_Pulv *****************
  3655 ;; Defined at:
  3656 ;;		line 21 in file "Modo_Pulverizacion.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		None
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    2
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_MEF_Subest_Actualizacion
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _Salida_Modo_Pulv
  3686  07FF                     _Salida_Modo_Pulv:
  3687                           
  3688                           ;Modo_Pulverizacion.c: 25:     return;
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _Salida_Modo_Pulv: []
  3692  07FF  0008               	return
  3693  0800                     __end_of_Salida_Modo_Pulv:
  3694                           
  3695                           	psect	text12
  3696  139E                     __ptext12:	
  3697 ;; *************** function _Salida_Modo_Fuga *****************
  3698 ;; Defined at:
  3699 ;;		line 15 in file "Modo_Fuga.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		None
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    2
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_MEF_Subest_Actualizacion
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _Salida_Modo_Fuga
  3729  139E                     _Salida_Modo_Fuga:
  3730                           
  3731                           ;Modo_Fuga.c: 17:     PORTBbits.RB4=0;
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _Salida_Modo_Fuga: []
  3735  139E  1283               	bcf	3,5	;RP0=0, select bank0
  3736  139F  1303               	bcf	3,6	;RP1=0, select bank0
  3737  13A0  1206               	bcf	6,4	;volatile
  3738                           
  3739                           ;Modo_Fuga.c: 19:     return;
  3740  13A1  0008               	return
  3741  13A2                     __end_of_Salida_Modo_Fuga:
  3742                           
  3743                           	psect	text13
  3744  139A                     __ptext13:	
  3745 ;; *************** function _Salida_Modo_Flujo *****************
  3746 ;; Defined at:
  3747 ;;		line 15 in file "Modo_Flujo.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		None
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    2
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_MEF_Subest_Actualizacion
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _Salida_Modo_Flujo
  3777  139A                     _Salida_Modo_Flujo:
  3778                           
  3779                           ;Modo_Flujo.c: 17:     PORTBbits.RB4=1;
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _Salida_Modo_Flujo: []
  3783  139A  1283               	bcf	3,5	;RP0=0, select bank0
  3784  139B  1303               	bcf	3,6	;RP1=0, select bank0
  3785  139C  1606               	bsf	6,4	;volatile
  3786                           
  3787                           ;Modo_Flujo.c: 19:     return;
  3788  139D  0008               	return
  3789  139E                     __end_of_Salida_Modo_Flujo:
  3790                           
  3791                           	psect	text14
  3792  0F3E                     __ptext14:	
  3793 ;; *************** function _Pant_Val_Act *****************
  3794 ;; Defined at:
  3795 ;;		line 76 in file "Display_Lcd.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  buffer         20   28[BANK0 ] unsigned char [20]
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       0       0       0       0
  3810 ;;      Locals:         0      20       0       0       0
  3811 ;;      Temps:          0       2       0       0       0
  3812 ;;      Totals:         0      22       0       0       0
  3813 ;;Total ram usage:       22 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    4
  3816 ;; This function calls:
  3817 ;;		_LCD_array
  3818 ;;		_sprintf
  3819 ;; This function is called by:
  3820 ;;		_MEF_Subest_Actualizacion
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _Pant_Val_Act
  3826  0F3E                     _Pant_Val_Act:
  3827                           
  3828                           ;Display_Lcd.c: 78:     char buffer[20];;Display_Lcd.c: 80:     sprintf(buffer,"%05u",Rp
      +                          m);
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _Pant_Val_Act: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3832  0F3E  3001               	movlw	low (STR_24| (0+32768))
  3833  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0F41  00A9               	movwf	sprintf@f
  3836  0F42  3086               	movlw	high (STR_24| (0+32768))
  3837  0F43  00AA               	movwf	sprintf@f+1
  3838  0F44  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0F45  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0F46  082F               	movf	(_Rpm+1)^(0+128),w
  3841  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0F49  00AC               	movwf	?_sprintf+3
  3844  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0F4C  082E               	movf	_Rpm^(0+128),w
  3847  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0F4F  00AB               	movwf	?_sprintf+2
  3850  0F50  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3851  0F51  120A  118A  204D  120A  158A  	fcall	_sprintf
  3852                           
  3853                           ;Display_Lcd.c: 81:     LCD_array(1,5,buffer);
  3854  0F56  3001               	movlw	1
  3855  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  3856  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  3857  0F59  00A0               	movwf	LCD_array@x
  3858  0F5A  3000               	movlw	0
  3859  0F5B  00A1               	movwf	LCD_array@x+1
  3860  0F5C  3005               	movlw	5
  3861  0F5D  00A2               	movwf	LCD_array@y
  3862  0F5E  3000               	movlw	0
  3863  0F5F  00A3               	movwf	LCD_array@y+1
  3864  0F60  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3865  0F61  00A4               	movwf	LCD_array@date
  3866  0F62  3000               	movlw	0
  3867  0F63  00A5               	movwf	LCD_array@date+1
  3868  0F64  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3869                           
  3870                           ;Display_Lcd.c: 82:     sprintf(buffer,"%02d",Pwm);
  3871  0F69  30FC               	movlw	low (STR_25| (0+32768))
  3872  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3874  0F6C  00A9               	movwf	sprintf@f
  3875  0F6D  3085               	movlw	high (STR_25| (0+32768))
  3876  0F6E  00AA               	movwf	sprintf@f+1
  3877  0F6F  0869               	movf	_Pwm,w
  3878  0F70  00BA               	movwf	??_Pant_Val_Act
  3879  0F71  01BB               	clrf	??_Pant_Val_Act+1
  3880  0F72  083A               	movf	??_Pant_Val_Act,w
  3881  0F73  00AB               	movwf	?_sprintf+2
  3882  0F74  083B               	movf	??_Pant_Val_Act+1,w
  3883  0F75  00AC               	movwf	?_sprintf+3
  3884  0F76  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3885  0F77  120A  118A  204D  120A  158A  	fcall	_sprintf
  3886                           
  3887                           ;Display_Lcd.c: 83:     LCD_array(2,5,buffer);
  3888  0F7C  3002               	movlw	2
  3889  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0F7F  00A0               	movwf	LCD_array@x
  3892  0F80  3000               	movlw	0
  3893  0F81  00A1               	movwf	LCD_array@x+1
  3894  0F82  3005               	movlw	5
  3895  0F83  00A2               	movwf	LCD_array@y
  3896  0F84  3000               	movlw	0
  3897  0F85  00A3               	movwf	LCD_array@y+1
  3898  0F86  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3899  0F87  00A4               	movwf	LCD_array@date
  3900  0F88  3000               	movlw	0
  3901  0F89  00A5               	movwf	LCD_array@date+1
  3902  0F8A  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3903                           
  3904                           ;Display_Lcd.c: 84:     sprintf(buffer,"%02d",Min);
  3905  0F8F  30FC               	movlw	low (STR_25| (0+32768))
  3906  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0F92  00A9               	movwf	sprintf@f
  3909  0F93  3085               	movlw	high (STR_25| (0+32768))
  3910  0F94  00AA               	movwf	sprintf@f+1
  3911  0F95  0868               	movf	_Min,w
  3912  0F96  00BA               	movwf	??_Pant_Val_Act
  3913  0F97  01BB               	clrf	??_Pant_Val_Act+1
  3914  0F98  083A               	movf	??_Pant_Val_Act,w
  3915  0F99  00AB               	movwf	?_sprintf+2
  3916  0F9A  083B               	movf	??_Pant_Val_Act+1,w
  3917  0F9B  00AC               	movwf	?_sprintf+3
  3918  0F9C  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3919  0F9D  120A  118A  204D  120A  158A  	fcall	_sprintf
  3920                           
  3921                           ;Display_Lcd.c: 85:     LCD_array(3,8,buffer);
  3922  0FA2  3003               	movlw	3
  3923  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0FA5  00A0               	movwf	LCD_array@x
  3926  0FA6  3000               	movlw	0
  3927  0FA7  00A1               	movwf	LCD_array@x+1
  3928  0FA8  3008               	movlw	8
  3929  0FA9  00A2               	movwf	LCD_array@y
  3930  0FAA  3000               	movlw	0
  3931  0FAB  00A3               	movwf	LCD_array@y+1
  3932  0FAC  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3933  0FAD  00A4               	movwf	LCD_array@date
  3934  0FAE  3000               	movlw	0
  3935  0FAF  00A5               	movwf	LCD_array@date+1
  3936  0FB0  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3937                           
  3938                           ;Display_Lcd.c: 86:     sprintf(buffer,"%02d",Seg);
  3939  0FB5  30FC               	movlw	low (STR_25| (0+32768))
  3940  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0FB8  00A9               	movwf	sprintf@f
  3943  0FB9  3085               	movlw	high (STR_25| (0+32768))
  3944  0FBA  00AA               	movwf	sprintf@f+1
  3945  0FBB  0867               	movf	_Seg,w
  3946  0FBC  00BA               	movwf	??_Pant_Val_Act
  3947  0FBD  01BB               	clrf	??_Pant_Val_Act+1
  3948  0FBE  083A               	movf	??_Pant_Val_Act,w
  3949  0FBF  00AB               	movwf	?_sprintf+2
  3950  0FC0  083B               	movf	??_Pant_Val_Act+1,w
  3951  0FC1  00AC               	movwf	?_sprintf+3
  3952  0FC2  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3953  0FC3  120A  118A  204D  120A  158A  	fcall	_sprintf
  3954                           
  3955                           ;Display_Lcd.c: 87:     LCD_array(3,11,buffer);
  3956  0FC8  3003               	movlw	3
  3957  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0FCB  00A0               	movwf	LCD_array@x
  3960  0FCC  3000               	movlw	0
  3961  0FCD  00A1               	movwf	LCD_array@x+1
  3962  0FCE  300B               	movlw	11
  3963  0FCF  00A2               	movwf	LCD_array@y
  3964  0FD0  3000               	movlw	0
  3965  0FD1  00A3               	movwf	LCD_array@y+1
  3966  0FD2  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3967  0FD3  00A4               	movwf	LCD_array@date
  3968  0FD4  3000               	movlw	0
  3969  0FD5  00A5               	movwf	LCD_array@date+1
  3970  0FD6  120A  158A  2188  120A  158A  	fcall	_LCD_array
  3971                           
  3972                           ;Display_Lcd.c: 88:     sprintf(buffer,"%02d",Temp);
  3973  0FDB  30FC               	movlw	low (STR_25| (0+32768))
  3974  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0FDE  00A9               	movwf	sprintf@f
  3977  0FDF  3085               	movlw	high (STR_25| (0+32768))
  3978  0FE0  00AA               	movwf	sprintf@f+1
  3979  0FE1  0866               	movf	_Temp,w
  3980  0FE2  00BA               	movwf	??_Pant_Val_Act
  3981  0FE3  01BB               	clrf	??_Pant_Val_Act+1
  3982  0FE4  083A               	movf	??_Pant_Val_Act,w
  3983  0FE5  00AB               	movwf	?_sprintf+2
  3984  0FE6  083B               	movf	??_Pant_Val_Act+1,w
  3985  0FE7  00AC               	movwf	?_sprintf+3
  3986  0FE8  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  3987  0FE9  120A  118A  204D  120A  158A  	fcall	_sprintf
  3988                           
  3989                           ;Display_Lcd.c: 89:     LCD_array(4,13,buffer);
  3990  0FEE  3004               	movlw	4
  3991  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0FF1  00A0               	movwf	LCD_array@x
  3994  0FF2  3000               	movlw	0
  3995  0FF3  00A1               	movwf	LCD_array@x+1
  3996  0FF4  300D               	movlw	13
  3997  0FF5  00A2               	movwf	LCD_array@y
  3998  0FF6  3000               	movlw	0
  3999  0FF7  00A3               	movwf	LCD_array@y+1
  4000  0FF8  303C               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4001  0FF9  00A4               	movwf	LCD_array@date
  4002  0FFA  3000               	movlw	0
  4003  0FFB  00A5               	movwf	LCD_array@date+1
  4004  0FFC  120A  158A  2188   	fcall	_LCD_array
  4005  0FFF  0008               	return
  4006  1000                     __end_of_Pant_Val_Act:
  4007                           
  4008                           	psect	text15
  4009  176A                     __ptext15:	
  4010 ;; *************** function _Pant_Temporizador *****************
  4011 ;; Defined at:
  4012 ;;		line 94 in file "Display_Lcd.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  buffer         20   28[BANK0 ] unsigned char [20]
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         0       0       0       0       0
  4027 ;;      Locals:         0      20       0       0       0
  4028 ;;      Temps:          0       2       0       0       0
  4029 ;;      Totals:         0      22       0       0       0
  4030 ;;Total ram usage:       22 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		_LCD_array
  4035 ;;		_sprintf
  4036 ;; This function is called by:
  4037 ;;		_MEF_Subest_Actualizacion
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _Pant_Temporizador
  4043  176A                     _Pant_Temporizador:
  4044                           
  4045                           ;Display_Lcd.c: 96:     char buffer[20];;Display_Lcd.c: 98:     sprintf(buffer,"%02d",Mi
      +                          n);
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _Pant_Temporizador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4049  176A  30FC               	movlw	low (STR_25| (0+32768))
  4050  176B  1283               	bcf	3,5	;RP0=0, select bank0
  4051  176C  1303               	bcf	3,6	;RP1=0, select bank0
  4052  176D  00A9               	movwf	sprintf@f
  4053  176E  3085               	movlw	high (STR_25| (0+32768))
  4054  176F  00AA               	movwf	sprintf@f+1
  4055  1770  0868               	movf	_Min,w
  4056  1771  00BA               	movwf	??_Pant_Temporizador
  4057  1772  01BB               	clrf	??_Pant_Temporizador+1
  4058  1773  083A               	movf	??_Pant_Temporizador,w
  4059  1774  00AB               	movwf	?_sprintf+2
  4060  1775  083B               	movf	??_Pant_Temporizador+1,w
  4061  1776  00AC               	movwf	?_sprintf+3
  4062  1777  303C               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4063  1778  120A  118A  204D  160A  118A  	fcall	_sprintf
  4064                           
  4065                           ;Display_Lcd.c: 99:     LCD_array(3,8,buffer);
  4066  177D  3003               	movlw	3
  4067  177E  1283               	bcf	3,5	;RP0=0, select bank0
  4068  177F  1303               	bcf	3,6	;RP1=0, select bank0
  4069  1780  00A0               	movwf	LCD_array@x
  4070  1781  3000               	movlw	0
  4071  1782  00A1               	movwf	LCD_array@x+1
  4072  1783  3008               	movlw	8
  4073  1784  00A2               	movwf	LCD_array@y
  4074  1785  3000               	movlw	0
  4075  1786  00A3               	movwf	LCD_array@y+1
  4076  1787  303C               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4077  1788  00A4               	movwf	LCD_array@date
  4078  1789  3000               	movlw	0
  4079  178A  00A5               	movwf	LCD_array@date+1
  4080  178B  120A  158A  2188  160A  118A  	fcall	_LCD_array
  4081                           
  4082                           ;Display_Lcd.c: 100:     sprintf(buffer,"%02d",Seg);
  4083  1790  30FC               	movlw	low (STR_25| (0+32768))
  4084  1791  1283               	bcf	3,5	;RP0=0, select bank0
  4085  1792  1303               	bcf	3,6	;RP1=0, select bank0
  4086  1793  00A9               	movwf	sprintf@f
  4087  1794  3085               	movlw	high (STR_25| (0+32768))
  4088  1795  00AA               	movwf	sprintf@f+1
  4089  1796  0867               	movf	_Seg,w
  4090  1797  00BA               	movwf	??_Pant_Temporizador
  4091  1798  01BB               	clrf	??_Pant_Temporizador+1
  4092  1799  083A               	movf	??_Pant_Temporizador,w
  4093  179A  00AB               	movwf	?_sprintf+2
  4094  179B  083B               	movf	??_Pant_Temporizador+1,w
  4095  179C  00AC               	movwf	?_sprintf+3
  4096  179D  303C               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4097  179E  120A  118A  204D  160A  118A  	fcall	_sprintf
  4098                           
  4099                           ;Display_Lcd.c: 101:     LCD_array(3,11,buffer);
  4100  17A3  3003               	movlw	3
  4101  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  4102  17A5  1303               	bcf	3,6	;RP1=0, select bank0
  4103  17A6  00A0               	movwf	LCD_array@x
  4104  17A7  3000               	movlw	0
  4105  17A8  00A1               	movwf	LCD_array@x+1
  4106  17A9  300B               	movlw	11
  4107  17AA  00A2               	movwf	LCD_array@y
  4108  17AB  3000               	movlw	0
  4109  17AC  00A3               	movwf	LCD_array@y+1
  4110  17AD  303C               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4111  17AE  00A4               	movwf	LCD_array@date
  4112  17AF  3000               	movlw	0
  4113  17B0  00A5               	movwf	LCD_array@date+1
  4114  17B1  120A  158A  2188   	fcall	_LCD_array
  4115  17B4  0008               	return
  4116  17B5                     __end_of_Pant_Temporizador:
  4117                           
  4118                           	psect	text16
  4119  004D                     __ptext16:	
  4120 ;; *************** function _sprintf *****************
  4121 ;; Defined at:
  4122 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  sp              1    wreg     PTR unsigned char 
  4125 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4126 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  4127 ;;		 -> STR_30(5), STR_29(5), STR_28(5), STR_27(5), 
  4128 ;;		 -> STR_26(5), STR_25(5), STR_24(5), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  4131 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4132 ;;  tmpval          4    0        struct .
  4133 ;;  width           2   22[BANK0 ] int 
  4134 ;;  val             2   19[BANK0 ] unsigned int 
  4135 ;;  cp              2    0        PTR const unsigned char 
  4136 ;;  len             2    0        unsigned int 
  4137 ;;  c               1   24[BANK0 ] unsigned char 
  4138 ;;  flag            1   21[BANK0 ] unsigned char 
  4139 ;;  ap              1   18[BANK0 ] PTR void [1]
  4140 ;;		 -> ?_sprintf(2), 
  4141 ;;  prec            1   17[BANK0 ] char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    9[BANK0 ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4151 ;;      Params:         0       4       0       0       0
  4152 ;;      Locals:         0       9       0       0       0
  4153 ;;      Temps:          0       4       0       0       0
  4154 ;;      Totals:         0      17       0       0       0
  4155 ;;Total ram usage:       17 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    3
  4158 ;; This function calls:
  4159 ;;		___lwdiv
  4160 ;;		___lwmod
  4161 ;;		___wmul
  4162 ;;		_isdigit
  4163 ;; This function is called by:
  4164 ;;		_Pant_Val_Act
  4165 ;;		_Pant_Temporizador
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _sprintf
  4171  004D                     _sprintf:
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4175                           ;sprintf@sp stored from wreg
  4176  004D  1283               	bcf	3,5	;RP0=0, select bank0
  4177  004E  1303               	bcf	3,6	;RP1=0, select bank0
  4178  004F  00B9               	movwf	sprintf@sp
  4179                           
  4180                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  4181  0050  302B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4182  0051  00FF               	movwf	127
  4183  0052  087F               	movf	127,w
  4184  0053  00B2               	movwf	sprintf@ap
  4185  0054                     l4430:	
  4186                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4187                           
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4190  0054  082A               	movf	sprintf@f+1,w
  4191  0055  00AE               	movwf	??_sprintf+1
  4192  0056  0829               	movf	sprintf@f,w
  4193  0057  00AD               	movwf	??_sprintf
  4194  0058  0AA9               	incf	sprintf@f,f
  4195  0059  1903               	skipnz
  4196  005A  0AAA               	incf	sprintf@f+1,f
  4197  005B  082E               	movf	??_sprintf+1,w
  4198  005C  00FF               	movwf	127
  4199  005D  082D               	movf	??_sprintf,w
  4200  005E  0084               	movwf	4
  4201  005F  120A  118A  2500  120A  118A  	fcall	stringtab
  4202  0064  00FF               	movwf	127
  4203  0065  087F               	movf	127,w
  4204  0066  00B8               	movwf	sprintf@c
  4205  0067  0838               	movf	sprintf@c,w
  4206  0068  1903               	btfsc	3,2
  4207  0069  2A27               	goto	l4432
  4208                           
  4209                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4210  006A  3025               	movlw	37
  4211  006B  0638               	xorwf	sprintf@c,w
  4212  006C  1903               	btfsc	3,2
  4213  006D  287A               	goto	l4328
  4214                           
  4215                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4216  006E  0838               	movf	sprintf@c,w
  4217  006F  00FF               	movwf	127
  4218  0070  0839               	movf	sprintf@sp,w
  4219  0071  0084               	movwf	4
  4220  0072  087F               	movf	127,w
  4221  0073  1383               	bcf	3,7	;select IRP bank0
  4222  0074  0080               	movwf	0
  4223  0075  3001               	movlw	1
  4224  0076  00FF               	movwf	127
  4225  0077  087F               	movf	127,w
  4226  0078  07B9               	addwf	sprintf@sp,f
  4227                           
  4228                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  4229  0079  2854               	goto	l4430
  4230  007A                     l4328:
  4231                           
  4232                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  4233  007A  01B6               	clrf	sprintf@width
  4234  007B  01B7               	clrf	sprintf@width+1
  4235                           
  4236                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4237  007C  01B5               	clrf	sprintf@flag
  4238  007D  2885               	goto	l4334
  4239  007E                     l710:	
  4240                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 596:    case '0':
  4241                           
  4242                           
  4243                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  4244  007E  1535               	bsf	sprintf@flag,2
  4245                           
  4246                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 598:     f++;
  4247  007F  3001               	movlw	1
  4248  0080  07A9               	addwf	sprintf@f,f
  4249  0081  1803               	skipnc
  4250  0082  0AAA               	incf	sprintf@f+1,f
  4251  0083  3000               	movlw	0
  4252  0084  07AA               	addwf	sprintf@f+1,f
  4253  0085                     l4334:	
  4254                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  4255                           
  4256  0085  082A               	movf	sprintf@f+1,w
  4257  0086  00FF               	movwf	127
  4258  0087  0829               	movf	sprintf@f,w
  4259  0088  0084               	movwf	4
  4260  0089  120A  118A  2500  120A  118A  	fcall	stringtab
  4261  008E  00AD               	movwf	??_sprintf
  4262  008F  01AE               	clrf	??_sprintf+1
  4263                           
  4264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4265                           ; Switch size 1, requested type "simple"
  4266                           ; Number of cases is 1, Range of values is 0 to 0
  4267                           ; switch strategies available:
  4268                           ; Name         Instructions Cycles
  4269                           ; simple_byte            4     3 (average)
  4270                           ; direct_byte           11     8 (fixed)
  4271                           ; jumptable            260     6 (fixed)
  4272                           ;	Chosen strategy is simple_byte
  4273  0090  082E               	movf	??_sprintf+1,w
  4274  0091  3A00               	xorlw	0	; case 0
  4275  0092  1903               	skipnz
  4276  0093  2895               	goto	l5130
  4277  0094  289A               	goto	l4336
  4278  0095                     l5130:
  4279                           
  4280                           ; Switch size 1, requested type "simple"
  4281                           ; Number of cases is 1, Range of values is 48 to 48
  4282                           ; switch strategies available:
  4283                           ; Name         Instructions Cycles
  4284                           ; simple_byte            4     3 (average)
  4285                           ; direct_byte           14    11 (fixed)
  4286                           ; jumptable            263     9 (fixed)
  4287                           ;	Chosen strategy is simple_byte
  4288  0095  082D               	movf	??_sprintf,w
  4289  0096  3A30               	xorlw	48	; case 48
  4290  0097  1903               	skipnz
  4291  0098  287E               	goto	l710
  4292  0099  289A               	goto	l4336
  4293  009A                     l4336:
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  4296  009A  082A               	movf	sprintf@f+1,w
  4297  009B  00FF               	movwf	127
  4298  009C  0829               	movf	sprintf@f,w
  4299  009D  0084               	movwf	4
  4300  009E  120A  118A  2500  120A  118A  	fcall	stringtab
  4301  00A3  160A  118A  23CB  120A  118A  	fcall	_isdigit
  4302  00A8  1C03               	btfss	3,0
  4303  00A9  28F1               	goto	l4350
  4304                           
  4305                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  4306  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4307  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4308  00AC  01B6               	clrf	sprintf@width
  4309  00AD  01B7               	clrf	sprintf@width+1
  4310  00AE                     l4340:
  4311                           
  4312                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  4313  00AE  300A               	movlw	10
  4314  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  4315  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  4316  00B1  00A3               	movwf	___wmul@multiplier
  4317  00B2  3000               	movlw	0
  4318  00B3  00A4               	movwf	___wmul@multiplier+1
  4319  00B4  0837               	movf	sprintf@width+1,w
  4320  00B5  00A6               	movwf	___wmul@multiplicand+1
  4321  00B6  0836               	movf	sprintf@width,w
  4322  00B7  00A5               	movwf	___wmul@multiplicand
  4323  00B8  160A  118A  242E  120A  118A  	fcall	___wmul
  4324  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  4325  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  4326  00BF  0824               	movf	?___wmul+1,w
  4327  00C0  00B7               	movwf	sprintf@width+1
  4328  00C1  0823               	movf	?___wmul,w
  4329  00C2  00B6               	movwf	sprintf@width
  4330                           
  4331                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  4332  00C3  082A               	movf	sprintf@f+1,w
  4333  00C4  00FF               	movwf	127
  4334  00C5  0829               	movf	sprintf@f,w
  4335  00C6  0084               	movwf	4
  4336  00C7  120A  118A  2500  120A  118A  	fcall	stringtab
  4337  00CC  3ED0               	addlw	208
  4338  00CD  00AD               	movwf	??_sprintf
  4339  00CE  30FF               	movlw	255
  4340  00CF  1803               	skipnc
  4341  00D0  3000               	movlw	0
  4342  00D1  00AE               	movwf	??_sprintf+1
  4343  00D2  082D               	movf	??_sprintf,w
  4344  00D3  07B6               	addwf	sprintf@width,f
  4345  00D4  1803               	skipnc
  4346  00D5  0AB7               	incf	sprintf@width+1,f
  4347  00D6  082E               	movf	??_sprintf+1,w
  4348  00D7  07B7               	addwf	sprintf@width+1,f
  4349  00D8  3001               	movlw	1
  4350  00D9  07A9               	addwf	sprintf@f,f
  4351  00DA  1803               	skipnc
  4352  00DB  0AAA               	incf	sprintf@f+1,f
  4353  00DC  3000               	movlw	0
  4354  00DD  07AA               	addwf	sprintf@f+1,f
  4355                           
  4356                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  4357  00DE  082A               	movf	sprintf@f+1,w
  4358  00DF  00FF               	movwf	127
  4359  00E0  0829               	movf	sprintf@f,w
  4360  00E1  0084               	movwf	4
  4361  00E2  120A  118A  2500  120A  118A  	fcall	stringtab
  4362  00E7  160A  118A  23CB  120A  118A  	fcall	_isdigit
  4363  00EC  1C03               	btfss	3,0
  4364  00ED  28F1               	goto	l4350
  4365  00EE  28AE               	goto	l4340
  4366  00EF                     l724:	
  4367                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  4368                           
  4369                           
  4370                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  4371  00EF  1735               	bsf	sprintf@flag,6
  4372                           
  4373                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 845:    break;
  4374  00F0  2919               	goto	l722
  4375  00F1                     l4350:
  4376  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  4377  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  4378  00F3  082A               	movf	sprintf@f+1,w
  4379  00F4  00AE               	movwf	??_sprintf+1
  4380  00F5  0829               	movf	sprintf@f,w
  4381  00F6  00AD               	movwf	??_sprintf
  4382  00F7  0AA9               	incf	sprintf@f,f
  4383  00F8  1903               	skipnz
  4384  00F9  0AAA               	incf	sprintf@f+1,f
  4385  00FA  082E               	movf	??_sprintf+1,w
  4386  00FB  00FF               	movwf	127
  4387  00FC  082D               	movf	??_sprintf,w
  4388  00FD  0084               	movwf	4
  4389  00FE  120A  118A  2500  120A  118A  	fcall	stringtab
  4390  0103  00B8               	movwf	sprintf@c
  4391  0104  00AF               	movwf	??_sprintf+2
  4392  0105  01B0               	clrf	??_sprintf+3
  4393                           
  4394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4395                           ; Switch size 1, requested type "simple"
  4396                           ; Number of cases is 1, Range of values is 0 to 0
  4397                           ; switch strategies available:
  4398                           ; Name         Instructions Cycles
  4399                           ; simple_byte            4     3 (average)
  4400                           ; direct_byte           11     8 (fixed)
  4401                           ; jumptable            260     6 (fixed)
  4402                           ;	Chosen strategy is simple_byte
  4403  0106  0830               	movf	??_sprintf+3,w
  4404  0107  3A00               	xorlw	0	; case 0
  4405  0108  1903               	skipnz
  4406  0109  290B               	goto	l5132
  4407  010A  2854               	goto	l4430
  4408  010B                     l5132:
  4409                           
  4410                           ; Switch size 1, requested type "simple"
  4411                           ; Number of cases is 4, Range of values is 0 to 117
  4412                           ; switch strategies available:
  4413                           ; Name         Instructions Cycles
  4414                           ; simple_byte           13     7 (average)
  4415                           ; jumptable            260     6 (fixed)
  4416                           ;	Chosen strategy is simple_byte
  4417  010B  082F               	movf	??_sprintf+2,w
  4418  010C  3A00               	xorlw	0	; case 0
  4419  010D  1903               	skipnz
  4420  010E  2A27               	goto	l4432
  4421  010F  3A64               	xorlw	100	; case 100
  4422  0110  1903               	skipnz
  4423  0111  2919               	goto	l722
  4424  0112  3A0D               	xorlw	13	; case 105
  4425  0113  1903               	skipnz
  4426  0114  2919               	goto	l722
  4427  0115  3A1C               	xorlw	28	; case 117
  4428  0116  1903               	skipnz
  4429  0117  28EF               	goto	l724
  4430  0118  2854               	goto	l4430
  4431  0119                     l722:
  4432                           
  4433                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  4434  0119  1B35               	btfsc	sprintf@flag,6
  4435  011A  2933               	goto	l4362
  4436                           
  4437                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4438  011B  0832               	movf	sprintf@ap,w
  4439  011C  0084               	movwf	4
  4440  011D  1383               	bcf	3,7	;select IRP bank0
  4441  011E  0800               	movf	0,w
  4442  011F  00B3               	movwf	sprintf@val
  4443  0120  0A84               	incf	4,f
  4444  0121  0800               	movf	0,w
  4445  0122  00B4               	movwf	sprintf@val+1
  4446  0123  3002               	movlw	2
  4447  0124  00FF               	movwf	127
  4448  0125  087F               	movf	127,w
  4449  0126  07B2               	addwf	sprintf@ap,f
  4450                           
  4451                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4452  0127  1FB4               	btfss	sprintf@val+1,7
  4453  0128  293F               	goto	l4366
  4454                           
  4455                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4456  0129  3003               	movlw	3
  4457  012A  00FF               	movwf	127
  4458  012B  087F               	movf	127,w
  4459  012C  04B5               	iorwf	sprintf@flag,f
  4460                           
  4461                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4462  012D  09B3               	comf	sprintf@val,f
  4463  012E  09B4               	comf	sprintf@val+1,f
  4464  012F  0AB3               	incf	sprintf@val,f
  4465  0130  1903               	skipnz
  4466  0131  0AB4               	incf	sprintf@val+1,f
  4467  0132  293F               	goto	l4366
  4468  0133                     l4362:
  4469                           
  4470                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4471  0133  0832               	movf	sprintf@ap,w
  4472  0134  0084               	movwf	4
  4473  0135  1383               	bcf	3,7	;select IRP bank0
  4474  0136  0800               	movf	0,w
  4475  0137  00B3               	movwf	sprintf@val
  4476  0138  0A84               	incf	4,f
  4477  0139  0800               	movf	0,w
  4478  013A  00B4               	movwf	sprintf@val+1
  4479  013B  3002               	movlw	2
  4480  013C  00FF               	movwf	127
  4481  013D  087F               	movf	127,w
  4482  013E  07B2               	addwf	sprintf@ap,f
  4483  013F                     l4366:
  4484                           
  4485                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4486  013F  01B8               	clrf	sprintf@c
  4487  0140  0AB8               	incf	sprintf@c,f
  4488  0141                     l4372:
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4491  0141  0838               	movf	sprintf@c,w
  4492  0142  00AD               	movwf	??_sprintf
  4493  0143  072D               	addwf	??_sprintf,w
  4494  0144  3E12               	addlw	low (_dpowers| (0+32768))
  4495  0145  0084               	movwf	4
  4496  0146  3085               	movlw	high (_dpowers| (0+32768))
  4497  0147  1803               	skipnc
  4498  0148  3E01               	addlw	1
  4499  0149  00FF               	movwf	127
  4500  014A  120A  118A  2500  120A  118A  	fcall	stringtab
  4501  014F  00AE               	movwf	??_sprintf+1
  4502  0150  120A  118A  2500  120A  118A  	fcall	stringtab
  4503  0155  00AF               	movwf	??_sprintf+2
  4504  0156  082F               	movf	??_sprintf+2,w
  4505  0157  0234               	subwf	sprintf@val+1,w
  4506  0158  1D03               	skipz
  4507  0159  295C               	goto	u4485
  4508  015A  082E               	movf	??_sprintf+1,w
  4509  015B  0233               	subwf	sprintf@val,w
  4510  015C                     u4485:
  4511  015C  1C03               	btfss	3,0
  4512  015D  2966               	goto	l4380
  4513  015E  3001               	movlw	1
  4514  015F  00FF               	movwf	127
  4515  0160  087F               	movf	127,w
  4516  0161  07B8               	addwf	sprintf@c,f
  4517  0162  3005               	movlw	5
  4518  0163  0638               	xorwf	sprintf@c,w
  4519  0164  1D03               	btfss	3,2
  4520  0165  2941               	goto	l4372
  4521  0166                     l4380:
  4522                           
  4523                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4524  0166  0836               	movf	sprintf@width,w
  4525  0167  0437               	iorwf	sprintf@width+1,w
  4526  0168  1903               	btfsc	3,2
  4527  0169  2974               	goto	l731
  4528  016A  0835               	movf	sprintf@flag,w
  4529  016B  3903               	andlw	3
  4530  016C  1903               	btfsc	3,2
  4531  016D  2974               	goto	l731
  4532                           
  4533                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4534  016E  30FF               	movlw	255
  4535  016F  07B6               	addwf	sprintf@width,f
  4536  0170  1803               	skipnc
  4537  0171  0AB7               	incf	sprintf@width+1,f
  4538  0172  30FF               	movlw	255
  4539  0173  07B7               	addwf	sprintf@width+1,f
  4540  0174                     l731:
  4541                           
  4542                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4543  0174  0837               	movf	sprintf@width+1,w
  4544  0175  3A80               	xorlw	128
  4545  0176  3C80               	sublw	128
  4546  0177  1D03               	skipz
  4547  0178  297B               	goto	u4525
  4548  0179  0836               	movf	sprintf@width,w
  4549  017A  0238               	subwf	sprintf@c,w
  4550  017B                     u4525:
  4551  017B  1803               	skipnc
  4552  017C  2989               	goto	l4388
  4553                           
  4554                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4555  017D  1283               	bcf	3,5	;RP0=0, select bank0
  4556  017E  1303               	bcf	3,6	;RP1=0, select bank0
  4557  017F  0838               	movf	sprintf@c,w
  4558  0180  00AD               	movwf	??_sprintf
  4559  0181  01AE               	clrf	??_sprintf+1
  4560  0182  082D               	movf	??_sprintf,w
  4561  0183  02B6               	subwf	sprintf@width,f
  4562  0184  082E               	movf	??_sprintf+1,w
  4563  0185  1C03               	skipc
  4564  0186  03B7               	decf	sprintf@width+1,f
  4565  0187  02B7               	subwf	sprintf@width+1,f
  4566  0188  298D               	goto	l4390
  4567  0189                     l4388:
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4570  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4571  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4572  018B  01B6               	clrf	sprintf@width
  4573  018C  01B7               	clrf	sprintf@width+1
  4574  018D                     l4390:
  4575                           
  4576                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  4577  018D  1D35               	btfss	sprintf@flag,2
  4578  018E  29B4               	goto	l4406
  4579                           
  4580                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  4581  018F  0835               	movf	sprintf@flag,w
  4582  0190  3903               	andlw	3
  4583  0191  1903               	btfsc	3,2
  4584  0192  299E               	goto	l4398
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  4587  0193  302D               	movlw	45
  4588  0194  00FF               	movwf	127
  4589  0195  0839               	movf	sprintf@sp,w
  4590  0196  0084               	movwf	4
  4591  0197  087F               	movf	127,w
  4592  0198  1383               	bcf	3,7	;select IRP bank0
  4593  0199  0080               	movwf	0
  4594  019A  3001               	movlw	1
  4595  019B  00FF               	movwf	127
  4596  019C  087F               	movf	127,w
  4597  019D  07B9               	addwf	sprintf@sp,f
  4598  019E                     l4398:
  4599                           
  4600                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  4601  019E  0836               	movf	sprintf@width,w
  4602  019F  0437               	iorwf	sprintf@width+1,w
  4603  01A0  1903               	btfsc	3,2
  4604  01A1  29DC               	goto	l4420
  4605                           
  4606                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  4607  01A2  3030               	movlw	48
  4608  01A3  00FF               	movwf	127
  4609  01A4  0839               	movf	sprintf@sp,w
  4610  01A5  0084               	movwf	4
  4611  01A6  087F               	movf	127,w
  4612  01A7  1383               	bcf	3,7	;select IRP bank0
  4613  01A8  0080               	movwf	0
  4614  01A9  3001               	movlw	1
  4615  01AA  00FF               	movwf	127
  4616  01AB  087F               	movf	127,w
  4617  01AC  07B9               	addwf	sprintf@sp,f
  4618  01AD  30FF               	movlw	255
  4619  01AE  07B6               	addwf	sprintf@width,f
  4620  01AF  1803               	skipnc
  4621  01B0  0AB7               	incf	sprintf@width+1,f
  4622  01B1  30FF               	movlw	255
  4623  01B2  07B7               	addwf	sprintf@width+1,f
  4624  01B3  299E               	goto	l4398
  4625  01B4                     l4406:
  4626                           
  4627                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4628  01B4  0836               	movf	sprintf@width,w
  4629  01B5  0437               	iorwf	sprintf@width+1,w
  4630  01B6  1903               	btfsc	3,2
  4631  01B7  29CD               	goto	l4414
  4632  01B8                     l4408:
  4633                           
  4634                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4635  01B8  3020               	movlw	32
  4636  01B9  00FF               	movwf	127
  4637  01BA  0839               	movf	sprintf@sp,w
  4638  01BB  0084               	movwf	4
  4639  01BC  087F               	movf	127,w
  4640  01BD  1383               	bcf	3,7	;select IRP bank0
  4641  01BE  0080               	movwf	0
  4642  01BF  3001               	movlw	1
  4643  01C0  00FF               	movwf	127
  4644  01C1  087F               	movf	127,w
  4645  01C2  07B9               	addwf	sprintf@sp,f
  4646  01C3  30FF               	movlw	255
  4647  01C4  07B6               	addwf	sprintf@width,f
  4648  01C5  1803               	skipnc
  4649  01C6  0AB7               	incf	sprintf@width+1,f
  4650  01C7  30FF               	movlw	255
  4651  01C8  07B7               	addwf	sprintf@width+1,f
  4652  01C9  0836               	movf	sprintf@width,w
  4653  01CA  0437               	iorwf	sprintf@width+1,w
  4654  01CB  1D03               	btfss	3,2
  4655  01CC  29B8               	goto	l4408
  4656  01CD                     l4414:
  4657                           
  4658                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4659  01CD  0835               	movf	sprintf@flag,w
  4660  01CE  3903               	andlw	3
  4661  01CF  1903               	btfsc	3,2
  4662  01D0  29DC               	goto	l4420
  4663                           
  4664                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4665  01D1  302D               	movlw	45
  4666  01D2  00FF               	movwf	127
  4667  01D3  0839               	movf	sprintf@sp,w
  4668  01D4  0084               	movwf	4
  4669  01D5  087F               	movf	127,w
  4670  01D6  1383               	bcf	3,7	;select IRP bank0
  4671  01D7  0080               	movwf	0
  4672  01D8  3001               	movlw	1
  4673  01D9  00FF               	movwf	127
  4674  01DA  087F               	movf	127,w
  4675  01DB  07B9               	addwf	sprintf@sp,f
  4676  01DC                     l4420:
  4677                           
  4678                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4679  01DC  0838               	movf	sprintf@c,w
  4680  01DD  00FF               	movwf	127
  4681  01DE  087F               	movf	127,w
  4682  01DF  00B1               	movwf	sprintf@prec
  4683  01E0                     l4428:	
  4684                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4685                           
  4686                           
  4687                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4688  01E0  30FF               	movlw	255
  4689  01E1  00FF               	movwf	127
  4690  01E2  087F               	movf	127,w
  4691  01E3  07B1               	addwf	sprintf@prec,f
  4692  01E4  0A31               	incf	sprintf@prec,w
  4693  01E5  1903               	btfsc	3,2
  4694  01E6  2854               	goto	l4430
  4695                           
  4696                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4697  01E7  300A               	movlw	10
  4698  01E8  00A3               	movwf	___lwmod@divisor
  4699  01E9  3000               	movlw	0
  4700  01EA  00A4               	movwf	___lwmod@divisor+1
  4701  01EB  0831               	movf	sprintf@prec,w
  4702  01EC  00AD               	movwf	??_sprintf
  4703  01ED  072D               	addwf	??_sprintf,w
  4704  01EE  3E12               	addlw	low (_dpowers| (0+32768))
  4705  01EF  0084               	movwf	4
  4706  01F0  3085               	movlw	high (_dpowers| (0+32768))
  4707  01F1  1803               	skipnc
  4708  01F2  3E01               	addlw	1
  4709  01F3  00FF               	movwf	127
  4710  01F4  120A  118A  2500  120A  118A  	fcall	stringtab
  4711  01F9  00F3               	movwf	___lwdiv@divisor
  4712  01FA  120A  118A  2500  120A  118A  	fcall	stringtab
  4713  01FF  00F4               	movwf	___lwdiv@divisor+1
  4714  0200  0834               	movf	sprintf@val+1,w
  4715  0201  00F6               	movwf	___lwdiv@dividend+1
  4716  0202  0833               	movf	sprintf@val,w
  4717  0203  00F5               	movwf	___lwdiv@dividend
  4718  0204  160A  118A  269B  120A  118A  	fcall	___lwdiv
  4719  0209  0874               	movf	?___lwdiv+1,w
  4720  020A  1283               	bcf	3,5	;RP0=0, select bank0
  4721  020B  1303               	bcf	3,6	;RP1=0, select bank0
  4722  020C  00A6               	movwf	___lwmod@dividend+1
  4723  020D  0873               	movf	?___lwdiv,w
  4724  020E  00A5               	movwf	___lwmod@dividend
  4725  020F  160A  118A  257A  120A  118A  	fcall	___lwmod
  4726  0214  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0215  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0216  0823               	movf	?___lwmod,w
  4729  0217  3E30               	addlw	48
  4730  0218  00FF               	movwf	127
  4731  0219  087F               	movf	127,w
  4732  021A  00B8               	movwf	sprintf@c
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4735  021B  0838               	movf	sprintf@c,w
  4736  021C  00FF               	movwf	127
  4737  021D  0839               	movf	sprintf@sp,w
  4738  021E  0084               	movwf	4
  4739  021F  087F               	movf	127,w
  4740  0220  1383               	bcf	3,7	;select IRP bank0
  4741  0221  0080               	movwf	0
  4742  0222  3001               	movlw	1
  4743  0223  00FF               	movwf	127
  4744  0224  087F               	movf	127,w
  4745  0225  07B9               	addwf	sprintf@sp,f
  4746  0226  29E0               	goto	l4428
  4747  0227                     l4432:
  4748                           
  4749                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4750  0227  0839               	movf	sprintf@sp,w
  4751  0228  0084               	movwf	4
  4752  0229  1383               	bcf	3,7	;select IRP bank0
  4753  022A  0180               	clrf	0
  4754  022B  0008               	return
  4755  022C                     __end_of_sprintf:
  4756                           
  4757                           	psect	text17
  4758  13CB                     __ptext17:	
  4759 ;; *************** function _isdigit *****************
  4760 ;; Defined at:
  4761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\isdigit.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  c               1    wreg     unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  c               1    4[COMMON] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4775 ;;      Params:         0       0       0       0       0
  4776 ;;      Locals:         2       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0
  4778 ;;      Totals:         2       0       0       0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    2
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_sprintf
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _isdigit
  4791  13CB                     _isdigit:
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4795                           ;isdigit@c stored from wreg
  4796  13CB  00F4               	movwf	isdigit@c
  4797  13CC  01F3               	clrf	_isdigit$1305
  4798  13CD  303A               	movlw	58
  4799  13CE  0274               	subwf	isdigit@c,w
  4800  13CF  1803               	skipnc
  4801  13D0  2BD7               	goto	l2732
  4802  13D1  3030               	movlw	48
  4803  13D2  0274               	subwf	isdigit@c,w
  4804  13D3  1C03               	skipc
  4805  13D4  2BD7               	goto	l2732
  4806  13D5  01F3               	clrf	_isdigit$1305
  4807  13D6  0AF3               	incf	_isdigit$1305,f
  4808  13D7                     l2732:
  4809  13D7  0C73               	rrf	_isdigit$1305,w
  4810  13D8  0008               	return
  4811  13D9                     __end_of_isdigit:
  4812                           
  4813                           	psect	text18
  4814  157A                     __ptext18:	
  4815 ;; *************** function ___lwmod *****************
  4816 ;; Defined at:
  4817 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwmod.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  divisor         2    3[BANK0 ] unsigned int 
  4820 ;;  dividend        2    5[BANK0 ] unsigned int 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  counter         1    7[COMMON] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2    3[BANK0 ] unsigned int 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, btemp+1
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       4       0       0       0
  4833 ;;      Locals:         1       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0
  4835 ;;      Totals:         1       4       0       0       0
  4836 ;;Total ram usage:        5 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    2
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_sprintf
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function ___lwmod
  4848  157A                     ___lwmod:
  4849                           
  4850                           ;incstack = 0
  4851                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4852  157A  1283               	bcf	3,5	;RP0=0, select bank0
  4853  157B  1303               	bcf	3,6	;RP1=0, select bank0
  4854  157C  0823               	movf	___lwmod@divisor,w
  4855  157D  0424               	iorwf	___lwmod@divisor+1,w
  4856  157E  1903               	btfsc	3,2
  4857  157F  2DA9               	goto	l2946
  4858  1580  01F7               	clrf	___lwmod@counter
  4859  1581  0AF7               	incf	___lwmod@counter,f
  4860  1582                     l2936:
  4861  1582  1BA4               	btfsc	___lwmod@divisor+1,7
  4862  1583  2D90               	goto	l2938
  4863  1584  3001               	movlw	1
  4864  1585                     u2525:
  4865  1585  1003               	clrc
  4866  1586  0DA3               	rlf	___lwmod@divisor,f
  4867  1587  0DA4               	rlf	___lwmod@divisor+1,f
  4868  1588  3EFF               	addlw	-1
  4869  1589  1D03               	skipz
  4870  158A  2D85               	goto	u2525
  4871  158B  3001               	movlw	1
  4872  158C  00FF               	movwf	127
  4873  158D  087F               	movf	127,w
  4874  158E  07F7               	addwf	___lwmod@counter,f
  4875  158F  2D82               	goto	l2936
  4876  1590                     l2938:
  4877  1590  0824               	movf	___lwmod@divisor+1,w
  4878  1591  0226               	subwf	___lwmod@dividend+1,w
  4879  1592  1D03               	skipz
  4880  1593  2D96               	goto	u2545
  4881  1594  0823               	movf	___lwmod@divisor,w
  4882  1595  0225               	subwf	___lwmod@dividend,w
  4883  1596                     u2545:
  4884  1596  1C03               	skipc
  4885  1597  2D9E               	goto	l2942
  4886  1598  0823               	movf	___lwmod@divisor,w
  4887  1599  02A5               	subwf	___lwmod@dividend,f
  4888  159A  0824               	movf	___lwmod@divisor+1,w
  4889  159B  1C03               	skipc
  4890  159C  03A6               	decf	___lwmod@dividend+1,f
  4891  159D  02A6               	subwf	___lwmod@dividend+1,f
  4892  159E                     l2942:
  4893  159E  3001               	movlw	1
  4894  159F                     u2555:
  4895  159F  1003               	clrc
  4896  15A0  0CA4               	rrf	___lwmod@divisor+1,f
  4897  15A1  0CA3               	rrf	___lwmod@divisor,f
  4898  15A2  3EFF               	addlw	-1
  4899  15A3  1D03               	skipz
  4900  15A4  2D9F               	goto	u2555
  4901  15A5  3001               	movlw	1
  4902  15A6  02F7               	subwf	___lwmod@counter,f
  4903  15A7  1D03               	btfss	3,2
  4904  15A8  2D90               	goto	l2938
  4905  15A9                     l2946:
  4906  15A9  0826               	movf	___lwmod@dividend+1,w
  4907  15AA  00A4               	movwf	?___lwmod+1
  4908  15AB  0825               	movf	___lwmod@dividend,w
  4909  15AC  00A3               	movwf	?___lwmod
  4910  15AD  0008               	return
  4911  15AE                     __end_of___lwmod:
  4912                           
  4913                           	psect	text19
  4914  165F                     __ptext19:	
  4915 ;; *************** function _Pant_Pulverizacion *****************
  4916 ;; Defined at:
  4917 ;;		line 114 in file "Display_Lcd.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4931 ;;      Params:         0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0
  4933 ;;      Temps:          0       3       0       0       0
  4934 ;;      Totals:         0       3       0       0       0
  4935 ;;Total ram usage:        3 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    4
  4938 ;; This function calls:
  4939 ;;		_LCD_array
  4940 ;;		_LCD_command
  4941 ;; This function is called by:
  4942 ;;		_MEF_Subest_Actualizacion
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _Pant_Pulverizacion
  4948  165F                     _Pant_Pulverizacion:
  4949                           
  4950                           ;Display_Lcd.c: 116:     LCD_command(0x01);
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _Pant_Pulverizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4954  165F  3001               	movlw	1
  4955  1660  120A  158A  2684  160A  118A  	fcall	_LCD_command
  4956                           
  4957                           ;Display_Lcd.c: 117:     LCD_array(2,1,"    Modo Prueba:");
  4958  1665  3002               	movlw	2
  4959  1666  1283               	bcf	3,5	;RP0=0, select bank0
  4960  1667  1303               	bcf	3,6	;RP1=0, select bank0
  4961  1668  00A0               	movwf	LCD_array@x
  4962  1669  3000               	movlw	0
  4963  166A  00A1               	movwf	LCD_array@x+1
  4964  166B  3001               	movlw	1
  4965  166C  00A2               	movwf	LCD_array@y
  4966  166D  3000               	movlw	0
  4967  166E  00A3               	movwf	LCD_array@y+1
  4968  166F  30A8               	movlw	low (STR_32| (0+32768))
  4969  1670  00A4               	movwf	LCD_array@date
  4970  1671  3085               	movlw	high (STR_32| (0+32768))
  4971  1672  00A5               	movwf	LCD_array@date+1
  4972  1673  120A  158A  2188  160A  118A  	fcall	_LCD_array
  4973                           
  4974                           ;Display_Lcd.c: 118:     LCD_array(3,1,"    PULVERIZACION");
  4975  1678  3003               	movlw	3
  4976  1679  1283               	bcf	3,5	;RP0=0, select bank0
  4977  167A  1303               	bcf	3,6	;RP1=0, select bank0
  4978  167B  00A0               	movwf	LCD_array@x
  4979  167C  3000               	movlw	0
  4980  167D  00A1               	movwf	LCD_array@x+1
  4981  167E  3001               	movlw	1
  4982  167F  00A2               	movwf	LCD_array@y
  4983  1680  3000               	movlw	0
  4984  1681  00A3               	movwf	LCD_array@y+1
  4985  1682  3084               	movlw	low (STR_33| (0+32768))
  4986  1683  00A4               	movwf	LCD_array@date
  4987  1684  3085               	movlw	high (STR_33| (0+32768))
  4988  1685  00A5               	movwf	LCD_array@date+1
  4989  1686  120A  158A  2188  160A  118A  	fcall	_LCD_array
  4990                           
  4991                           ;Display_Lcd.c: 119:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  4992  168B  3027               	movlw	39
  4993  168C  1283               	bcf	3,5	;RP0=0, select bank0
  4994  168D  1303               	bcf	3,6	;RP1=0, select bank0
  4995  168E  00A8               	movwf	??_Pant_Pulverizacion+2
  4996  168F  300D               	movlw	13
  4997  1690  00A7               	movwf	??_Pant_Pulverizacion+1
  4998  1691  3025               	movlw	37
  4999  1692  00A6               	movwf	??_Pant_Pulverizacion
  5000  1693                     u5397:
  5001  1693  0BA6               	decfsz	??_Pant_Pulverizacion,f
  5002  1694  2E93               	goto	u5397
  5003  1695  0BA7               	decfsz	??_Pant_Pulverizacion+1,f
  5004  1696  2E93               	goto	u5397
  5005  1697  0BA8               	decfsz	??_Pant_Pulverizacion+2,f
  5006  1698  2E93               	goto	u5397
  5007  1699  2E9A               	nop2
  5008  169A  0008               	return
  5009  169B                     __end_of_Pant_Pulverizacion:
  5010                           
  5011                           	psect	text20
  5012  0BDC                     __ptext20:	
  5013 ;; *************** function _Pant_Modos *****************
  5014 ;; Defined at:
  5015 ;;		line 64 in file "Display_Lcd.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5029 ;;      Params:         0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    4
  5036 ;; This function calls:
  5037 ;;		_LCD_array
  5038 ;;		_LCD_command
  5039 ;;		_LCD_date
  5040 ;;		_LCD_xy
  5041 ;; This function is called by:
  5042 ;;		_MEF_Subest_Actualizacion
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           
  5047                           ;psect for function _Pant_Modos
  5048  0BDC                     _Pant_Modos:
  5049                           
  5050                           ;Display_Lcd.c: 66:     LCD_command(0x01);
  5051                           
  5052                           ;incstack = 0
  5053                           ; Regs used in _Pant_Modos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5054  0BDC  3001               	movlw	1
  5055  0BDD  120A  158A  2684  120A  158A  	fcall	_LCD_command
  5056                           
  5057                           ;Display_Lcd.c: 67:     LCD_array(1,1,"RPM:");
  5058  0BE2  3001               	movlw	1
  5059  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0BE5  00A0               	movwf	LCD_array@x
  5062  0BE6  3000               	movlw	0
  5063  0BE7  00A1               	movwf	LCD_array@x+1
  5064  0BE8  3001               	movlw	1
  5065  0BE9  00A2               	movwf	LCD_array@y
  5066  0BEA  3000               	movlw	0
  5067  0BEB  00A3               	movwf	LCD_array@y+1
  5068  0BEC  30F2               	movlw	low (STR_18| (0+32768))
  5069  0BED  00A4               	movwf	LCD_array@date
  5070  0BEE  3085               	movlw	high (STR_18| (0+32768))
  5071  0BEF  00A5               	movwf	LCD_array@date+1
  5072  0BF0  120A  158A  2188  120A  158A  	fcall	_LCD_array
  5073                           
  5074                           ;Display_Lcd.c: 68:     LCD_array(2,1,"PWM:");
  5075  0BF5  3002               	movlw	2
  5076  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5077  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5078  0BF8  00A0               	movwf	LCD_array@x
  5079  0BF9  3000               	movlw	0
  5080  0BFA  00A1               	movwf	LCD_array@x+1
  5081  0BFB  3001               	movlw	1
  5082  0BFC  00A2               	movwf	LCD_array@y
  5083  0BFD  3000               	movlw	0
  5084  0BFE  00A3               	movwf	LCD_array@y+1
  5085  0BFF  30F7               	movlw	low (STR_19| (0+32768))
  5086  0C00  00A4               	movwf	LCD_array@date
  5087  0C01  3085               	movlw	high (STR_19| (0+32768))
  5088  0C02  00A5               	movwf	LCD_array@date+1
  5089  0C03  120A  158A  2188  120A  158A  	fcall	_LCD_array
  5090                           
  5091                           ;Display_Lcd.c: 69:     LCD_array(3,1,"TIEMPO:"),LCD_array(3,10,":");
  5092  0C08  3003               	movlw	3
  5093  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0C0B  00A0               	movwf	LCD_array@x
  5096  0C0C  3000               	movlw	0
  5097  0C0D  00A1               	movwf	LCD_array@x+1
  5098  0C0E  3001               	movlw	1
  5099  0C0F  00A2               	movwf	LCD_array@y
  5100  0C10  3000               	movlw	0
  5101  0C11  00A3               	movwf	LCD_array@y+1
  5102  0C12  30EA               	movlw	low (STR_20| (0+32768))
  5103  0C13  00A4               	movwf	LCD_array@date
  5104  0C14  3085               	movlw	high (STR_20| (0+32768))
  5105  0C15  00A5               	movwf	LCD_array@date+1
  5106  0C16  120A  158A  2188  120A  158A  	fcall	_LCD_array
  5107  0C1B  3003               	movlw	3
  5108  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  5109  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  5110  0C1E  00A0               	movwf	LCD_array@x
  5111  0C1F  3000               	movlw	0
  5112  0C20  00A1               	movwf	LCD_array@x+1
  5113  0C21  300A               	movlw	10
  5114  0C22  00A2               	movwf	LCD_array@y
  5115  0C23  3000               	movlw	0
  5116  0C24  00A3               	movwf	LCD_array@y+1
  5117  0C25  30D5               	movlw	low ((STR_22+11)| (0+32768))
  5118  0C26  00A4               	movwf	LCD_array@date
  5119  0C27  3085               	movlw	high ((STR_22+11)| (0+32768))
  5120  0C28  00A5               	movwf	LCD_array@date+1
  5121  0C29  120A  158A  2188  120A  158A  	fcall	_LCD_array
  5122                           
  5123                           ;Display_Lcd.c: 70:     LCD_array(4,1,"TEMPERATURA:"),LCD_xy(4,16),LCD_date(0x01);
  5124  0C2E  3004               	movlw	4
  5125  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0C31  00A0               	movwf	LCD_array@x
  5128  0C32  3000               	movlw	0
  5129  0C33  00A1               	movwf	LCD_array@x+1
  5130  0C34  3001               	movlw	1
  5131  0C35  00A2               	movwf	LCD_array@y
  5132  0C36  3000               	movlw	0
  5133  0C37  00A3               	movwf	LCD_array@y+1
  5134  0C38  30CA               	movlw	low (STR_22| (0+32768))
  5135  0C39  00A4               	movwf	LCD_array@date
  5136  0C3A  3085               	movlw	high (STR_22| (0+32768))
  5137  0C3B  00A5               	movwf	LCD_array@date+1
  5138  0C3C  120A  158A  2188  120A  158A  	fcall	_LCD_array
  5139  0C41  3004               	movlw	4
  5140  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0C44  00A0               	movwf	LCD_xy@x
  5143  0C45  3000               	movlw	0
  5144  0C46  00A1               	movwf	LCD_xy@x+1
  5145  0C47  3010               	movlw	16
  5146  0C48  00A2               	movwf	LCD_xy@y
  5147  0C49  3000               	movlw	0
  5148  0C4A  00A3               	movwf	LCD_xy@y+1
  5149  0C4B  160A  118A  2547  120A  158A  	fcall	_LCD_xy
  5150  0C50  3001               	movlw	1
  5151  0C51  120A  158A  2514  120A  158A  	fcall	_LCD_date
  5152                           
  5153                           ;Display_Lcd.c: 71:     LCD_array(4,17,"C");
  5154  0C56  3004               	movlw	4
  5155  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  5156  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  5157  0C59  00A0               	movwf	LCD_array@x
  5158  0C5A  3000               	movlw	0
  5159  0C5B  00A1               	movwf	LCD_array@x+1
  5160  0C5C  3011               	movlw	17
  5161  0C5D  00A2               	movwf	LCD_array@y
  5162  0C5E  3000               	movlw	0
  5163  0C5F  00A3               	movwf	LCD_array@y+1
  5164  0C60  3008               	movlw	low (STR_23| (0+32768))
  5165  0C61  00A4               	movwf	LCD_array@date
  5166  0C62  3086               	movlw	high (STR_23| (0+32768))
  5167  0C63  00A5               	movwf	LCD_array@date+1
  5168  0C64  120A  158A  2188   	fcall	_LCD_array
  5169  0C67  0008               	return
  5170  0C68                     __end_of_Pant_Modos:
  5171                           
  5172                           	psect	text21
  5173  1547                     __ptext21:	
  5174 ;; *************** function _LCD_xy *****************
  5175 ;; Defined at:
  5176 ;;		line 163 in file "Lcd.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  x               2    0[BANK0 ] int 
  5179 ;;  y               2    2[BANK0 ] int 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       4       0       0       0
  5192 ;;      Locals:         0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0
  5194 ;;      Totals:         0       4       0       0       0
  5195 ;;Total ram usage:        4 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    3
  5198 ;; This function calls:
  5199 ;;		_LCD_command
  5200 ;; This function is called by:
  5201 ;;		_Pant_Modos
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _LCD_xy
  5207  1547                     _LCD_xy:
  5208                           
  5209                           ;Lcd.c: 163: void LCD_xy(int x,int y);Lcd.c: 164: {;Lcd.c: 165:     switch(x)
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in _LCD_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5213  1547  2D64               	goto	l4314
  5214  1548                     l4304:
  5215  1548  0822               	movf	LCD_xy@y,w
  5216  1549  3EFF               	addlw	255
  5217  154A  3880               	iorlw	128
  5218  154B  120A  158A  2684   	fcall	_LCD_command
  5219                           
  5220                           ;Lcd.c: 168:         break;
  5221  154E  0008               	return
  5222  154F                     l4306:
  5223  154F  0822               	movf	LCD_xy@y,w
  5224  1550  3E3F               	addlw	63
  5225  1551  3880               	iorlw	128
  5226  1552  120A  158A  2684   	fcall	_LCD_command
  5227                           
  5228                           ;Lcd.c: 170:         break;
  5229  1555  0008               	return
  5230  1556                     l4308:
  5231  1556  0822               	movf	LCD_xy@y,w
  5232  1557  3E13               	addlw	19
  5233  1558  3880               	iorlw	128
  5234  1559  120A  158A  2684   	fcall	_LCD_command
  5235                           
  5236                           ;Lcd.c: 172:         break;
  5237  155C  0008               	return
  5238  155D                     l4310:
  5239  155D  0822               	movf	LCD_xy@y,w
  5240  155E  3E53               	addlw	83
  5241  155F  3880               	iorlw	128
  5242  1560  120A  158A  2684   	fcall	_LCD_command
  5243                           
  5244                           ;Lcd.c: 174:         break;
  5245  1563  0008               	return
  5246  1564                     l4314:
  5247                           
  5248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5249                           ; Switch size 1, requested type "simple"
  5250                           ; Number of cases is 1, Range of values is 0 to 0
  5251                           ; switch strategies available:
  5252                           ; Name         Instructions Cycles
  5253                           ; simple_byte            4     3 (average)
  5254                           ; direct_byte           11     8 (fixed)
  5255                           ; jumptable            260     6 (fixed)
  5256                           ;	Chosen strategy is simple_byte
  5257  1564  1283               	bcf	3,5	;RP0=0, select bank0
  5258  1565  1303               	bcf	3,6	;RP1=0, select bank0
  5259  1566  0821               	movf	LCD_xy@x+1,w
  5260  1567  3A00               	xorlw	0	; case 0
  5261  1568  1903               	skipnz
  5262  1569  2D6B               	goto	l5134
  5263  156A  2D79               	goto	l488
  5264  156B                     l5134:
  5265                           
  5266                           ; Switch size 1, requested type "simple"
  5267                           ; Number of cases is 4, Range of values is 1 to 4
  5268                           ; switch strategies available:
  5269                           ; Name         Instructions Cycles
  5270                           ; simple_byte           13     7 (average)
  5271                           ; direct_byte           23    11 (fixed)
  5272                           ; jumptable            263     9 (fixed)
  5273                           ;	Chosen strategy is simple_byte
  5274  156B  0820               	movf	LCD_xy@x,w
  5275  156C  3A01               	xorlw	1	; case 1
  5276  156D  1903               	skipnz
  5277  156E  2D48               	goto	l4304
  5278  156F  3A03               	xorlw	3	; case 2
  5279  1570  1903               	skipnz
  5280  1571  2D4F               	goto	l4306
  5281  1572  3A01               	xorlw	1	; case 3
  5282  1573  1903               	skipnz
  5283  1574  2D56               	goto	l4308
  5284  1575  3A07               	xorlw	7	; case 4
  5285  1576  1903               	skipnz
  5286  1577  2D5D               	goto	l4310
  5287  1578  2D79               	goto	l488
  5288  1579                     l488:
  5289  1579  0008               	return
  5290  157A                     __end_of_LCD_xy:
  5291                           
  5292                           	psect	text22
  5293  1623                     __ptext22:	
  5294 ;; *************** function _Pant_Fuga *****************
  5295 ;; Defined at:
  5296 ;;		line 124 in file "Display_Lcd.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0
  5312 ;;      Temps:          0       3       0       0       0
  5313 ;;      Totals:         0       3       0       0       0
  5314 ;;Total ram usage:        3 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    4
  5317 ;; This function calls:
  5318 ;;		_LCD_array
  5319 ;;		_LCD_command
  5320 ;; This function is called by:
  5321 ;;		_MEF_Subest_Actualizacion
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function _Pant_Fuga
  5327  1623                     _Pant_Fuga:
  5328                           
  5329                           ;Display_Lcd.c: 126:     LCD_command(0x01);
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _Pant_Fuga: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5333  1623  3001               	movlw	1
  5334  1624  120A  158A  2684  160A  118A  	fcall	_LCD_command
  5335                           
  5336                           ;Display_Lcd.c: 127:     LCD_array(2,1,"    Modo Prueba:");
  5337  1629  3002               	movlw	2
  5338  162A  1283               	bcf	3,5	;RP0=0, select bank0
  5339  162B  1303               	bcf	3,6	;RP1=0, select bank0
  5340  162C  00A0               	movwf	LCD_array@x
  5341  162D  3000               	movlw	0
  5342  162E  00A1               	movwf	LCD_array@x+1
  5343  162F  3001               	movlw	1
  5344  1630  00A2               	movwf	LCD_array@y
  5345  1631  3000               	movlw	0
  5346  1632  00A3               	movwf	LCD_array@y+1
  5347  1633  30A8               	movlw	low (STR_32| (0+32768))
  5348  1634  00A4               	movwf	LCD_array@date
  5349  1635  3085               	movlw	high (STR_32| (0+32768))
  5350  1636  00A5               	movwf	LCD_array@date+1
  5351  1637  120A  158A  2188  160A  118A  	fcall	_LCD_array
  5352                           
  5353                           ;Display_Lcd.c: 128:     LCD_array(3,1,"    FUGA");
  5354  163C  3003               	movlw	3
  5355  163D  1283               	bcf	3,5	;RP0=0, select bank0
  5356  163E  1303               	bcf	3,6	;RP1=0, select bank0
  5357  163F  00A0               	movwf	LCD_array@x
  5358  1640  3000               	movlw	0
  5359  1641  00A1               	movwf	LCD_array@x+1
  5360  1642  3001               	movlw	1
  5361  1643  00A2               	movwf	LCD_array@y
  5362  1644  3000               	movlw	0
  5363  1645  00A3               	movwf	LCD_array@y+1
  5364  1646  30E1               	movlw	low (STR_35| (0+32768))
  5365  1647  00A4               	movwf	LCD_array@date
  5366  1648  3085               	movlw	high (STR_35| (0+32768))
  5367  1649  00A5               	movwf	LCD_array@date+1
  5368  164A  120A  158A  2188  160A  118A  	fcall	_LCD_array
  5369                           
  5370                           ;Display_Lcd.c: 129:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  5371  164F  3027               	movlw	39
  5372  1650  1283               	bcf	3,5	;RP0=0, select bank0
  5373  1651  1303               	bcf	3,6	;RP1=0, select bank0
  5374  1652  00A8               	movwf	??_Pant_Fuga+2
  5375  1653  300D               	movlw	13
  5376  1654  00A7               	movwf	??_Pant_Fuga+1
  5377  1655  3025               	movlw	37
  5378  1656  00A6               	movwf	??_Pant_Fuga
  5379  1657                     u5407:
  5380  1657  0BA6               	decfsz	??_Pant_Fuga,f
  5381  1658  2E57               	goto	u5407
  5382  1659  0BA7               	decfsz	??_Pant_Fuga+1,f
  5383  165A  2E57               	goto	u5407
  5384  165B  0BA8               	decfsz	??_Pant_Fuga+2,f
  5385  165C  2E57               	goto	u5407
  5386  165D  2E5E               	nop2
  5387  165E  0008               	return
  5388  165F                     __end_of_Pant_Fuga:
  5389                           
  5390                           	psect	text23
  5391  15E7                     __ptext23:	
  5392 ;; *************** function _Pant_Flujo *****************
  5393 ;; Defined at:
  5394 ;;		line 134 in file "Display_Lcd.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0
  5410 ;;      Temps:          0       3       0       0       0
  5411 ;;      Totals:         0       3       0       0       0
  5412 ;;Total ram usage:        3 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    4
  5415 ;; This function calls:
  5416 ;;		_LCD_array
  5417 ;;		_LCD_command
  5418 ;; This function is called by:
  5419 ;;		_MEF_Subest_Actualizacion
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           
  5424                           ;psect for function _Pant_Flujo
  5425  15E7                     _Pant_Flujo:
  5426                           
  5427                           ;Display_Lcd.c: 136:     LCD_command(0x01);
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _Pant_Flujo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5431  15E7  3001               	movlw	1
  5432  15E8  120A  158A  2684  160A  118A  	fcall	_LCD_command
  5433                           
  5434                           ;Display_Lcd.c: 138:     LCD_array(2,1,"    Modo Prueba:");
  5435  15ED  3002               	movlw	2
  5436  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  5437  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  5438  15F0  00A0               	movwf	LCD_array@x
  5439  15F1  3000               	movlw	0
  5440  15F2  00A1               	movwf	LCD_array@x+1
  5441  15F3  3001               	movlw	1
  5442  15F4  00A2               	movwf	LCD_array@y
  5443  15F5  3000               	movlw	0
  5444  15F6  00A3               	movwf	LCD_array@y+1
  5445  15F7  30A8               	movlw	low (STR_32| (0+32768))
  5446  15F8  00A4               	movwf	LCD_array@date
  5447  15F9  3085               	movlw	high (STR_32| (0+32768))
  5448  15FA  00A5               	movwf	LCD_array@date+1
  5449  15FB  120A  158A  2188  160A  118A  	fcall	_LCD_array
  5450                           
  5451                           ;Display_Lcd.c: 139:     LCD_array(3,1,"    FLUJO");
  5452  1600  3003               	movlw	3
  5453  1601  1283               	bcf	3,5	;RP0=0, select bank0
  5454  1602  1303               	bcf	3,6	;RP1=0, select bank0
  5455  1603  00A0               	movwf	LCD_array@x
  5456  1604  3000               	movlw	0
  5457  1605  00A1               	movwf	LCD_array@x+1
  5458  1606  3001               	movlw	1
  5459  1607  00A2               	movwf	LCD_array@y
  5460  1608  3000               	movlw	0
  5461  1609  00A3               	movwf	LCD_array@y+1
  5462  160A  30D7               	movlw	low (STR_37| (0+32768))
  5463  160B  00A4               	movwf	LCD_array@date
  5464  160C  3085               	movlw	high (STR_37| (0+32768))
  5465  160D  00A5               	movwf	LCD_array@date+1
  5466  160E  120A  158A  2188  160A  118A  	fcall	_LCD_array
  5467                           
  5468                           ;Display_Lcd.c: 140:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  5469  1613  3027               	movlw	39
  5470  1614  1283               	bcf	3,5	;RP0=0, select bank0
  5471  1615  1303               	bcf	3,6	;RP1=0, select bank0
  5472  1616  00A8               	movwf	??_Pant_Flujo+2
  5473  1617  300D               	movlw	13
  5474  1618  00A7               	movwf	??_Pant_Flujo+1
  5475  1619  3025               	movlw	37
  5476  161A  00A6               	movwf	??_Pant_Flujo
  5477  161B                     u5417:
  5478  161B  0BA6               	decfsz	??_Pant_Flujo,f
  5479  161C  2E1B               	goto	u5417
  5480  161D  0BA7               	decfsz	??_Pant_Flujo+1,f
  5481  161E  2E1B               	goto	u5417
  5482  161F  0BA8               	decfsz	??_Pant_Flujo+2,f
  5483  1620  2E1B               	goto	u5417
  5484  1621  2E22               	nop2
  5485  1622  0008               	return
  5486  1623                     __end_of_Pant_Flujo:
  5487                           
  5488                           	psect	text24
  5489  13EA                     __ptext24:	
  5490 ;; *************** function _Lec_Adc_Modo_Pulv *****************
  5491 ;; Defined at:
  5492 ;;		line 4 in file "Modo_Pulverizacion.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5506 ;;      Params:         0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    5
  5513 ;; This function calls:
  5514 ;;		_Adc_Min_Read
  5515 ;;		_Adc_Pwm_Read
  5516 ;;		_Adc_Rpm_Read
  5517 ;;		_Adc_Temp_Read
  5518 ;; This function is called by:
  5519 ;;		_MEF_Subest_Actualizacion
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function _Lec_Adc_Modo_Pulv
  5525  13EA                     _Lec_Adc_Modo_Pulv:
  5526                           
  5527                           ;Modo_Pulverizacion.c: 7:     Adc_Rpm_Read();
  5528                           
  5529                           ;incstack = 0
  5530                           ; Regs used in _Lec_Adc_Modo_Pulv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5531  13EA  120A  118A  222C  160A  118A  	fcall	_Adc_Rpm_Read
  5532                           
  5533                           ;Modo_Pulverizacion.c: 10:     Adc_Pwm_Read();
  5534  13EF  120A  158A  2354  160A  118A  	fcall	_Adc_Pwm_Read
  5535                           
  5536                           ;Modo_Pulverizacion.c: 13:     Adc_Min_Read();
  5537  13F4  120A  118A  260A  160A  118A  	fcall	_Adc_Min_Read
  5538                           
  5539                           ;Modo_Pulverizacion.c: 16:     Adc_Temp_Read();
  5540  13F9  120A  158A  20C3   	fcall	_Adc_Temp_Read
  5541  13FC  0008               	return
  5542  13FD                     __end_of_Lec_Adc_Modo_Pulv:
  5543                           
  5544                           	psect	text25
  5545  022C                     __ptext25:	
  5546 ;; *************** function _Adc_Rpm_Read *****************
  5547 ;; Defined at:
  5548 ;;		line 9 in file "Adc_Read.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  valor           2   63[BANK0 ] unsigned int 
  5553 ;;  dec_m           2   61[BANK0 ] unsigned int 
  5554 ;;  uni_m           2   59[BANK0 ] unsigned int 
  5555 ;;  cent            2   57[BANK0 ] unsigned int 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       0       0       0       0
  5566 ;;      Locals:         0      11       0       0       0
  5567 ;;      Temps:          0       4       0       0       0
  5568 ;;      Totals:         0      15       0       0       0
  5569 ;;Total ram usage:       15 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    4
  5572 ;; This function calls:
  5573 ;;		_Adc
  5574 ;;		___awtoft
  5575 ;;		___ftdiv
  5576 ;;		___ftmul
  5577 ;;		___fttol
  5578 ;;		___lwdiv
  5579 ;;		___wmul
  5580 ;; This function is called by:
  5581 ;;		_Lec_Adc_Modo_Pulv
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function _Adc_Rpm_Read
  5587  022C                     _Adc_Rpm_Read:
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in _Adc_Rpm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5591  022C  1283               	bcf	3,5	;RP0=0, select bank0
  5592  022D  1303               	bcf	3,6	;RP1=0, select bank0
  5593  022E  01DD               	clrf	Adc_Rpm_Read@dec_m
  5594  022F  01DE               	clrf	Adc_Rpm_Read@dec_m+1
  5595  0230  01DB               	clrf	Adc_Rpm_Read@uni_m
  5596  0231  01DC               	clrf	Adc_Rpm_Read@uni_m+1
  5597                           
  5598                           ;Adc_Read.c: 13:     valor = (int)((Adc(0)*5.0/1023.0)*10000.0/5.0);
  5599  0232  3000               	movlw	0
  5600  0233  160A  118A  2721  120A  118A  	fcall	_Adc
  5601  0238  0874               	movf	?_Adc+1,w
  5602  0239  1283               	bcf	3,5	;RP0=0, select bank0
  5603  023A  1303               	bcf	3,6	;RP1=0, select bank0
  5604  023B  00A4               	movwf	___awtoft@c+1
  5605  023C  0873               	movf	?_Adc,w
  5606  023D  00A3               	movwf	___awtoft@c
  5607  023E  160A  118A  2475  120A  118A  	fcall	___awtoft
  5608  0243  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0244  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0245  0823               	movf	?___awtoft,w
  5611  0246  00AA               	movwf	___ftmul@f2
  5612  0247  0824               	movf	?___awtoft+1,w
  5613  0248  00AB               	movwf	___ftmul@f2+1
  5614  0249  0825               	movf	?___awtoft+2,w
  5615  024A  00AC               	movwf	___ftmul@f2+2
  5616  024B  3000               	movlw	0
  5617  024C  00A7               	movwf	___ftmul@f1
  5618  024D  30A0               	movlw	160
  5619  024E  00A8               	movwf	___ftmul@f1+1
  5620  024F  3040               	movlw	64
  5621  0250  00A9               	movwf	___ftmul@f1+2
  5622  0251  120A  118A  2705  120A  118A  	fcall	___ftmul
  5623  0256  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0257  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0258  0827               	movf	?___ftmul,w
  5626  0259  00B9               	movwf	___ftdiv@f1
  5627  025A  0828               	movf	?___ftmul+1,w
  5628  025B  00BA               	movwf	___ftdiv@f1+1
  5629  025C  0829               	movf	?___ftmul+2,w
  5630  025D  00BB               	movwf	___ftdiv@f1+2
  5631  025E  30C0               	movlw	192
  5632  025F  00B6               	movwf	___ftdiv@f2
  5633  0260  307F               	movlw	127
  5634  0261  00B7               	movwf	___ftdiv@f2+1
  5635  0262  3044               	movlw	68
  5636  0263  00B8               	movwf	___ftdiv@f2+2
  5637  0264  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  5638  0269  1283               	bcf	3,5	;RP0=0, select bank0
  5639  026A  1303               	bcf	3,6	;RP1=0, select bank0
  5640  026B  0836               	movf	?___ftdiv,w
  5641  026C  00D6               	movwf	_Adc_Rpm_Read$1502
  5642  026D  0837               	movf	?___ftdiv+1,w
  5643  026E  00D7               	movwf	_Adc_Rpm_Read$1502+1
  5644  026F  0838               	movf	?___ftdiv+2,w
  5645  0270  00D8               	movwf	_Adc_Rpm_Read$1502+2
  5646                           
  5647                           ;Adc_Read.c: 13:     valor = (int)((Adc(0)*5.0/1023.0)*10000.0/5.0);
  5648  0271  0856               	movf	_Adc_Rpm_Read$1502,w
  5649  0272  00AA               	movwf	___ftmul@f2
  5650  0273  0857               	movf	_Adc_Rpm_Read$1502+1,w
  5651  0274  00AB               	movwf	___ftmul@f2+1
  5652  0275  0858               	movf	_Adc_Rpm_Read$1502+2,w
  5653  0276  00AC               	movwf	___ftmul@f2+2
  5654  0277  3040               	movlw	64
  5655  0278  00A7               	movwf	___ftmul@f1
  5656  0279  301C               	movlw	28
  5657  027A  00A8               	movwf	___ftmul@f1+1
  5658  027B  3046               	movlw	70
  5659  027C  00A9               	movwf	___ftmul@f1+2
  5660  027D  120A  118A  2705  120A  118A  	fcall	___ftmul
  5661  0282  1283               	bcf	3,5	;RP0=0, select bank0
  5662  0283  1303               	bcf	3,6	;RP1=0, select bank0
  5663  0284  0827               	movf	?___ftmul,w
  5664  0285  00B9               	movwf	___ftdiv@f1
  5665  0286  0828               	movf	?___ftmul+1,w
  5666  0287  00BA               	movwf	___ftdiv@f1+1
  5667  0288  0829               	movf	?___ftmul+2,w
  5668  0289  00BB               	movwf	___ftdiv@f1+2
  5669  028A  3000               	movlw	0
  5670  028B  00B6               	movwf	___ftdiv@f2
  5671  028C  30A0               	movlw	160
  5672  028D  00B7               	movwf	___ftdiv@f2+1
  5673  028E  3040               	movlw	64
  5674  028F  00B8               	movwf	___ftdiv@f2+2
  5675  0290  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  5676  0295  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0296  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0297  0836               	movf	?___ftdiv,w
  5679  0298  00C5               	movwf	___fttol@f1
  5680  0299  0837               	movf	?___ftdiv+1,w
  5681  029A  00C6               	movwf	___fttol@f1+1
  5682  029B  0838               	movf	?___ftdiv+2,w
  5683  029C  00C7               	movwf	___fttol@f1+2
  5684  029D  120A  158A  22D7  120A  118A  	fcall	___fttol
  5685  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  5686  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  5687  02A4  0846               	movf	?___fttol+1,w
  5688  02A5  00E0               	movwf	Adc_Rpm_Read@valor+1
  5689  02A6  0845               	movf	?___fttol,w
  5690  02A7  00DF               	movwf	Adc_Rpm_Read@valor
  5691                           
  5692                           ;Adc_Read.c: 15:     dec_m = (int)(valor/10000)*10000;
  5693  02A8  3010               	movlw	16
  5694  02A9  00F3               	movwf	___lwdiv@divisor
  5695  02AA  3027               	movlw	39
  5696  02AB  00F4               	movwf	___lwdiv@divisor+1
  5697  02AC  0860               	movf	Adc_Rpm_Read@valor+1,w
  5698  02AD  00F6               	movwf	___lwdiv@dividend+1
  5699  02AE  085F               	movf	Adc_Rpm_Read@valor,w
  5700  02AF  00F5               	movwf	___lwdiv@dividend
  5701  02B0  160A  118A  269B  120A  118A  	fcall	___lwdiv
  5702  02B5  0874               	movf	?___lwdiv+1,w
  5703  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  5704  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  5705  02B8  00A4               	movwf	___wmul@multiplier+1
  5706  02B9  0873               	movf	?___lwdiv,w
  5707  02BA  00A3               	movwf	___wmul@multiplier
  5708  02BB  3010               	movlw	16
  5709  02BC  00A5               	movwf	___wmul@multiplicand
  5710  02BD  3027               	movlw	39
  5711  02BE  00A6               	movwf	___wmul@multiplicand+1
  5712  02BF  160A  118A  242E  120A  118A  	fcall	___wmul
  5713  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  5714  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  5715  02C6  0824               	movf	?___wmul+1,w
  5716  02C7  00DE               	movwf	Adc_Rpm_Read@dec_m+1
  5717  02C8  0823               	movf	?___wmul,w
  5718  02C9  00DD               	movwf	Adc_Rpm_Read@dec_m
  5719                           
  5720                           ;Adc_Read.c: 16:     uni_m = (int)((valor-dec_m)/1000)*1000;
  5721  02CA  30E8               	movlw	232
  5722  02CB  00F3               	movwf	___lwdiv@divisor
  5723  02CC  3003               	movlw	3
  5724  02CD  00F4               	movwf	___lwdiv@divisor+1
  5725  02CE  085D               	movf	Adc_Rpm_Read@dec_m,w
  5726  02CF  025F               	subwf	Adc_Rpm_Read@valor,w
  5727  02D0  00F5               	movwf	___lwdiv@dividend
  5728  02D1  085E               	movf	Adc_Rpm_Read@dec_m+1,w
  5729  02D2  1C03               	skipc
  5730  02D3  0A5E               	incf	Adc_Rpm_Read@dec_m+1,w
  5731  02D4  0260               	subwf	Adc_Rpm_Read@valor+1,w
  5732  02D5  00F6               	movwf	___lwdiv@dividend+1
  5733  02D6  160A  118A  269B  120A  118A  	fcall	___lwdiv
  5734  02DB  0874               	movf	?___lwdiv+1,w
  5735  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  5736  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  5737  02DE  00A4               	movwf	___wmul@multiplier+1
  5738  02DF  0873               	movf	?___lwdiv,w
  5739  02E0  00A3               	movwf	___wmul@multiplier
  5740  02E1  30E8               	movlw	232
  5741  02E2  00A5               	movwf	___wmul@multiplicand
  5742  02E3  3003               	movlw	3
  5743  02E4  00A6               	movwf	___wmul@multiplicand+1
  5744  02E5  160A  118A  242E  120A  118A  	fcall	___wmul
  5745  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  5746  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  5747  02EC  0824               	movf	?___wmul+1,w
  5748  02ED  00DC               	movwf	Adc_Rpm_Read@uni_m+1
  5749  02EE  0823               	movf	?___wmul,w
  5750  02EF  00DB               	movwf	Adc_Rpm_Read@uni_m
  5751                           
  5752                           ;Adc_Read.c: 17:     cent = (int)((valor-(uni_m+dec_m))/100)*100;
  5753  02F0  3064               	movlw	100
  5754  02F1  00F3               	movwf	___lwdiv@divisor
  5755  02F2  3000               	movlw	0
  5756  02F3  00F4               	movwf	___lwdiv@divisor+1
  5757  02F4  095B               	comf	Adc_Rpm_Read@uni_m,w
  5758  02F5  00D2               	movwf	??_Adc_Rpm_Read
  5759  02F6  095C               	comf	Adc_Rpm_Read@uni_m+1,w
  5760  02F7  00D3               	movwf	??_Adc_Rpm_Read+1
  5761  02F8  0AD2               	incf	??_Adc_Rpm_Read,f
  5762  02F9  1903               	skipnz
  5763  02FA  0AD3               	incf	??_Adc_Rpm_Read+1,f
  5764  02FB  085D               	movf	Adc_Rpm_Read@dec_m,w
  5765  02FC  0252               	subwf	??_Adc_Rpm_Read,w
  5766  02FD  00D4               	movwf	??_Adc_Rpm_Read+2
  5767  02FE  085E               	movf	Adc_Rpm_Read@dec_m+1,w
  5768  02FF  1C03               	skipc
  5769  0300  0A5E               	incf	Adc_Rpm_Read@dec_m+1,w
  5770  0301  0253               	subwf	??_Adc_Rpm_Read+1,w
  5771  0302  00D5               	movwf	??_Adc_Rpm_Read+3
  5772  0303  085F               	movf	Adc_Rpm_Read@valor,w
  5773  0304  0754               	addwf	??_Adc_Rpm_Read+2,w
  5774  0305  00F5               	movwf	___lwdiv@dividend
  5775  0306  0860               	movf	Adc_Rpm_Read@valor+1,w
  5776  0307  1803               	skipnc
  5777  0308  0A60               	incf	Adc_Rpm_Read@valor+1,w
  5778  0309  0755               	addwf	??_Adc_Rpm_Read+3,w
  5779  030A  00F6               	movwf	___lwdiv@dividend+1
  5780  030B  160A  118A  269B  120A  118A  	fcall	___lwdiv
  5781  0310  0874               	movf	?___lwdiv+1,w
  5782  0311  1283               	bcf	3,5	;RP0=0, select bank0
  5783  0312  1303               	bcf	3,6	;RP1=0, select bank0
  5784  0313  00A4               	movwf	___wmul@multiplier+1
  5785  0314  0873               	movf	?___lwdiv,w
  5786  0315  00A3               	movwf	___wmul@multiplier
  5787  0316  3064               	movlw	100
  5788  0317  00A5               	movwf	___wmul@multiplicand
  5789  0318  3000               	movlw	0
  5790  0319  00A6               	movwf	___wmul@multiplicand+1
  5791  031A  160A  118A  242E  120A  118A  	fcall	___wmul
  5792  031F  1283               	bcf	3,5	;RP0=0, select bank0
  5793  0320  1303               	bcf	3,6	;RP1=0, select bank0
  5794  0321  0824               	movf	?___wmul+1,w
  5795  0322  00DA               	movwf	Adc_Rpm_Read@cent+1
  5796  0323  0823               	movf	?___wmul,w
  5797  0324  00D9               	movwf	Adc_Rpm_Read@cent
  5798                           
  5799                           ;Adc_Read.c: 19:     valor = cent+uni_m+dec_m;
  5800  0325  085B               	movf	Adc_Rpm_Read@uni_m,w
  5801  0326  0759               	addwf	Adc_Rpm_Read@cent,w
  5802  0327  00D2               	movwf	??_Adc_Rpm_Read
  5803  0328  085C               	movf	Adc_Rpm_Read@uni_m+1,w
  5804  0329  1803               	skipnc
  5805  032A  0A5C               	incf	Adc_Rpm_Read@uni_m+1,w
  5806  032B  075A               	addwf	Adc_Rpm_Read@cent+1,w
  5807  032C  00D3               	movwf	??_Adc_Rpm_Read+1
  5808  032D  085D               	movf	Adc_Rpm_Read@dec_m,w
  5809  032E  0752               	addwf	??_Adc_Rpm_Read,w
  5810  032F  00DF               	movwf	Adc_Rpm_Read@valor
  5811  0330  085E               	movf	Adc_Rpm_Read@dec_m+1,w
  5812  0331  1803               	skipnc
  5813  0332  0A5E               	incf	Adc_Rpm_Read@dec_m+1,w
  5814  0333  0753               	addwf	??_Adc_Rpm_Read+1,w
  5815  0334  00E0               	movwf	Adc_Rpm_Read@valor+1
  5816                           
  5817                           ;Adc_Read.c: 20:     Rpm = valor;
  5818  0335  0860               	movf	Adc_Rpm_Read@valor+1,w
  5819  0336  1683               	bsf	3,5	;RP0=1, select bank1
  5820  0337  1303               	bcf	3,6	;RP1=0, select bank1
  5821  0338  00AF               	movwf	(_Rpm+1)^(0+128)
  5822  0339  1283               	bcf	3,5	;RP0=0, select bank0
  5823  033A  1303               	bcf	3,6	;RP1=0, select bank0
  5824  033B  085F               	movf	Adc_Rpm_Read@valor,w
  5825  033C  1683               	bsf	3,5	;RP0=1, select bank1
  5826  033D  1303               	bcf	3,6	;RP1=0, select bank1
  5827  033E  00AE               	movwf	_Rpm^(0+128)
  5828                           
  5829                           ;Adc_Read.c: 22:     if(Rpm == 0) Rpm = 60;
  5830  033F  082E               	movf	_Rpm^(0+128),w
  5831  0340  042F               	iorwf	(_Rpm+1)^(0+128),w
  5832  0341  1D03               	btfss	3,2
  5833  0342  2B48               	goto	l4268
  5834  0343  303C               	movlw	60
  5835  0344  00AE               	movwf	_Rpm^(0+128)
  5836  0345  3000               	movlw	0
  5837  0346  00AF               	movwf	(_Rpm^(0+128)+1)
  5838  0347  0008               	return
  5839  0348                     l4268:
  5840  0348  3027               	movlw	39
  5841  0349  022F               	subwf	(_Rpm+1)^(0+128),w
  5842  034A  3011               	movlw	17
  5843  034B  1903               	skipnz
  5844  034C  022E               	subwf	_Rpm^(0+128),w
  5845  034D  1C03               	skipc
  5846  034E  0008               	return
  5847  034F  3010               	movlw	16
  5848  0350  00AE               	movwf	_Rpm^(0+128)
  5849  0351  3027               	movlw	39
  5850  0352  00AF               	movwf	(_Rpm^(0+128)+1)
  5851  0353  0008               	return
  5852  0354                     __end_of_Adc_Rpm_Read:
  5853                           
  5854                           	psect	text26
  5855  142E                     __ptext26:	
  5856 ;; *************** function ___wmul *****************
  5857 ;; Defined at:
  5858 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\Umul16.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5861 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  product         2    7[BANK0 ] unsigned int 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2    3[BANK0 ] unsigned int 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       4       0       0       0
  5874 ;;      Locals:         0       2       0       0       0
  5875 ;;      Temps:          0       0       0       0       0
  5876 ;;      Totals:         0       6       0       0       0
  5877 ;;Total ram usage:        6 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    2
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_Adc_Rpm_Read
  5884 ;;		_sprintf
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function ___wmul
  5890  142E                     ___wmul:
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5894  142E  1283               	bcf	3,5	;RP0=0, select bank0
  5895  142F  1303               	bcf	3,6	;RP1=0, select bank0
  5896  1430  01A7               	clrf	___wmul@product
  5897  1431  01A8               	clrf	___wmul@product+1
  5898  1432                     l2738:
  5899  1432  1C23               	btfss	___wmul@multiplier,0
  5900  1433  2C3A               	goto	l752
  5901  1434  0825               	movf	___wmul@multiplicand,w
  5902  1435  07A7               	addwf	___wmul@product,f
  5903  1436  1803               	skipnc
  5904  1437  0AA8               	incf	___wmul@product+1,f
  5905  1438  0826               	movf	___wmul@multiplicand+1,w
  5906  1439  07A8               	addwf	___wmul@product+1,f
  5907  143A                     l752:
  5908  143A  3001               	movlw	1
  5909  143B                     u2085:
  5910  143B  1003               	clrc
  5911  143C  0DA5               	rlf	___wmul@multiplicand,f
  5912  143D  0DA6               	rlf	___wmul@multiplicand+1,f
  5913  143E  3EFF               	addlw	-1
  5914  143F  1D03               	skipz
  5915  1440  2C3B               	goto	u2085
  5916  1441  3001               	movlw	1
  5917  1442                     u2095:
  5918  1442  1003               	clrc
  5919  1443  0CA4               	rrf	___wmul@multiplier+1,f
  5920  1444  0CA3               	rrf	___wmul@multiplier,f
  5921  1445  3EFF               	addlw	-1
  5922  1446  1D03               	skipz
  5923  1447  2C42               	goto	u2095
  5924  1448  0823               	movf	___wmul@multiplier,w
  5925  1449  0424               	iorwf	___wmul@multiplier+1,w
  5926  144A  1D03               	btfss	3,2
  5927  144B  2C32               	goto	l2738
  5928  144C  0828               	movf	___wmul@product+1,w
  5929  144D  00A4               	movwf	?___wmul+1
  5930  144E  0827               	movf	___wmul@product,w
  5931  144F  00A3               	movwf	?___wmul
  5932  1450  0008               	return
  5933  1451                     __end_of___wmul:
  5934                           
  5935                           	psect	text27
  5936  169B                     __ptext27:	
  5937 ;; *************** function ___lwdiv *****************
  5938 ;; Defined at:
  5939 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwdiv.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  divisor         2    3[COMMON] unsigned int 
  5942 ;;  dividend        2    5[COMMON] unsigned int 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  quotient        2    1[BANK0 ] unsigned int 
  5945 ;;  counter         1    0[BANK0 ] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  2    3[COMMON] unsigned int 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0, btemp+1
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5955 ;;      Params:         4       0       0       0       0
  5956 ;;      Locals:         0       3       0       0       0
  5957 ;;      Temps:          0       0       0       0       0
  5958 ;;      Totals:         4       3       0       0       0
  5959 ;;Total ram usage:        7 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    2
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_Adc_Rpm_Read
  5966 ;;		_sprintf
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           
  5971                           ;psect for function ___lwdiv
  5972  169B                     ___lwdiv:
  5973                           
  5974                           ;incstack = 0
  5975                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5976  169B  1283               	bcf	3,5	;RP0=0, select bank0
  5977  169C  1303               	bcf	3,6	;RP1=0, select bank0
  5978  169D  01A1               	clrf	___lwdiv@quotient
  5979  169E  01A2               	clrf	___lwdiv@quotient+1
  5980  169F  0873               	movf	___lwdiv@divisor,w
  5981  16A0  0474               	iorwf	___lwdiv@divisor+1,w
  5982  16A1  1903               	btfsc	3,2
  5983  16A2  2ED4               	goto	l4230
  5984  16A3  01A0               	clrf	___lwdiv@counter
  5985  16A4  0AA0               	incf	___lwdiv@counter,f
  5986  16A5                     l4218:
  5987  16A5  1BF4               	btfsc	___lwdiv@divisor+1,7
  5988  16A6  2EB3               	goto	l4220
  5989  16A7  3001               	movlw	1
  5990  16A8                     u4305:
  5991  16A8  1003               	clrc
  5992  16A9  0DF3               	rlf	___lwdiv@divisor,f
  5993  16AA  0DF4               	rlf	___lwdiv@divisor+1,f
  5994  16AB  3EFF               	addlw	-1
  5995  16AC  1D03               	skipz
  5996  16AD  2EA8               	goto	u4305
  5997  16AE  3001               	movlw	1
  5998  16AF  00FF               	movwf	127
  5999  16B0  087F               	movf	127,w
  6000  16B1  07A0               	addwf	___lwdiv@counter,f
  6001  16B2  2EA5               	goto	l4218
  6002  16B3                     l4220:
  6003  16B3  3001               	movlw	1
  6004  16B4                     u4325:
  6005  16B4  1003               	clrc
  6006  16B5  0DA1               	rlf	___lwdiv@quotient,f
  6007  16B6  0DA2               	rlf	___lwdiv@quotient+1,f
  6008  16B7  3EFF               	addlw	-1
  6009  16B8  1D03               	skipz
  6010  16B9  2EB4               	goto	u4325
  6011  16BA  0874               	movf	___lwdiv@divisor+1,w
  6012  16BB  0276               	subwf	___lwdiv@dividend+1,w
  6013  16BC  1D03               	skipz
  6014  16BD  2EC0               	goto	u4335
  6015  16BE  0873               	movf	___lwdiv@divisor,w
  6016  16BF  0275               	subwf	___lwdiv@dividend,w
  6017  16C0                     u4335:
  6018  16C0  1C03               	skipc
  6019  16C1  2EC9               	goto	l4226
  6020  16C2  0873               	movf	___lwdiv@divisor,w
  6021  16C3  02F5               	subwf	___lwdiv@dividend,f
  6022  16C4  0874               	movf	___lwdiv@divisor+1,w
  6023  16C5  1C03               	skipc
  6024  16C6  03F6               	decf	___lwdiv@dividend+1,f
  6025  16C7  02F6               	subwf	___lwdiv@dividend+1,f
  6026  16C8  1421               	bsf	___lwdiv@quotient,0
  6027  16C9                     l4226:
  6028  16C9  3001               	movlw	1
  6029  16CA                     u4345:
  6030  16CA  1003               	clrc
  6031  16CB  0CF4               	rrf	___lwdiv@divisor+1,f
  6032  16CC  0CF3               	rrf	___lwdiv@divisor,f
  6033  16CD  3EFF               	addlw	-1
  6034  16CE  1D03               	skipz
  6035  16CF  2ECA               	goto	u4345
  6036  16D0  3001               	movlw	1
  6037  16D1  02A0               	subwf	___lwdiv@counter,f
  6038  16D2  1D03               	btfss	3,2
  6039  16D3  2EB3               	goto	l4220
  6040  16D4                     l4230:
  6041  16D4  0822               	movf	___lwdiv@quotient+1,w
  6042  16D5  00F4               	movwf	?___lwdiv+1
  6043  16D6  0821               	movf	___lwdiv@quotient,w
  6044  16D7  00F3               	movwf	?___lwdiv
  6045  16D8  0008               	return
  6046  16D9                     __end_of___lwdiv:
  6047                           
  6048                           	psect	text28
  6049  0B54                     __ptext28:	
  6050 ;; *************** function _Adc_Pwm_Read *****************
  6051 ;; Defined at:
  6052 ;;		line 28 in file "Adc_Read.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       0       0       0       0
  6067 ;;      Locals:         0       3       0       0       0
  6068 ;;      Temps:          0       0       0       0       0
  6069 ;;      Totals:         0       3       0       0       0
  6070 ;;Total ram usage:        3 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    4
  6073 ;; This function calls:
  6074 ;;		_Adc
  6075 ;;		___awtoft
  6076 ;;		___ftdiv
  6077 ;;		___ftmul
  6078 ;;		___fttol
  6079 ;; This function is called by:
  6080 ;;		_Lec_Adc_Modo_Pulv
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           
  6085                           ;psect for function _Adc_Pwm_Read
  6086  0B54                     _Adc_Pwm_Read:
  6087                           
  6088                           ;Adc_Read.c: 30:     Pwm = (int)((Adc(1)*5.0/1023.0)*100.0/5.0);
  6089                           
  6090                           ;incstack = 0
  6091                           ; Regs used in _Adc_Pwm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6092  0B54  3001               	movlw	1
  6093  0B55  160A  118A  2721  120A  158A  	fcall	_Adc
  6094  0B5A  0874               	movf	?_Adc+1,w
  6095  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0B5D  00A4               	movwf	___awtoft@c+1
  6098  0B5E  0873               	movf	?_Adc,w
  6099  0B5F  00A3               	movwf	___awtoft@c
  6100  0B60  160A  118A  2475  120A  158A  	fcall	___awtoft
  6101  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0B67  0823               	movf	?___awtoft,w
  6104  0B68  00AA               	movwf	___ftmul@f2
  6105  0B69  0824               	movf	?___awtoft+1,w
  6106  0B6A  00AB               	movwf	___ftmul@f2+1
  6107  0B6B  0825               	movf	?___awtoft+2,w
  6108  0B6C  00AC               	movwf	___ftmul@f2+2
  6109  0B6D  3000               	movlw	0
  6110  0B6E  00A7               	movwf	___ftmul@f1
  6111  0B6F  30A0               	movlw	160
  6112  0B70  00A8               	movwf	___ftmul@f1+1
  6113  0B71  3040               	movlw	64
  6114  0B72  00A9               	movwf	___ftmul@f1+2
  6115  0B73  120A  118A  2705  120A  158A  	fcall	___ftmul
  6116  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0B7A  0827               	movf	?___ftmul,w
  6119  0B7B  00B9               	movwf	___ftdiv@f1
  6120  0B7C  0828               	movf	?___ftmul+1,w
  6121  0B7D  00BA               	movwf	___ftdiv@f1+1
  6122  0B7E  0829               	movf	?___ftmul+2,w
  6123  0B7F  00BB               	movwf	___ftdiv@f1+2
  6124  0B80  30C0               	movlw	192
  6125  0B81  00B6               	movwf	___ftdiv@f2
  6126  0B82  307F               	movlw	127
  6127  0B83  00B7               	movwf	___ftdiv@f2+1
  6128  0B84  3044               	movlw	68
  6129  0B85  00B8               	movwf	___ftdiv@f2+2
  6130  0B86  120A  158A  25CC  120A  158A  	fcall	___ftdiv
  6131  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0B8D  0836               	movf	?___ftdiv,w
  6134  0B8E  00D2               	movwf	_Adc_Pwm_Read$1503
  6135  0B8F  0837               	movf	?___ftdiv+1,w
  6136  0B90  00D3               	movwf	_Adc_Pwm_Read$1503+1
  6137  0B91  0838               	movf	?___ftdiv+2,w
  6138  0B92  00D4               	movwf	_Adc_Pwm_Read$1503+2
  6139                           
  6140                           ;Adc_Read.c: 30:     Pwm = (int)((Adc(1)*5.0/1023.0)*100.0/5.0);
  6141  0B93  0852               	movf	_Adc_Pwm_Read$1503,w
  6142  0B94  00AA               	movwf	___ftmul@f2
  6143  0B95  0853               	movf	_Adc_Pwm_Read$1503+1,w
  6144  0B96  00AB               	movwf	___ftmul@f2+1
  6145  0B97  0854               	movf	_Adc_Pwm_Read$1503+2,w
  6146  0B98  00AC               	movwf	___ftmul@f2+2
  6147  0B99  3000               	movlw	0
  6148  0B9A  00A7               	movwf	___ftmul@f1
  6149  0B9B  30C8               	movlw	200
  6150  0B9C  00A8               	movwf	___ftmul@f1+1
  6151  0B9D  3042               	movlw	66
  6152  0B9E  00A9               	movwf	___ftmul@f1+2
  6153  0B9F  120A  118A  2705  120A  158A  	fcall	___ftmul
  6154  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0BA6  0827               	movf	?___ftmul,w
  6157  0BA7  00B9               	movwf	___ftdiv@f1
  6158  0BA8  0828               	movf	?___ftmul+1,w
  6159  0BA9  00BA               	movwf	___ftdiv@f1+1
  6160  0BAA  0829               	movf	?___ftmul+2,w
  6161  0BAB  00BB               	movwf	___ftdiv@f1+2
  6162  0BAC  3000               	movlw	0
  6163  0BAD  00B6               	movwf	___ftdiv@f2
  6164  0BAE  30A0               	movlw	160
  6165  0BAF  00B7               	movwf	___ftdiv@f2+1
  6166  0BB0  3040               	movlw	64
  6167  0BB1  00B8               	movwf	___ftdiv@f2+2
  6168  0BB2  120A  158A  25CC  120A  158A  	fcall	___ftdiv
  6169  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  6171  0BB9  0836               	movf	?___ftdiv,w
  6172  0BBA  00C5               	movwf	___fttol@f1
  6173  0BBB  0837               	movf	?___ftdiv+1,w
  6174  0BBC  00C6               	movwf	___fttol@f1+1
  6175  0BBD  0838               	movf	?___ftdiv+2,w
  6176  0BBE  00C7               	movwf	___fttol@f1+2
  6177  0BBF  120A  158A  22D7  120A  158A  	fcall	___fttol
  6178  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0BC6  0845               	movf	?___fttol,w
  6181  0BC7  00FF               	movwf	127
  6182  0BC8  087F               	movf	127,w
  6183  0BC9  00E9               	movwf	_Pwm
  6184                           
  6185                           ;Adc_Read.c: 31:     if(Pwm > 95) Pwm = 95;
  6186  0BCA  3060               	movlw	96
  6187  0BCB  0269               	subwf	_Pwm,w
  6188  0BCC  1C03               	skipc
  6189  0BCD  2BD3               	goto	l4280
  6190  0BCE  305F               	movlw	95
  6191  0BCF  00FF               	movwf	127
  6192  0BD0  087F               	movf	127,w
  6193  0BD1  00E9               	movwf	_Pwm
  6194  0BD2  0008               	return
  6195  0BD3                     l4280:
  6196  0BD3  3005               	movlw	5
  6197  0BD4  0269               	subwf	_Pwm,w
  6198  0BD5  1803               	skipnc
  6199  0BD6  0008               	return
  6200  0BD7  3005               	movlw	5
  6201  0BD8  00FF               	movwf	127
  6202  0BD9  087F               	movf	127,w
  6203  0BDA  00E9               	movwf	_Pwm
  6204  0BDB  0008               	return
  6205  0BDC                     __end_of_Adc_Pwm_Read:
  6206                           
  6207                           	psect	text29
  6208  13C2                     __ptext29:	
  6209 ;; *************** function _Lec_Adc_Modo_Fuga *****************
  6210 ;; Defined at:
  6211 ;;		line 4 in file "Modo_Fuga.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6225 ;;      Params:         0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    5
  6232 ;; This function calls:
  6233 ;;		_Adc_Min_Read
  6234 ;;		_Adc_Temp_Read
  6235 ;; This function is called by:
  6236 ;;		_MEF_Subest_Actualizacion
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _Lec_Adc_Modo_Fuga
  6242  13C2                     _Lec_Adc_Modo_Fuga:
  6243                           
  6244                           ;Modo_Fuga.c: 7:     Adc_Min_Read();
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in _Lec_Adc_Modo_Fuga: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6248  13C2  120A  118A  260A  160A  118A  	fcall	_Adc_Min_Read
  6249                           
  6250                           ;Modo_Fuga.c: 10:     Adc_Temp_Read();
  6251  13C7  120A  158A  20C3   	fcall	_Adc_Temp_Read
  6252  13CA  0008               	return
  6253  13CB                     __end_of_Lec_Adc_Modo_Fuga:
  6254                           
  6255                           	psect	text30
  6256  13B9                     __ptext30:	
  6257 ;; *************** function _Lec_Adc_Modo_Flujo *****************
  6258 ;; Defined at:
  6259 ;;		line 4 in file "Modo_Flujo.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6273 ;;      Params:         0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    5
  6280 ;; This function calls:
  6281 ;;		_Adc_Min_Read
  6282 ;;		_Adc_Temp_Read
  6283 ;; This function is called by:
  6284 ;;		_MEF_Subest_Actualizacion
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function _Lec_Adc_Modo_Flujo
  6290  13B9                     _Lec_Adc_Modo_Flujo:
  6291                           
  6292                           ;Modo_Flujo.c: 7:     Adc_Min_Read();
  6293                           
  6294                           ;incstack = 0
  6295                           ; Regs used in _Lec_Adc_Modo_Flujo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6296  13B9  120A  118A  260A  160A  118A  	fcall	_Adc_Min_Read
  6297                           
  6298                           ;Modo_Flujo.c: 10:     Adc_Temp_Read();
  6299  13BE  120A  158A  20C3   	fcall	_Adc_Temp_Read
  6300  13C1  0008               	return
  6301  13C2                     __end_of_Lec_Adc_Modo_Flujo:
  6302                           
  6303                           	psect	text31
  6304  08C3                     __ptext31:	
  6305 ;; *************** function _Adc_Temp_Read *****************
  6306 ;; Defined at:
  6307 ;;		line 47 in file "Adc_Read.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6321 ;;      Params:         0       0       0       0       0
  6322 ;;      Locals:         0       3       0       0       0
  6323 ;;      Temps:          0       0       0       0       0
  6324 ;;      Totals:         0       3       0       0       0
  6325 ;;Total ram usage:        3 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    4
  6328 ;; This function calls:
  6329 ;;		_Adc
  6330 ;;		___awtoft
  6331 ;;		___ftdiv
  6332 ;;		___ftmul
  6333 ;;		___fttol
  6334 ;; This function is called by:
  6335 ;;		_Lec_Adc_Modo_Pulv
  6336 ;;		_Lec_Adc_Modo_Fuga
  6337 ;;		_Lec_Adc_Modo_Flujo
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function _Adc_Temp_Read
  6343  08C3                     _Adc_Temp_Read:
  6344                           
  6345                           ;Adc_Read.c: 49:     Temp = (int)((Adc(3)*5.0/1023.0)*100.0);
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in _Adc_Temp_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6349  08C3  3003               	movlw	3
  6350  08C4  160A  118A  2721  120A  158A  	fcall	_Adc
  6351  08C9  0874               	movf	?_Adc+1,w
  6352  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  6353  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  6354  08CC  00A4               	movwf	___awtoft@c+1
  6355  08CD  0873               	movf	?_Adc,w
  6356  08CE  00A3               	movwf	___awtoft@c
  6357  08CF  160A  118A  2475  120A  158A  	fcall	___awtoft
  6358  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  6359  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  6360  08D6  0823               	movf	?___awtoft,w
  6361  08D7  00AA               	movwf	___ftmul@f2
  6362  08D8  0824               	movf	?___awtoft+1,w
  6363  08D9  00AB               	movwf	___ftmul@f2+1
  6364  08DA  0825               	movf	?___awtoft+2,w
  6365  08DB  00AC               	movwf	___ftmul@f2+2
  6366  08DC  3000               	movlw	0
  6367  08DD  00A7               	movwf	___ftmul@f1
  6368  08DE  30A0               	movlw	160
  6369  08DF  00A8               	movwf	___ftmul@f1+1
  6370  08E0  3040               	movlw	64
  6371  08E1  00A9               	movwf	___ftmul@f1+2
  6372  08E2  120A  118A  2705  120A  158A  	fcall	___ftmul
  6373  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  6374  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  6375  08E9  0827               	movf	?___ftmul,w
  6376  08EA  00B9               	movwf	___ftdiv@f1
  6377  08EB  0828               	movf	?___ftmul+1,w
  6378  08EC  00BA               	movwf	___ftdiv@f1+1
  6379  08ED  0829               	movf	?___ftmul+2,w
  6380  08EE  00BB               	movwf	___ftdiv@f1+2
  6381  08EF  30C0               	movlw	192
  6382  08F0  00B6               	movwf	___ftdiv@f2
  6383  08F1  307F               	movlw	127
  6384  08F2  00B7               	movwf	___ftdiv@f2+1
  6385  08F3  3044               	movlw	68
  6386  08F4  00B8               	movwf	___ftdiv@f2+2
  6387  08F5  120A  158A  25CC  120A  158A  	fcall	___ftdiv
  6388  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  6389  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  6390  08FC  0836               	movf	?___ftdiv,w
  6391  08FD  00D2               	movwf	_Adc_Temp_Read$1505
  6392  08FE  0837               	movf	?___ftdiv+1,w
  6393  08FF  00D3               	movwf	_Adc_Temp_Read$1505+1
  6394  0900  0838               	movf	?___ftdiv+2,w
  6395  0901  00D4               	movwf	_Adc_Temp_Read$1505+2
  6396                           
  6397                           ;Adc_Read.c: 49:     Temp = (int)((Adc(3)*5.0/1023.0)*100.0);
  6398  0902  0852               	movf	_Adc_Temp_Read$1505,w
  6399  0903  00AA               	movwf	___ftmul@f2
  6400  0904  0853               	movf	_Adc_Temp_Read$1505+1,w
  6401  0905  00AB               	movwf	___ftmul@f2+1
  6402  0906  0854               	movf	_Adc_Temp_Read$1505+2,w
  6403  0907  00AC               	movwf	___ftmul@f2+2
  6404  0908  3000               	movlw	0
  6405  0909  00A7               	movwf	___ftmul@f1
  6406  090A  30C8               	movlw	200
  6407  090B  00A8               	movwf	___ftmul@f1+1
  6408  090C  3042               	movlw	66
  6409  090D  00A9               	movwf	___ftmul@f1+2
  6410  090E  120A  118A  2705  120A  158A  	fcall	___ftmul
  6411  0913  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0914  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0915  0827               	movf	?___ftmul,w
  6414  0916  00C5               	movwf	___fttol@f1
  6415  0917  0828               	movf	?___ftmul+1,w
  6416  0918  00C6               	movwf	___fttol@f1+1
  6417  0919  0829               	movf	?___ftmul+2,w
  6418  091A  00C7               	movwf	___fttol@f1+2
  6419  091B  120A  158A  22D7   	fcall	___fttol
  6420  091E  1283               	bcf	3,5	;RP0=0, select bank0
  6421  091F  1303               	bcf	3,6	;RP1=0, select bank0
  6422  0920  0845               	movf	?___fttol,w
  6423  0921  00FF               	movwf	127
  6424  0922  087F               	movf	127,w
  6425  0923  00E6               	movwf	_Temp
  6426  0924  0008               	return
  6427  0925                     __end_of_Adc_Temp_Read:
  6428                           
  6429                           	psect	text32
  6430  060A                     __ptext32:	
  6431 ;; *************** function _Adc_Min_Read *****************
  6432 ;; Defined at:
  6433 ;;		line 37 in file "Adc_Read.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6447 ;;      Params:         0       0       0       0       0
  6448 ;;      Locals:         0       3       0       0       0
  6449 ;;      Temps:          0       0       0       0       0
  6450 ;;      Totals:         0       3       0       0       0
  6451 ;;Total ram usage:        3 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    4
  6454 ;; This function calls:
  6455 ;;		_Adc
  6456 ;;		___awtoft
  6457 ;;		___ftdiv
  6458 ;;		___ftmul
  6459 ;;		___fttol
  6460 ;; This function is called by:
  6461 ;;		_Lec_Adc_Modo_Pulv
  6462 ;;		_Lec_Adc_Modo_Fuga
  6463 ;;		_Lec_Adc_Modo_Flujo
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function _Adc_Min_Read
  6469  060A                     _Adc_Min_Read:
  6470                           
  6471                           ;Adc_Read.c: 39:     if(mod_tiempo) Min = (int)((Adc(2)*5.0/1023.0)*59.0/5.0);
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in _Adc_Min_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6475  060A  1283               	bcf	3,5	;RP0=0, select bank0
  6476  060B  1303               	bcf	3,6	;RP1=0, select bank0
  6477  060C  0864               	movf	_mod_tiempo,w
  6478  060D  1903               	btfsc	3,2
  6479  060E  2E86               	goto	l4290
  6480  060F  3002               	movlw	2
  6481  0610  160A  118A  2721  120A  118A  	fcall	_Adc
  6482  0615  0874               	movf	?_Adc+1,w
  6483  0616  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0617  1303               	bcf	3,6	;RP1=0, select bank0
  6485  0618  00A4               	movwf	___awtoft@c+1
  6486  0619  0873               	movf	?_Adc,w
  6487  061A  00A3               	movwf	___awtoft@c
  6488  061B  160A  118A  2475  120A  118A  	fcall	___awtoft
  6489  0620  1283               	bcf	3,5	;RP0=0, select bank0
  6490  0621  1303               	bcf	3,6	;RP1=0, select bank0
  6491  0622  0823               	movf	?___awtoft,w
  6492  0623  00AA               	movwf	___ftmul@f2
  6493  0624  0824               	movf	?___awtoft+1,w
  6494  0625  00AB               	movwf	___ftmul@f2+1
  6495  0626  0825               	movf	?___awtoft+2,w
  6496  0627  00AC               	movwf	___ftmul@f2+2
  6497  0628  3000               	movlw	0
  6498  0629  00A7               	movwf	___ftmul@f1
  6499  062A  30A0               	movlw	160
  6500  062B  00A8               	movwf	___ftmul@f1+1
  6501  062C  3040               	movlw	64
  6502  062D  00A9               	movwf	___ftmul@f1+2
  6503  062E  120A  118A  2705  120A  118A  	fcall	___ftmul
  6504  0633  1283               	bcf	3,5	;RP0=0, select bank0
  6505  0634  1303               	bcf	3,6	;RP1=0, select bank0
  6506  0635  0827               	movf	?___ftmul,w
  6507  0636  00B9               	movwf	___ftdiv@f1
  6508  0637  0828               	movf	?___ftmul+1,w
  6509  0638  00BA               	movwf	___ftdiv@f1+1
  6510  0639  0829               	movf	?___ftmul+2,w
  6511  063A  00BB               	movwf	___ftdiv@f1+2
  6512  063B  30C0               	movlw	192
  6513  063C  00B6               	movwf	___ftdiv@f2
  6514  063D  307F               	movlw	127
  6515  063E  00B7               	movwf	___ftdiv@f2+1
  6516  063F  3044               	movlw	68
  6517  0640  00B8               	movwf	___ftdiv@f2+2
  6518  0641  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  6519  0646  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0647  1303               	bcf	3,6	;RP1=0, select bank0
  6521  0648  0836               	movf	?___ftdiv,w
  6522  0649  00D2               	movwf	_Adc_Min_Read$1504
  6523  064A  0837               	movf	?___ftdiv+1,w
  6524  064B  00D3               	movwf	_Adc_Min_Read$1504+1
  6525  064C  0838               	movf	?___ftdiv+2,w
  6526  064D  00D4               	movwf	_Adc_Min_Read$1504+2
  6527  064E  0852               	movf	_Adc_Min_Read$1504,w
  6528  064F  00AA               	movwf	___ftmul@f2
  6529  0650  0853               	movf	_Adc_Min_Read$1504+1,w
  6530  0651  00AB               	movwf	___ftmul@f2+1
  6531  0652  0854               	movf	_Adc_Min_Read$1504+2,w
  6532  0653  00AC               	movwf	___ftmul@f2+2
  6533  0654  3000               	movlw	0
  6534  0655  00A7               	movwf	___ftmul@f1
  6535  0656  306C               	movlw	108
  6536  0657  00A8               	movwf	___ftmul@f1+1
  6537  0658  3042               	movlw	66
  6538  0659  00A9               	movwf	___ftmul@f1+2
  6539  065A  120A  118A  2705  120A  118A  	fcall	___ftmul
  6540  065F  1283               	bcf	3,5	;RP0=0, select bank0
  6541  0660  1303               	bcf	3,6	;RP1=0, select bank0
  6542  0661  0827               	movf	?___ftmul,w
  6543  0662  00B9               	movwf	___ftdiv@f1
  6544  0663  0828               	movf	?___ftmul+1,w
  6545  0664  00BA               	movwf	___ftdiv@f1+1
  6546  0665  0829               	movf	?___ftmul+2,w
  6547  0666  00BB               	movwf	___ftdiv@f1+2
  6548  0667  3000               	movlw	0
  6549  0668  00B6               	movwf	___ftdiv@f2
  6550  0669  30A0               	movlw	160
  6551  066A  00B7               	movwf	___ftdiv@f2+1
  6552  066B  3040               	movlw	64
  6553  066C  00B8               	movwf	___ftdiv@f2+2
  6554  066D  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  6555  0672  1283               	bcf	3,5	;RP0=0, select bank0
  6556  0673  1303               	bcf	3,6	;RP1=0, select bank0
  6557  0674  0836               	movf	?___ftdiv,w
  6558  0675  00C5               	movwf	___fttol@f1
  6559  0676  0837               	movf	?___ftdiv+1,w
  6560  0677  00C6               	movwf	___fttol@f1+1
  6561  0678  0838               	movf	?___ftdiv+2,w
  6562  0679  00C7               	movwf	___fttol@f1+2
  6563  067A  120A  158A  22D7  120A  118A  	fcall	___fttol
  6564  067F  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0680  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0681  0845               	movf	?___fttol,w
  6567  0682  00FF               	movwf	127
  6568  0683  087F               	movf	127,w
  6569  0684  00E8               	movwf	_Min
  6570  0685  2EFF               	goto	l4294
  6571  0686                     l4290:
  6572  0686  0864               	movf	_mod_tiempo,w
  6573  0687  1D03               	btfss	3,2
  6574  0688  2EFF               	goto	l4294
  6575  0689  3002               	movlw	2
  6576  068A  160A  118A  2721  120A  118A  	fcall	_Adc
  6577  068F  0874               	movf	?_Adc+1,w
  6578  0690  1283               	bcf	3,5	;RP0=0, select bank0
  6579  0691  1303               	bcf	3,6	;RP1=0, select bank0
  6580  0692  00A4               	movwf	___awtoft@c+1
  6581  0693  0873               	movf	?_Adc,w
  6582  0694  00A3               	movwf	___awtoft@c
  6583  0695  160A  118A  2475  120A  118A  	fcall	___awtoft
  6584  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6585  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6586  069C  0823               	movf	?___awtoft,w
  6587  069D  00AA               	movwf	___ftmul@f2
  6588  069E  0824               	movf	?___awtoft+1,w
  6589  069F  00AB               	movwf	___ftmul@f2+1
  6590  06A0  0825               	movf	?___awtoft+2,w
  6591  06A1  00AC               	movwf	___ftmul@f2+2
  6592  06A2  3000               	movlw	0
  6593  06A3  00A7               	movwf	___ftmul@f1
  6594  06A4  30A0               	movlw	160
  6595  06A5  00A8               	movwf	___ftmul@f1+1
  6596  06A6  3040               	movlw	64
  6597  06A7  00A9               	movwf	___ftmul@f1+2
  6598  06A8  120A  118A  2705  120A  118A  	fcall	___ftmul
  6599  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  6600  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  6601  06AF  0827               	movf	?___ftmul,w
  6602  06B0  00B9               	movwf	___ftdiv@f1
  6603  06B1  0828               	movf	?___ftmul+1,w
  6604  06B2  00BA               	movwf	___ftdiv@f1+1
  6605  06B3  0829               	movf	?___ftmul+2,w
  6606  06B4  00BB               	movwf	___ftdiv@f1+2
  6607  06B5  30C0               	movlw	192
  6608  06B6  00B6               	movwf	___ftdiv@f2
  6609  06B7  307F               	movlw	127
  6610  06B8  00B7               	movwf	___ftdiv@f2+1
  6611  06B9  3044               	movlw	68
  6612  06BA  00B8               	movwf	___ftdiv@f2+2
  6613  06BB  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  6614  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  6615  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  6616  06C2  0836               	movf	?___ftdiv,w
  6617  06C3  00D2               	movwf	_Adc_Min_Read$1504
  6618  06C4  0837               	movf	?___ftdiv+1,w
  6619  06C5  00D3               	movwf	_Adc_Min_Read$1504+1
  6620  06C6  0838               	movf	?___ftdiv+2,w
  6621  06C7  00D4               	movwf	_Adc_Min_Read$1504+2
  6622  06C8  0852               	movf	_Adc_Min_Read$1504,w
  6623  06C9  00AA               	movwf	___ftmul@f2
  6624  06CA  0853               	movf	_Adc_Min_Read$1504+1,w
  6625  06CB  00AB               	movwf	___ftmul@f2+1
  6626  06CC  0854               	movf	_Adc_Min_Read$1504+2,w
  6627  06CD  00AC               	movwf	___ftmul@f2+2
  6628  06CE  3000               	movlw	0
  6629  06CF  00A7               	movwf	___ftmul@f1
  6630  06D0  306C               	movlw	108
  6631  06D1  00A8               	movwf	___ftmul@f1+1
  6632  06D2  3042               	movlw	66
  6633  06D3  00A9               	movwf	___ftmul@f1+2
  6634  06D4  120A  118A  2705  120A  118A  	fcall	___ftmul
  6635  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  6636  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  6637  06DB  0827               	movf	?___ftmul,w
  6638  06DC  00B9               	movwf	___ftdiv@f1
  6639  06DD  0828               	movf	?___ftmul+1,w
  6640  06DE  00BA               	movwf	___ftdiv@f1+1
  6641  06DF  0829               	movf	?___ftmul+2,w
  6642  06E0  00BB               	movwf	___ftdiv@f1+2
  6643  06E1  3000               	movlw	0
  6644  06E2  00B6               	movwf	___ftdiv@f2
  6645  06E3  30A0               	movlw	160
  6646  06E4  00B7               	movwf	___ftdiv@f2+1
  6647  06E5  3040               	movlw	64
  6648  06E6  00B8               	movwf	___ftdiv@f2+2
  6649  06E7  120A  158A  25CC  120A  118A  	fcall	___ftdiv
  6650  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  6651  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  6652  06EE  0836               	movf	?___ftdiv,w
  6653  06EF  00C5               	movwf	___fttol@f1
  6654  06F0  0837               	movf	?___ftdiv+1,w
  6655  06F1  00C6               	movwf	___fttol@f1+1
  6656  06F2  0838               	movf	?___ftdiv+2,w
  6657  06F3  00C7               	movwf	___fttol@f1+2
  6658  06F4  120A  158A  22D7  120A  118A  	fcall	___fttol
  6659  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  6660  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  6661  06FB  0845               	movf	?___fttol,w
  6662  06FC  00FF               	movwf	127
  6663  06FD  087F               	movf	127,w
  6664  06FE  00E7               	movwf	_Seg
  6665  06FF                     l4294:
  6666                           
  6667                           ;Adc_Read.c: 42:     if(Seg == 0) Seg = 1;
  6668  06FF  0867               	movf	_Seg,w
  6669  0700  1D03               	btfss	3,2
  6670  0701  0008               	return
  6671  0702  01E7               	clrf	_Seg
  6672  0703  0AE7               	incf	_Seg,f
  6673  0704  0008               	return
  6674  0705                     __end_of_Adc_Min_Read:
  6675                           
  6676                           	psect	text33
  6677  0AD7                     __ptext33:	
  6678 ;; *************** function ___fttol *****************
  6679 ;; Defined at:
  6680 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\fttol.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  f1              3   37[BANK0 ] float 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  lval            4   45[BANK0 ] unsigned long 
  6685 ;;  exp1            1   49[BANK0 ] unsigned char 
  6686 ;;  sign1           1   44[BANK0 ] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  4   37[BANK0 ] long 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, btemp+1
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6696 ;;      Params:         0       4       0       0       0
  6697 ;;      Locals:         0       6       0       0       0
  6698 ;;      Temps:          0       3       0       0       0
  6699 ;;      Totals:         0      13       0       0       0
  6700 ;;Total ram usage:       13 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    2
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_Adc_Rpm_Read
  6707 ;;		_Adc_Pwm_Read
  6708 ;;		_Adc_Min_Read
  6709 ;;		_Adc_Temp_Read
  6710 ;;		_Pwm1_init
  6711 ;;		_Pwm1
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function ___fttol
  6717  0AD7                     ___fttol:
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  6721  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0AD9  0845               	movf	___fttol@f1,w
  6724  0ADA  00C9               	movwf	??___fttol
  6725  0ADB  0846               	movf	___fttol@f1+1,w
  6726  0ADC  00CA               	movwf	??___fttol+1
  6727  0ADD  0847               	movf	___fttol@f1+2,w
  6728  0ADE  00CB               	movwf	??___fttol+2
  6729  0ADF  1003               	clrc
  6730  0AE0  0D4A               	rlf	??___fttol+1,w
  6731  0AE1  0D4B               	rlf	??___fttol+2,w
  6732  0AE2  00FF               	movwf	127
  6733  0AE3  087F               	movf	127,w
  6734  0AE4  00D1               	movwf	___fttol@exp1
  6735  0AE5  0851               	movf	___fttol@exp1,w
  6736  0AE6  1D03               	btfss	3,2
  6737  0AE7  2AF1               	goto	l2864
  6738  0AE8                     l2860:
  6739  0AE8  3000               	movlw	0
  6740  0AE9  00C8               	movwf	?___fttol+3
  6741  0AEA  3000               	movlw	0
  6742  0AEB  00C7               	movwf	?___fttol+2
  6743  0AEC  3000               	movlw	0
  6744  0AED  00C6               	movwf	?___fttol+1
  6745  0AEE  3000               	movlw	0
  6746  0AEF  00C5               	movwf	?___fttol
  6747  0AF0  0008               	return
  6748  0AF1                     l2864:
  6749  0AF1  0845               	movf	___fttol@f1,w
  6750  0AF2  00C9               	movwf	??___fttol
  6751  0AF3  0846               	movf	___fttol@f1+1,w
  6752  0AF4  00CA               	movwf	??___fttol+1
  6753  0AF5  0847               	movf	___fttol@f1+2,w
  6754  0AF6  00CB               	movwf	??___fttol+2
  6755  0AF7  3017               	movlw	23
  6756  0AF8                     u2355:
  6757  0AF8  1003               	clrc
  6758  0AF9  0CCB               	rrf	??___fttol+2,f
  6759  0AFA  0CCA               	rrf	??___fttol+1,f
  6760  0AFB  0CC9               	rrf	??___fttol,f
  6761  0AFC  3EFF               	addlw	-1
  6762  0AFD  1D03               	skipz
  6763  0AFE  2AF8               	goto	u2355
  6764  0AFF  0849               	movf	??___fttol,w
  6765  0B00  00FF               	movwf	127
  6766  0B01  087F               	movf	127,w
  6767  0B02  00CC               	movwf	___fttol@sign1
  6768  0B03  17C6               	bsf	___fttol@f1+1,7
  6769  0B04  30FF               	movlw	255
  6770  0B05  05C5               	andwf	___fttol@f1,f
  6771  0B06  30FF               	movlw	255
  6772  0B07  05C6               	andwf	___fttol@f1+1,f
  6773  0B08  3000               	movlw	0
  6774  0B09  05C7               	andwf	___fttol@f1+2,f
  6775  0B0A  0845               	movf	___fttol@f1,w
  6776  0B0B  00CD               	movwf	___fttol@lval
  6777  0B0C  0846               	movf	___fttol@f1+1,w
  6778  0B0D  00CE               	movwf	___fttol@lval+1
  6779  0B0E  0847               	movf	___fttol@f1+2,w
  6780  0B0F  00CF               	movwf	___fttol@lval+2
  6781  0B10  01D0               	clrf	___fttol@lval+3
  6782  0B11  308E               	movlw	142
  6783  0B12  02D1               	subwf	___fttol@exp1,f
  6784  0B13  1FD1               	btfss	___fttol@exp1,7
  6785  0B14  2B2A               	goto	l2886
  6786  0B15  0851               	movf	___fttol@exp1,w
  6787  0B16  3A80               	xorlw	128
  6788  0B17  3E8F               	addlw	143
  6789  0B18  1C03               	btfss	3,0
  6790  0B19  2AE8               	goto	l2860
  6791  0B1A                     l2882:
  6792  0B1A  3001               	movlw	1
  6793  0B1B                     u2385:
  6794  0B1B  1003               	clrc
  6795  0B1C  0CD0               	rrf	___fttol@lval+3,f
  6796  0B1D  0CCF               	rrf	___fttol@lval+2,f
  6797  0B1E  0CCE               	rrf	___fttol@lval+1,f
  6798  0B1F  0CCD               	rrf	___fttol@lval,f
  6799  0B20  3EFF               	addlw	-1
  6800  0B21  1D03               	skipz
  6801  0B22  2B1B               	goto	u2385
  6802  0B23  3001               	movlw	1
  6803  0B24  00FF               	movwf	127
  6804  0B25  087F               	movf	127,w
  6805  0B26  07D1               	addwf	___fttol@exp1,f
  6806  0B27  1903               	btfsc	3,2
  6807  0B28  2B3D               	goto	l2894
  6808  0B29  2B1A               	goto	l2882
  6809  0B2A                     l2886:
  6810  0B2A  3018               	movlw	24
  6811  0B2B  0251               	subwf	___fttol@exp1,w
  6812  0B2C  1803               	btfsc	3,0
  6813  0B2D  2AE8               	goto	l2860
  6814  0B2E                     l1055:
  6815  0B2E  0851               	movf	___fttol@exp1,w
  6816  0B2F  1903               	btfsc	3,2
  6817  0B30  2B3D               	goto	l2894
  6818  0B31  3001               	movlw	1
  6819  0B32  00C9               	movwf	??___fttol
  6820  0B33                     u2415:
  6821  0B33  1003               	clrc
  6822  0B34  0DCD               	rlf	___fttol@lval,f
  6823  0B35  0DCE               	rlf	___fttol@lval+1,f
  6824  0B36  0DCF               	rlf	___fttol@lval+2,f
  6825  0B37  0DD0               	rlf	___fttol@lval+3,f
  6826  0B38  0BC9               	decfsz	??___fttol,f
  6827  0B39  2B33               	goto	u2415
  6828  0B3A  3001               	movlw	1
  6829  0B3B  02D1               	subwf	___fttol@exp1,f
  6830  0B3C  2B2E               	goto	l1055
  6831  0B3D                     l2894:
  6832  0B3D  084C               	movf	___fttol@sign1,w
  6833  0B3E  1903               	btfsc	3,2
  6834  0B3F  2B4B               	goto	l2898
  6835  0B40  09CD               	comf	___fttol@lval,f
  6836  0B41  09CE               	comf	___fttol@lval+1,f
  6837  0B42  09CF               	comf	___fttol@lval+2,f
  6838  0B43  09D0               	comf	___fttol@lval+3,f
  6839  0B44  0ACD               	incf	___fttol@lval,f
  6840  0B45  1903               	skipnz
  6841  0B46  0ACE               	incf	___fttol@lval+1,f
  6842  0B47  1903               	skipnz
  6843  0B48  0ACF               	incf	___fttol@lval+2,f
  6844  0B49  1903               	skipnz
  6845  0B4A  0AD0               	incf	___fttol@lval+3,f
  6846  0B4B                     l2898:
  6847  0B4B  0850               	movf	___fttol@lval+3,w
  6848  0B4C  00C8               	movwf	?___fttol+3
  6849  0B4D  084F               	movf	___fttol@lval+2,w
  6850  0B4E  00C7               	movwf	?___fttol+2
  6851  0B4F  084E               	movf	___fttol@lval+1,w
  6852  0B50  00C6               	movwf	?___fttol+1
  6853  0B51  084D               	movf	___fttol@lval,w
  6854  0B52  00C5               	movwf	?___fttol
  6855  0B53  0008               	return
  6856  0B54                     __end_of___fttol:
  6857                           
  6858                           	psect	text34
  6859  0705                     __ptext34:	
  6860 ;; *************** function ___ftmul *****************
  6861 ;; Defined at:
  6862 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftmul.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  f1              3    7[BANK0 ] float 
  6865 ;;  f2              3   10[BANK0 ] float 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  f3_as_produc    3   17[BANK0 ] unsigned um
  6868 ;;  sign            1   21[BANK0 ] unsigned char 
  6869 ;;  cntr            1   20[BANK0 ] unsigned char 
  6870 ;;  exp             1   16[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  3    7[BANK0 ] float 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6880 ;;      Params:         0       6       0       0       0
  6881 ;;      Locals:         0       6       0       0       0
  6882 ;;      Temps:          0       3       0       0       0
  6883 ;;      Totals:         0      15       0       0       0
  6884 ;;Total ram usage:       15 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    3
  6887 ;; This function calls:
  6888 ;;		___ftpack
  6889 ;; This function is called by:
  6890 ;;		_Adc_Rpm_Read
  6891 ;;		_Adc_Pwm_Read
  6892 ;;		_Adc_Min_Read
  6893 ;;		_Adc_Temp_Read
  6894 ;;		_Pwm1
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           
  6899                           ;psect for function ___ftmul
  6900  0705                     ___ftmul:
  6901                           
  6902                           ;incstack = 0
  6903                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6904  0705  1283               	bcf	3,5	;RP0=0, select bank0
  6905  0706  1303               	bcf	3,6	;RP1=0, select bank0
  6906  0707  0827               	movf	___ftmul@f1,w
  6907  0708  00AD               	movwf	??___ftmul
  6908  0709  0828               	movf	___ftmul@f1+1,w
  6909  070A  00AE               	movwf	??___ftmul+1
  6910  070B  0829               	movf	___ftmul@f1+2,w
  6911  070C  00AF               	movwf	??___ftmul+2
  6912  070D  1003               	clrc
  6913  070E  0D2E               	rlf	??___ftmul+1,w
  6914  070F  0D2F               	rlf	??___ftmul+2,w
  6915  0710  00FF               	movwf	127
  6916  0711  087F               	movf	127,w
  6917  0712  00B0               	movwf	___ftmul@exp
  6918  0713  0830               	movf	___ftmul@exp,w
  6919  0714  1D03               	btfss	3,2
  6920  0715  2F1D               	goto	l4164
  6921  0716  3000               	movlw	0
  6922  0717  00A7               	movwf	?___ftmul
  6923  0718  3000               	movlw	0
  6924  0719  00A8               	movwf	?___ftmul+1
  6925  071A  3000               	movlw	0
  6926  071B  00A9               	movwf	?___ftmul+2
  6927  071C  0008               	return
  6928  071D                     l4164:
  6929  071D  082A               	movf	___ftmul@f2,w
  6930  071E  00AD               	movwf	??___ftmul
  6931  071F  082B               	movf	___ftmul@f2+1,w
  6932  0720  00AE               	movwf	??___ftmul+1
  6933  0721  082C               	movf	___ftmul@f2+2,w
  6934  0722  00AF               	movwf	??___ftmul+2
  6935  0723  1003               	clrc
  6936  0724  0D2E               	rlf	??___ftmul+1,w
  6937  0725  0D2F               	rlf	??___ftmul+2,w
  6938  0726  00FF               	movwf	127
  6939  0727  087F               	movf	127,w
  6940  0728  00B5               	movwf	___ftmul@sign
  6941  0729  0835               	movf	___ftmul@sign,w
  6942  072A  1D03               	btfss	3,2
  6943  072B  2F33               	goto	l4170
  6944  072C  3000               	movlw	0
  6945  072D  00A7               	movwf	?___ftmul
  6946  072E  3000               	movlw	0
  6947  072F  00A8               	movwf	?___ftmul+1
  6948  0730  3000               	movlw	0
  6949  0731  00A9               	movwf	?___ftmul+2
  6950  0732  0008               	return
  6951  0733                     l4170:
  6952  0733  0835               	movf	___ftmul@sign,w
  6953  0734  3E7B               	addlw	123
  6954  0735  00FF               	movwf	127
  6955  0736  087F               	movf	127,w
  6956  0737  07B0               	addwf	___ftmul@exp,f
  6957  0738  0827               	movf	___ftmul@f1,w
  6958  0739  00AD               	movwf	??___ftmul
  6959  073A  0828               	movf	___ftmul@f1+1,w
  6960  073B  00AE               	movwf	??___ftmul+1
  6961  073C  0829               	movf	___ftmul@f1+2,w
  6962  073D  00AF               	movwf	??___ftmul+2
  6963  073E  3010               	movlw	16
  6964  073F                     u4175:
  6965  073F  1003               	clrc
  6966  0740  0CAF               	rrf	??___ftmul+2,f
  6967  0741  0CAE               	rrf	??___ftmul+1,f
  6968  0742  0CAD               	rrf	??___ftmul,f
  6969  0743  3EFF               	addlw	-1
  6970  0744  1D03               	skipz
  6971  0745  2F3F               	goto	u4175
  6972  0746  082D               	movf	??___ftmul,w
  6973  0747  00FF               	movwf	127
  6974  0748  087F               	movf	127,w
  6975  0749  00B5               	movwf	___ftmul@sign
  6976  074A  082A               	movf	___ftmul@f2,w
  6977  074B  00AD               	movwf	??___ftmul
  6978  074C  082B               	movf	___ftmul@f2+1,w
  6979  074D  00AE               	movwf	??___ftmul+1
  6980  074E  082C               	movf	___ftmul@f2+2,w
  6981  074F  00AF               	movwf	??___ftmul+2
  6982  0750  3010               	movlw	16
  6983  0751                     u4185:
  6984  0751  1003               	clrc
  6985  0752  0CAF               	rrf	??___ftmul+2,f
  6986  0753  0CAE               	rrf	??___ftmul+1,f
  6987  0754  0CAD               	rrf	??___ftmul,f
  6988  0755  3EFF               	addlw	-1
  6989  0756  1D03               	skipz
  6990  0757  2F51               	goto	u4185
  6991  0758  082D               	movf	??___ftmul,w
  6992  0759  00FF               	movwf	127
  6993  075A  087F               	movf	127,w
  6994  075B  06B5               	xorwf	___ftmul@sign,f
  6995  075C  3080               	movlw	128
  6996  075D  00FF               	movwf	127
  6997  075E  087F               	movf	127,w
  6998  075F  05B5               	andwf	___ftmul@sign,f
  6999  0760  17A8               	bsf	___ftmul@f1+1,7
  7000  0761  17AB               	bsf	___ftmul@f2+1,7
  7001  0762  30FF               	movlw	255
  7002  0763  05AA               	andwf	___ftmul@f2,f
  7003  0764  30FF               	movlw	255
  7004  0765  05AB               	andwf	___ftmul@f2+1,f
  7005  0766  3000               	movlw	0
  7006  0767  05AC               	andwf	___ftmul@f2+2,f
  7007  0768  3000               	movlw	0
  7008  0769  00B1               	movwf	___ftmul@f3_as_product
  7009  076A  3000               	movlw	0
  7010  076B  00B2               	movwf	___ftmul@f3_as_product+1
  7011  076C  3000               	movlw	0
  7012  076D  00B3               	movwf	___ftmul@f3_as_product+2
  7013  076E  3007               	movlw	7
  7014  076F  00FF               	movwf	127
  7015  0770  087F               	movf	127,w
  7016  0771  00B4               	movwf	___ftmul@cntr
  7017  0772                     l4182:
  7018  0772  1C27               	btfss	___ftmul@f1,0
  7019  0773  2F82               	goto	l4186
  7020  0774  082A               	movf	___ftmul@f2,w
  7021  0775  07B1               	addwf	___ftmul@f3_as_product,f
  7022  0776  082B               	movf	___ftmul@f2+1,w
  7023  0777  1103               	clrz
  7024  0778  1803               	skipnc
  7025  0779  0A2B               	incf	___ftmul@f2+1,w
  7026  077A  1D03               	btfss	3,2
  7027  077B  07B2               	addwf	___ftmul@f3_as_product+1,f
  7028  077C  082C               	movf	___ftmul@f2+2,w
  7029  077D  1103               	clrz
  7030  077E  1803               	skipnc
  7031  077F  0A2C               	incf	___ftmul@f2+2,w
  7032  0780  1D03               	btfss	3,2
  7033  0781  07B3               	addwf	___ftmul@f3_as_product+2,f
  7034  0782                     l4186:
  7035  0782  3001               	movlw	1
  7036  0783                     u4215:
  7037  0783  1003               	clrc
  7038  0784  0CA9               	rrf	___ftmul@f1+2,f
  7039  0785  0CA8               	rrf	___ftmul@f1+1,f
  7040  0786  0CA7               	rrf	___ftmul@f1,f
  7041  0787  3EFF               	addlw	-1
  7042  0788  1D03               	skipz
  7043  0789  2F83               	goto	u4215
  7044  078A  3001               	movlw	1
  7045  078B                     u4225:
  7046  078B  1003               	clrc
  7047  078C  0DAA               	rlf	___ftmul@f2,f
  7048  078D  0DAB               	rlf	___ftmul@f2+1,f
  7049  078E  0DAC               	rlf	___ftmul@f2+2,f
  7050  078F  3EFF               	addlw	-1
  7051  0790  1D03               	skipz
  7052  0791  2F8B               	goto	u4225
  7053  0792  3001               	movlw	1
  7054  0793  02B4               	subwf	___ftmul@cntr,f
  7055  0794  1D03               	btfss	3,2
  7056  0795  2F72               	goto	l4182
  7057  0796  3009               	movlw	9
  7058  0797  00FF               	movwf	127
  7059  0798  087F               	movf	127,w
  7060  0799  00B4               	movwf	___ftmul@cntr
  7061  079A                     l4194:
  7062  079A  1C27               	btfss	___ftmul@f1,0
  7063  079B  2FAA               	goto	l4198
  7064  079C  082A               	movf	___ftmul@f2,w
  7065  079D  07B1               	addwf	___ftmul@f3_as_product,f
  7066  079E  082B               	movf	___ftmul@f2+1,w
  7067  079F  1103               	clrz
  7068  07A0  1803               	skipnc
  7069  07A1  0A2B               	incf	___ftmul@f2+1,w
  7070  07A2  1D03               	btfss	3,2
  7071  07A3  07B2               	addwf	___ftmul@f3_as_product+1,f
  7072  07A4  082C               	movf	___ftmul@f2+2,w
  7073  07A5  1103               	clrz
  7074  07A6  1803               	skipnc
  7075  07A7  0A2C               	incf	___ftmul@f2+2,w
  7076  07A8  1D03               	btfss	3,2
  7077  07A9  07B3               	addwf	___ftmul@f3_as_product+2,f
  7078  07AA                     l4198:
  7079  07AA  3001               	movlw	1
  7080  07AB                     u4265:
  7081  07AB  1003               	clrc
  7082  07AC  0CA9               	rrf	___ftmul@f1+2,f
  7083  07AD  0CA8               	rrf	___ftmul@f1+1,f
  7084  07AE  0CA7               	rrf	___ftmul@f1,f
  7085  07AF  3EFF               	addlw	-1
  7086  07B0  1D03               	skipz
  7087  07B1  2FAB               	goto	u4265
  7088  07B2  3001               	movlw	1
  7089  07B3                     u4275:
  7090  07B3  1003               	clrc
  7091  07B4  0CB3               	rrf	___ftmul@f3_as_product+2,f
  7092  07B5  0CB2               	rrf	___ftmul@f3_as_product+1,f
  7093  07B6  0CB1               	rrf	___ftmul@f3_as_product,f
  7094  07B7  3EFF               	addlw	-1
  7095  07B8  1D03               	skipz
  7096  07B9  2FB3               	goto	u4275
  7097  07BA  3001               	movlw	1
  7098  07BB  02B4               	subwf	___ftmul@cntr,f
  7099  07BC  1D03               	btfss	3,2
  7100  07BD  2F9A               	goto	l4194
  7101  07BE  0831               	movf	___ftmul@f3_as_product,w
  7102  07BF  00F3               	movwf	___ftpack@arg
  7103  07C0  0832               	movf	___ftmul@f3_as_product+1,w
  7104  07C1  00F4               	movwf	___ftpack@arg+1
  7105  07C2  0833               	movf	___ftmul@f3_as_product+2,w
  7106  07C3  00F5               	movwf	___ftpack@arg+2
  7107  07C4  0830               	movf	___ftmul@exp,w
  7108  07C5  00FF               	movwf	127
  7109  07C6  087F               	movf	127,w
  7110  07C7  00F6               	movwf	___ftpack@exp
  7111  07C8  0835               	movf	___ftmul@sign,w
  7112  07C9  00FF               	movwf	127
  7113  07CA  087F               	movf	127,w
  7114  07CB  00F7               	movwf	___ftpack@sign
  7115  07CC  120A  158A  21EF   	fcall	___ftpack
  7116  07CF  0873               	movf	?___ftpack,w
  7117  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  7118  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  7119  07D2  00A7               	movwf	?___ftmul
  7120  07D3  0874               	movf	?___ftpack+1,w
  7121  07D4  00A8               	movwf	?___ftmul+1
  7122  07D5  0875               	movf	?___ftpack+2,w
  7123  07D6  00A9               	movwf	?___ftmul+2
  7124  07D7  0008               	return
  7125  07D8                     __end_of___ftmul:
  7126                           
  7127                           	psect	text35
  7128  0DCC                     __ptext35:	
  7129 ;; *************** function ___ftdiv *****************
  7130 ;; Defined at:
  7131 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftdiv.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  f2              3   22[BANK0 ] float 
  7134 ;;  f1              3   25[BANK0 ] float 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  f3              3   32[BANK0 ] float 
  7137 ;;  sign            1   36[BANK0 ] unsigned char 
  7138 ;;  exp             1   35[BANK0 ] unsigned char 
  7139 ;;  cntr            1   31[BANK0 ] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  3   22[BANK0 ] float 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7149 ;;      Params:         0       6       0       0       0
  7150 ;;      Locals:         0       6       0       0       0
  7151 ;;      Temps:          0       3       0       0       0
  7152 ;;      Totals:         0      15       0       0       0
  7153 ;;Total ram usage:       15 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    3
  7156 ;; This function calls:
  7157 ;;		___ftpack
  7158 ;; This function is called by:
  7159 ;;		_Adc_Rpm_Read
  7160 ;;		_Adc_Pwm_Read
  7161 ;;		_Adc_Min_Read
  7162 ;;		_Adc_Temp_Read
  7163 ;;		_Pwm1_init
  7164 ;;		_Pwm1
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function ___ftdiv
  7170  0DCC                     ___ftdiv:
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7174  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  7175  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  7176  0DCE  0839               	movf	___ftdiv@f1,w
  7177  0DCF  00BC               	movwf	??___ftdiv
  7178  0DD0  083A               	movf	___ftdiv@f1+1,w
  7179  0DD1  00BD               	movwf	??___ftdiv+1
  7180  0DD2  083B               	movf	___ftdiv@f1+2,w
  7181  0DD3  00BE               	movwf	??___ftdiv+2
  7182  0DD4  1003               	clrc
  7183  0DD5  0D3D               	rlf	??___ftdiv+1,w
  7184  0DD6  0D3E               	rlf	??___ftdiv+2,w
  7185  0DD7  00FF               	movwf	127
  7186  0DD8  087F               	movf	127,w
  7187  0DD9  00C3               	movwf	___ftdiv@exp
  7188  0DDA  0843               	movf	___ftdiv@exp,w
  7189  0DDB  1D03               	btfss	3,2
  7190  0DDC  2DE4               	goto	l4118
  7191  0DDD  3000               	movlw	0
  7192  0DDE  00B6               	movwf	?___ftdiv
  7193  0DDF  3000               	movlw	0
  7194  0DE0  00B7               	movwf	?___ftdiv+1
  7195  0DE1  3000               	movlw	0
  7196  0DE2  00B8               	movwf	?___ftdiv+2
  7197  0DE3  0008               	return
  7198  0DE4                     l4118:
  7199  0DE4  0836               	movf	___ftdiv@f2,w
  7200  0DE5  00BC               	movwf	??___ftdiv
  7201  0DE6  0837               	movf	___ftdiv@f2+1,w
  7202  0DE7  00BD               	movwf	??___ftdiv+1
  7203  0DE8  0838               	movf	___ftdiv@f2+2,w
  7204  0DE9  00BE               	movwf	??___ftdiv+2
  7205  0DEA  1003               	clrc
  7206  0DEB  0D3D               	rlf	??___ftdiv+1,w
  7207  0DEC  0D3E               	rlf	??___ftdiv+2,w
  7208  0DED  00FF               	movwf	127
  7209  0DEE  087F               	movf	127,w
  7210  0DEF  00C4               	movwf	___ftdiv@sign
  7211  0DF0  0844               	movf	___ftdiv@sign,w
  7212  0DF1  1D03               	btfss	3,2
  7213  0DF2  2DFA               	goto	l4124
  7214  0DF3  3000               	movlw	0
  7215  0DF4  00B6               	movwf	?___ftdiv
  7216  0DF5  3000               	movlw	0
  7217  0DF6  00B7               	movwf	?___ftdiv+1
  7218  0DF7  3000               	movlw	0
  7219  0DF8  00B8               	movwf	?___ftdiv+2
  7220  0DF9  0008               	return
  7221  0DFA                     l4124:
  7222  0DFA  3000               	movlw	0
  7223  0DFB  00C0               	movwf	___ftdiv@f3
  7224  0DFC  3000               	movlw	0
  7225  0DFD  00C1               	movwf	___ftdiv@f3+1
  7226  0DFE  3000               	movlw	0
  7227  0DFF  00C2               	movwf	___ftdiv@f3+2
  7228  0E00  3089               	movlw	137
  7229  0E01  0744               	addwf	___ftdiv@sign,w
  7230  0E02  00BC               	movwf	??___ftdiv
  7231  0E03  083C               	movf	??___ftdiv,w
  7232  0E04  02C3               	subwf	___ftdiv@exp,f
  7233  0E05  0839               	movf	___ftdiv@f1,w
  7234  0E06  00BC               	movwf	??___ftdiv
  7235  0E07  083A               	movf	___ftdiv@f1+1,w
  7236  0E08  00BD               	movwf	??___ftdiv+1
  7237  0E09  083B               	movf	___ftdiv@f1+2,w
  7238  0E0A  00BE               	movwf	??___ftdiv+2
  7239  0E0B  3010               	movlw	16
  7240  0E0C                     u4095:
  7241  0E0C  1003               	clrc
  7242  0E0D  0CBE               	rrf	??___ftdiv+2,f
  7243  0E0E  0CBD               	rrf	??___ftdiv+1,f
  7244  0E0F  0CBC               	rrf	??___ftdiv,f
  7245  0E10  3EFF               	addlw	-1
  7246  0E11  1D03               	skipz
  7247  0E12  2E0C               	goto	u4095
  7248  0E13  083C               	movf	??___ftdiv,w
  7249  0E14  00FF               	movwf	127
  7250  0E15  087F               	movf	127,w
  7251  0E16  00C4               	movwf	___ftdiv@sign
  7252  0E17  0836               	movf	___ftdiv@f2,w
  7253  0E18  00BC               	movwf	??___ftdiv
  7254  0E19  0837               	movf	___ftdiv@f2+1,w
  7255  0E1A  00BD               	movwf	??___ftdiv+1
  7256  0E1B  0838               	movf	___ftdiv@f2+2,w
  7257  0E1C  00BE               	movwf	??___ftdiv+2
  7258  0E1D  3010               	movlw	16
  7259  0E1E                     u4105:
  7260  0E1E  1003               	clrc
  7261  0E1F  0CBE               	rrf	??___ftdiv+2,f
  7262  0E20  0CBD               	rrf	??___ftdiv+1,f
  7263  0E21  0CBC               	rrf	??___ftdiv,f
  7264  0E22  3EFF               	addlw	-1
  7265  0E23  1D03               	skipz
  7266  0E24  2E1E               	goto	u4105
  7267  0E25  083C               	movf	??___ftdiv,w
  7268  0E26  00FF               	movwf	127
  7269  0E27  087F               	movf	127,w
  7270  0E28  06C4               	xorwf	___ftdiv@sign,f
  7271  0E29  3080               	movlw	128
  7272  0E2A  00FF               	movwf	127
  7273  0E2B  087F               	movf	127,w
  7274  0E2C  05C4               	andwf	___ftdiv@sign,f
  7275  0E2D  17BA               	bsf	___ftdiv@f1+1,7
  7276  0E2E  30FF               	movlw	255
  7277  0E2F  05B9               	andwf	___ftdiv@f1,f
  7278  0E30  30FF               	movlw	255
  7279  0E31  05BA               	andwf	___ftdiv@f1+1,f
  7280  0E32  3000               	movlw	0
  7281  0E33  05BB               	andwf	___ftdiv@f1+2,f
  7282  0E34  17B7               	bsf	___ftdiv@f2+1,7
  7283  0E35  30FF               	movlw	255
  7284  0E36  05B6               	andwf	___ftdiv@f2,f
  7285  0E37  30FF               	movlw	255
  7286  0E38  05B7               	andwf	___ftdiv@f2+1,f
  7287  0E39  3000               	movlw	0
  7288  0E3A  05B8               	andwf	___ftdiv@f2+2,f
  7289  0E3B  3018               	movlw	24
  7290  0E3C  00FF               	movwf	127
  7291  0E3D  087F               	movf	127,w
  7292  0E3E  00BF               	movwf	___ftdiv@cntr
  7293  0E3F                     l4142:
  7294  0E3F  3001               	movlw	1
  7295  0E40                     u4115:
  7296  0E40  1003               	clrc
  7297  0E41  0DC0               	rlf	___ftdiv@f3,f
  7298  0E42  0DC1               	rlf	___ftdiv@f3+1,f
  7299  0E43  0DC2               	rlf	___ftdiv@f3+2,f
  7300  0E44  3EFF               	addlw	-1
  7301  0E45  1D03               	skipz
  7302  0E46  2E40               	goto	u4115
  7303  0E47  0838               	movf	___ftdiv@f2+2,w
  7304  0E48  023B               	subwf	___ftdiv@f1+2,w
  7305  0E49  1D03               	skipz
  7306  0E4A  2E51               	goto	u4125
  7307  0E4B  0837               	movf	___ftdiv@f2+1,w
  7308  0E4C  023A               	subwf	___ftdiv@f1+1,w
  7309  0E4D  1D03               	skipz
  7310  0E4E  2E51               	goto	u4125
  7311  0E4F  0836               	movf	___ftdiv@f2,w
  7312  0E50  0239               	subwf	___ftdiv@f1,w
  7313  0E51                     u4125:
  7314  0E51  1C03               	skipc
  7315  0E52  2E5E               	goto	l4150
  7316  0E53  0836               	movf	___ftdiv@f2,w
  7317  0E54  02B9               	subwf	___ftdiv@f1,f
  7318  0E55  0837               	movf	___ftdiv@f2+1,w
  7319  0E56  1C03               	skipc
  7320  0E57  0F37               	incfsz	___ftdiv@f2+1,w
  7321  0E58  02BA               	subwf	___ftdiv@f1+1,f
  7322  0E59  0838               	movf	___ftdiv@f2+2,w
  7323  0E5A  1C03               	skipc
  7324  0E5B  0A38               	incf	___ftdiv@f2+2,w
  7325  0E5C  02BB               	subwf	___ftdiv@f1+2,f
  7326  0E5D  1440               	bsf	___ftdiv@f3,0
  7327  0E5E                     l4150:
  7328  0E5E  3001               	movlw	1
  7329  0E5F                     u4135:
  7330  0E5F  1003               	clrc
  7331  0E60  0DB9               	rlf	___ftdiv@f1,f
  7332  0E61  0DBA               	rlf	___ftdiv@f1+1,f
  7333  0E62  0DBB               	rlf	___ftdiv@f1+2,f
  7334  0E63  3EFF               	addlw	-1
  7335  0E64  1D03               	skipz
  7336  0E65  2E5F               	goto	u4135
  7337  0E66  3001               	movlw	1
  7338  0E67  02BF               	subwf	___ftdiv@cntr,f
  7339  0E68  1D03               	btfss	3,2
  7340  0E69  2E3F               	goto	l4142
  7341  0E6A  0840               	movf	___ftdiv@f3,w
  7342  0E6B  00F3               	movwf	___ftpack@arg
  7343  0E6C  0841               	movf	___ftdiv@f3+1,w
  7344  0E6D  00F4               	movwf	___ftpack@arg+1
  7345  0E6E  0842               	movf	___ftdiv@f3+2,w
  7346  0E6F  00F5               	movwf	___ftpack@arg+2
  7347  0E70  0843               	movf	___ftdiv@exp,w
  7348  0E71  00FF               	movwf	127
  7349  0E72  087F               	movf	127,w
  7350  0E73  00F6               	movwf	___ftpack@exp
  7351  0E74  0844               	movf	___ftdiv@sign,w
  7352  0E75  00FF               	movwf	127
  7353  0E76  087F               	movf	127,w
  7354  0E77  00F7               	movwf	___ftpack@sign
  7355  0E78  120A  158A  21EF   	fcall	___ftpack
  7356  0E7B  0873               	movf	?___ftpack,w
  7357  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  7358  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  7359  0E7E  00B6               	movwf	?___ftdiv
  7360  0E7F  0874               	movf	?___ftpack+1,w
  7361  0E80  00B7               	movwf	?___ftdiv+1
  7362  0E81  0875               	movf	?___ftpack+2,w
  7363  0E82  00B8               	movwf	?___ftdiv+2
  7364  0E83  0008               	return
  7365  0E84                     __end_of___ftdiv:
  7366                           
  7367                           	psect	text36
  7368  1475                     __ptext36:	
  7369 ;; *************** function ___awtoft *****************
  7370 ;; Defined at:
  7371 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\awtoft.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  c               2    3[BANK0 ] int 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;  sign            1    6[BANK0 ] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  3    3[BANK0 ] float 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7385 ;;      Params:         0       3       0       0       0
  7386 ;;      Locals:         0       1       0       0       0
  7387 ;;      Temps:          0       0       0       0       0
  7388 ;;      Totals:         0       4       0       0       0
  7389 ;;Total ram usage:        4 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    3
  7392 ;; This function calls:
  7393 ;;		___ftpack
  7394 ;; This function is called by:
  7395 ;;		_Adc_Rpm_Read
  7396 ;;		_Adc_Pwm_Read
  7397 ;;		_Adc_Min_Read
  7398 ;;		_Adc_Temp_Read
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function ___awtoft
  7404  1475                     ___awtoft:
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7408  1475  1283               	bcf	3,5	;RP0=0, select bank0
  7409  1476  1303               	bcf	3,6	;RP1=0, select bank0
  7410  1477  01A6               	clrf	___awtoft@sign
  7411  1478  1FA4               	btfss	___awtoft@c+1,7
  7412  1479  2C81               	goto	l4108
  7413  147A  09A3               	comf	___awtoft@c,f
  7414  147B  09A4               	comf	___awtoft@c+1,f
  7415  147C  0AA3               	incf	___awtoft@c,f
  7416  147D  1903               	skipnz
  7417  147E  0AA4               	incf	___awtoft@c+1,f
  7418  147F  01A6               	clrf	___awtoft@sign
  7419  1480  0AA6               	incf	___awtoft@sign,f
  7420  1481                     l4108:
  7421  1481  0823               	movf	___awtoft@c,w
  7422  1482  00F3               	movwf	___ftpack@arg
  7423  1483  0824               	movf	___awtoft@c+1,w
  7424  1484  00F4               	movwf	___ftpack@arg+1
  7425  1485  01F5               	clrf	___ftpack@arg+2
  7426  1486  308E               	movlw	142
  7427  1487  00FF               	movwf	127
  7428  1488  087F               	movf	127,w
  7429  1489  00F6               	movwf	___ftpack@exp
  7430  148A  0826               	movf	___awtoft@sign,w
  7431  148B  00FF               	movwf	127
  7432  148C  087F               	movf	127,w
  7433  148D  00F7               	movwf	___ftpack@sign
  7434  148E  120A  158A  21EF   	fcall	___ftpack
  7435  1491  0873               	movf	?___ftpack,w
  7436  1492  1283               	bcf	3,5	;RP0=0, select bank0
  7437  1493  1303               	bcf	3,6	;RP1=0, select bank0
  7438  1494  00A3               	movwf	?___awtoft
  7439  1495  0874               	movf	?___ftpack+1,w
  7440  1496  00A4               	movwf	?___awtoft+1
  7441  1497  0875               	movf	?___ftpack+2,w
  7442  1498  00A5               	movwf	?___awtoft+2
  7443  1499  0008               	return
  7444  149A                     __end_of___awtoft:
  7445                           
  7446                           	psect	text37
  7447  09EF                     __ptext37:	
  7448 ;; *************** function ___ftpack *****************
  7449 ;; Defined at:
  7450 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\float.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  arg             3    3[COMMON] unsigned um
  7453 ;;  exp             1    6[COMMON] unsigned char 
  7454 ;;  sign            1    7[COMMON] unsigned char 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  3    3[COMMON] float 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0, btemp+1
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7466 ;;      Params:         5       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0
  7468 ;;      Temps:          0       3       0       0       0
  7469 ;;      Totals:         5       3       0       0       0
  7470 ;;Total ram usage:        8 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    2
  7473 ;; This function calls:
  7474 ;;		Nothing
  7475 ;; This function is called by:
  7476 ;;		___awtoft
  7477 ;;		___ftdiv
  7478 ;;		___ftmul
  7479 ;;		___lwtoft
  7480 ;;		___ftadd
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function ___ftpack
  7486  09EF                     ___ftpack:
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  7490  09EF  0876               	movf	___ftpack@exp,w
  7491  09F0  1903               	btfsc	3,2
  7492  09F1  29F7               	goto	l4016
  7493  09F2  0875               	movf	___ftpack@arg+2,w
  7494  09F3  0474               	iorwf	___ftpack@arg+1,w
  7495  09F4  0473               	iorwf	___ftpack@arg,w
  7496  09F5  1D03               	skipz
  7497  09F6  2A0A               	goto	l4024
  7498  09F7                     l4016:
  7499  09F7  3000               	movlw	0
  7500  09F8  00F3               	movwf	?___ftpack
  7501  09F9  3000               	movlw	0
  7502  09FA  00F4               	movwf	?___ftpack+1
  7503  09FB  3000               	movlw	0
  7504  09FC  00F5               	movwf	?___ftpack+2
  7505  09FD  0008               	return
  7506  09FE                     l4020:
  7507  09FE  3001               	movlw	1
  7508  09FF  00FF               	movwf	127
  7509  0A00  087F               	movf	127,w
  7510  0A01  07F6               	addwf	___ftpack@exp,f
  7511  0A02  3001               	movlw	1
  7512  0A03                     u3935:
  7513  0A03  1003               	clrc
  7514  0A04  0CF5               	rrf	___ftpack@arg+2,f
  7515  0A05  0CF4               	rrf	___ftpack@arg+1,f
  7516  0A06  0CF3               	rrf	___ftpack@arg,f
  7517  0A07  3EFF               	addlw	-1
  7518  0A08  1D03               	skipz
  7519  0A09  2A03               	goto	u3935
  7520  0A0A                     l4024:
  7521  0A0A  30FE               	movlw	254
  7522  0A0B  0575               	andwf	___ftpack@arg+2,w
  7523  0A0C  1903               	btfsc	3,2
  7524  0A0D  2A25               	goto	l4032
  7525  0A0E  29FE               	goto	l4020
  7526  0A0F                     l4026:
  7527  0A0F  3001               	movlw	1
  7528  0A10  00FF               	movwf	127
  7529  0A11  087F               	movf	127,w
  7530  0A12  07F6               	addwf	___ftpack@exp,f
  7531  0A13  3001               	movlw	1
  7532  0A14  07F3               	addwf	___ftpack@arg,f
  7533  0A15  3000               	movlw	0
  7534  0A16  1803               	skipnc
  7535  0A17  3001               	movlw	1
  7536  0A18  07F4               	addwf	___ftpack@arg+1,f
  7537  0A19  3000               	movlw	0
  7538  0A1A  1803               	skipnc
  7539  0A1B  3001               	movlw	1
  7540  0A1C  07F5               	addwf	___ftpack@arg+2,f
  7541  0A1D  3001               	movlw	1
  7542  0A1E                     u3955:
  7543  0A1E  1003               	clrc
  7544  0A1F  0CF5               	rrf	___ftpack@arg+2,f
  7545  0A20  0CF4               	rrf	___ftpack@arg+1,f
  7546  0A21  0CF3               	rrf	___ftpack@arg,f
  7547  0A22  3EFF               	addlw	-1
  7548  0A23  1D03               	skipz
  7549  0A24  2A1E               	goto	u3955
  7550  0A25                     l4032:
  7551  0A25  30FF               	movlw	255
  7552  0A26  0575               	andwf	___ftpack@arg+2,w
  7553  0A27  1903               	btfsc	3,2
  7554  0A28  2A38               	goto	l4036
  7555  0A29  2A0F               	goto	l4026
  7556  0A2A                     l4038:
  7557  0A2A  3002               	movlw	2
  7558  0A2B  0276               	subwf	___ftpack@exp,w
  7559  0A2C  1C03               	btfss	3,0
  7560  0A2D  2A3A               	goto	l971
  7561  0A2E  3001               	movlw	1
  7562  0A2F  02F6               	subwf	___ftpack@exp,f
  7563  0A30  3001               	movlw	1
  7564  0A31                     u3975:
  7565  0A31  1003               	clrc
  7566  0A32  0DF3               	rlf	___ftpack@arg,f
  7567  0A33  0DF4               	rlf	___ftpack@arg+1,f
  7568  0A34  0DF5               	rlf	___ftpack@arg+2,f
  7569  0A35  3EFF               	addlw	-1
  7570  0A36  1D03               	skipz
  7571  0A37  2A31               	goto	u3975
  7572  0A38                     l4036:
  7573  0A38  1FF4               	btfss	___ftpack@arg+1,7
  7574  0A39  2A2A               	goto	l4038
  7575  0A3A                     l971:
  7576  0A3A  1876               	btfsc	___ftpack@exp,0
  7577  0A3B  2A42               	goto	l972
  7578  0A3C  30FF               	movlw	255
  7579  0A3D  05F3               	andwf	___ftpack@arg,f
  7580  0A3E  307F               	movlw	127
  7581  0A3F  05F4               	andwf	___ftpack@arg+1,f
  7582  0A40  30FF               	movlw	255
  7583  0A41  05F5               	andwf	___ftpack@arg+2,f
  7584  0A42                     l972:
  7585  0A42  1003               	clrc
  7586  0A43  0CF6               	rrf	___ftpack@exp,f
  7587  0A44  0876               	movf	___ftpack@exp,w
  7588  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  7589  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  7590  0A47  00A0               	movwf	??___ftpack
  7591  0A48  01A1               	clrf	??___ftpack+1
  7592  0A49  01A2               	clrf	??___ftpack+2
  7593  0A4A  3010               	movlw	16
  7594  0A4B                     u4015:
  7595  0A4B  1003               	clrc
  7596  0A4C  0DA0               	rlf	??___ftpack,f
  7597  0A4D  0DA1               	rlf	??___ftpack+1,f
  7598  0A4E  0DA2               	rlf	??___ftpack+2,f
  7599  0A4F  3EFF               	addlw	-1
  7600  0A50  1D03               	skipz
  7601  0A51  2A4B               	goto	u4015
  7602  0A52  0820               	movf	??___ftpack,w
  7603  0A53  04F3               	iorwf	___ftpack@arg,f
  7604  0A54  0821               	movf	??___ftpack+1,w
  7605  0A55  04F4               	iorwf	___ftpack@arg+1,f
  7606  0A56  0822               	movf	??___ftpack+2,w
  7607  0A57  04F5               	iorwf	___ftpack@arg+2,f
  7608  0A58  0877               	movf	___ftpack@sign,w
  7609  0A59  1903               	btfsc	3,2
  7610  0A5A  0008               	return
  7611  0A5B  17F5               	bsf	___ftpack@arg+2,7
  7612  0A5C  0008               	return
  7613  0A5D                     __end_of___ftpack:
  7614                           
  7615                           	psect	text38
  7616  1721                     __ptext38:	
  7617 ;; *************** function _Adc *****************
  7618 ;; Defined at:
  7619 ;;		line 25 in file "ADC.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  channel         1    wreg     unsigned char 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  channel         1    0[BANK0 ] unsigned char 
  7624 ;;  convertion      2    1[BANK0 ] int 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  2    3[COMMON] int 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0, btemp+1
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7634 ;;      Params:         2       0       0       0       0
  7635 ;;      Locals:         0       3       0       0       0
  7636 ;;      Temps:          2       0       0       0       0
  7637 ;;      Totals:         4       3       0       0       0
  7638 ;;Total ram usage:        7 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    2
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_Adc_Rpm_Read
  7645 ;;		_Adc_Pwm_Read
  7646 ;;		_Adc_Min_Read
  7647 ;;		_Adc_Temp_Read
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           
  7652                           ;psect for function _Adc
  7653  1721                     _Adc:
  7654                           
  7655                           ;incstack = 0
  7656                           ; Regs used in _Adc: [wreg+status,2+status,0+btemp+1]
  7657                           ;Adc@channel stored from wreg
  7658  1721  1283               	bcf	3,5	;RP0=0, select bank0
  7659  1722  1303               	bcf	3,6	;RP1=0, select bank0
  7660  1723  00A0               	movwf	Adc@channel
  7661                           
  7662                           ;ADC.c: 32:     ADCON0 &= 0xC3;
  7663  1724  30C3               	movlw	195
  7664  1725  00FF               	movwf	127
  7665  1726  087F               	movf	127,w
  7666  1727  059F               	andwf	31,f	;volatile
  7667                           
  7668                           ;ADC.c: 33:     ADCON0 |= channel<<2;
  7669  1728  0820               	movf	Adc@channel,w	;volatile
  7670  1729  00F5               	movwf	??_Adc
  7671  172A  3001               	movlw	1
  7672  172B                     u4045:
  7673  172B  1003               	clrc
  7674  172C  0DF5               	rlf	??_Adc,f
  7675  172D  3EFF               	addlw	-1
  7676  172E  1D03               	skipz
  7677  172F  2F2B               	goto	u4045
  7678  1730  1003               	clrc
  7679  1731  0D75               	rlf	??_Adc,w
  7680  1732  00FF               	movwf	127
  7681  1733  087F               	movf	127,w
  7682  1734  049F               	iorwf	31,f	;volatile
  7683                           
  7684                           ;ADC.c: 36:     ADCON0bits.ADON = 1;
  7685  1735  141F               	bsf	31,0	;volatile
  7686                           
  7687                           ;ADC.c: 37:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  7688  1736  3074               	movlw	116
  7689  1737  00F5               	movwf	??_Adc
  7690  1738                     u5427:
  7691  1738  0BF5               	decfsz	??_Adc,f
  7692  1739  2F38               	goto	u5427
  7693  173A  0000               	nop
  7694                           
  7695                           ;ADC.c: 41:     ADCON0bits.GO_nDONE = 1;
  7696  173B  1283               	bcf	3,5	;RP0=0, select bank0
  7697  173C  1303               	bcf	3,6	;RP1=0, select bank0
  7698  173D  149F               	bsf	31,1	;volatile
  7699  173E                     l573:	
  7700                           ;ADC.c: 42:     while(ADCON0bits.GO_nDONE == 1);
  7701                           
  7702  173E  189F               	btfsc	31,1	;volatile
  7703  173F  2F3E               	goto	l573
  7704                           
  7705                           ;ADC.c: 43:     convertion = ADRESH, convertion = convertion<<8;
  7706  1740  081E               	movf	30,w	;volatile
  7707  1741  00F5               	movwf	??_Adc
  7708  1742  01F6               	clrf	??_Adc+1
  7709  1743  0875               	movf	??_Adc,w
  7710  1744  00A1               	movwf	Adc@convertion
  7711  1745  0876               	movf	??_Adc+1,w
  7712  1746  00A2               	movwf	Adc@convertion+1
  7713  1747  0822               	movf	Adc@convertion+1,w
  7714  1748  00F6               	movwf	??_Adc+1
  7715  1749  0821               	movf	Adc@convertion,w
  7716  174A  00F5               	movwf	??_Adc
  7717  174B  0875               	movf	??_Adc,w
  7718  174C  00F6               	movwf	??_Adc+1
  7719  174D  01F5               	clrf	??_Adc
  7720  174E  0875               	movf	??_Adc,w
  7721  174F  00A1               	movwf	Adc@convertion
  7722  1750  0876               	movf	??_Adc+1,w
  7723  1751  00A2               	movwf	Adc@convertion+1
  7724                           
  7725                           ;ADC.c: 44:     convertion |= ADRESL;
  7726  1752  1683               	bsf	3,5	;RP0=1, select bank1
  7727  1753  1303               	bcf	3,6	;RP1=0, select bank1
  7728  1754  081E               	movf	30,w	;volatile
  7729  1755  00F5               	movwf	??_Adc
  7730  1756  01F6               	clrf	??_Adc+1
  7731  1757  0875               	movf	??_Adc,w
  7732  1758  1283               	bcf	3,5	;RP0=0, select bank0
  7733  1759  1303               	bcf	3,6	;RP1=0, select bank0
  7734  175A  04A1               	iorwf	Adc@convertion,f
  7735  175B  0876               	movf	??_Adc+1,w
  7736  175C  04A2               	iorwf	Adc@convertion+1,f
  7737                           
  7738                           ;ADC.c: 48:     ADCON0bits.ADON = 0;
  7739  175D  101F               	bcf	31,0	;volatile
  7740                           
  7741                           ;ADC.c: 49:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  7742  175E  3074               	movlw	116
  7743  175F  00F5               	movwf	??_Adc
  7744  1760                     u5437:
  7745  1760  0BF5               	decfsz	??_Adc,f
  7746  1761  2F60               	goto	u5437
  7747  1762  0000               	nop
  7748                           
  7749                           ;ADC.c: 51:     return convertion;
  7750  1763  1283               	bcf	3,5	;RP0=0, select bank0
  7751  1764  1303               	bcf	3,6	;RP1=0, select bank0
  7752  1765  0822               	movf	Adc@convertion+1,w
  7753  1766  00F4               	movwf	?_Adc+1
  7754  1767  0821               	movf	Adc@convertion,w
  7755  1768  00F3               	movwf	?_Adc
  7756  1769  0008               	return
  7757  176A                     __end_of_Adc:
  7758                           
  7759                           	psect	text39
  7760  0870                     __ptext39:	
  7761 ;; *************** function _Fin_Proceso *****************
  7762 ;; Defined at:
  7763 ;;		line 51 in file "Menu_Modo.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  i               1    9[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       0       0       0       0
  7778 ;;      Locals:         0       1       0       0       0
  7779 ;;      Temps:          0       3       0       0       0
  7780 ;;      Totals:         0       4       0       0       0
  7781 ;;Total ram usage:        4 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    5
  7784 ;; This function calls:
  7785 ;;		_Proceso_Fin
  7786 ;; This function is called by:
  7787 ;;		_MEF_Subest_Actualizacion
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _Fin_Proceso
  7793  0870                     _Fin_Proceso:
  7794                           
  7795                           ;Menu_Modo.c: 53:     if(!Min && !Seg)
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in _Fin_Proceso: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7799  0870  1283               	bcf	3,5	;RP0=0, select bank0
  7800  0871  1303               	bcf	3,6	;RP1=0, select bank0
  7801  0872  0868               	movf	_Min,w
  7802  0873  1D03               	btfss	3,2
  7803  0874  0008               	return
  7804  0875  0867               	movf	_Seg,w
  7805  0876  1D03               	btfss	3,2
  7806  0877  0008               	return
  7807                           
  7808                           ;Menu_Modo.c: 54:     {;Menu_Modo.c: 55:         Proceso_Fin();
  7809  0878  160A  118A  24C3  120A  158A  	fcall	_Proceso_Fin
  7810                           
  7811                           ;Menu_Modo.c: 56:         Output = !Output;
  7812  087D  1283               	bcf	3,5	;RP0=0, select bank0
  7813  087E  1303               	bcf	3,6	;RP1=0, select bank0
  7814  087F  0863               	movf	_Output,w
  7815  0880  1D03               	btfss	3,2
  7816  0881  2884               	goto	u4670
  7817  0882  3001               	movlw	1
  7818  0883  2885               	goto	u4680
  7819  0884                     u4670:
  7820  0884  3000               	movlw	0
  7821  0885                     u4680:
  7822  0885  00FF               	movwf	127
  7823  0886  087F               	movf	127,w
  7824  0887  00E3               	movwf	_Output
  7825                           
  7826                           ;Menu_Modo.c: 57:         for(char i=0;i<3;i++)
  7827  0888  01A9               	clrf	Fin_Proceso@i
  7828  0889                     l324:
  7829                           
  7830                           ;Menu_Modo.c: 58:         {;Menu_Modo.c: 59:             PORTAbits.RA5 = 1;
  7831  0889  1685               	bsf	5,5	;volatile
  7832                           
  7833                           ;Menu_Modo.c: 60:             _delay((unsigned long)((100)*(20000000/4000.0)));
  7834  088A  3003               	movlw	3
  7835  088B  1283               	bcf	3,5	;RP0=0, select bank0
  7836  088C  1303               	bcf	3,6	;RP1=0, select bank0
  7837  088D  00A8               	movwf	??_Fin_Proceso+2
  7838  088E  308A               	movlw	138
  7839  088F  00A7               	movwf	??_Fin_Proceso+1
  7840  0890  3055               	movlw	85
  7841  0891  00A6               	movwf	??_Fin_Proceso
  7842  0892                     u5447:
  7843  0892  0BA6               	decfsz	??_Fin_Proceso,f
  7844  0893  2892               	goto	u5447
  7845  0894  0BA7               	decfsz	??_Fin_Proceso+1,f
  7846  0895  2892               	goto	u5447
  7847  0896  0BA8               	decfsz	??_Fin_Proceso+2,f
  7848  0897  2892               	goto	u5447
  7849                           
  7850                           ;Menu_Modo.c: 61:             PORTAbits.RA5 = 0;
  7851  0898  1283               	bcf	3,5	;RP0=0, select bank0
  7852  0899  1303               	bcf	3,6	;RP1=0, select bank0
  7853  089A  1285               	bcf	5,5	;volatile
  7854                           
  7855                           ;Menu_Modo.c: 62:             _delay((unsigned long)((100)*(20000000/4000.0)));
  7856  089B  3003               	movlw	3
  7857  089C  1283               	bcf	3,5	;RP0=0, select bank0
  7858  089D  1303               	bcf	3,6	;RP1=0, select bank0
  7859  089E  00A8               	movwf	??_Fin_Proceso+2
  7860  089F  308A               	movlw	138
  7861  08A0  00A7               	movwf	??_Fin_Proceso+1
  7862  08A1  3055               	movlw	85
  7863  08A2  00A6               	movwf	??_Fin_Proceso
  7864  08A3                     u5457:
  7865  08A3  0BA6               	decfsz	??_Fin_Proceso,f
  7866  08A4  28A3               	goto	u5457
  7867  08A5  0BA7               	decfsz	??_Fin_Proceso+1,f
  7868  08A6  28A3               	goto	u5457
  7869  08A7  0BA8               	decfsz	??_Fin_Proceso+2,f
  7870  08A8  28A3               	goto	u5457
  7871                           
  7872                           ;Menu_Modo.c: 63:         }
  7873  08A9  3001               	movlw	1
  7874  08AA  00FF               	movwf	127
  7875  08AB  087F               	movf	127,w
  7876  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  7877  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  7878  08AE  07A9               	addwf	Fin_Proceso@i,f
  7879  08AF  3003               	movlw	3
  7880  08B0  0229               	subwf	Fin_Proceso@i,w
  7881  08B1  1C03               	skipc
  7882  08B2  2889               	goto	l324
  7883                           
  7884                           ;Menu_Modo.c: 64:         _delay((unsigned long)((1200)*(20000000/4000.0)));
  7885  08B3  301F               	movlw	31
  7886  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  7887  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  7888  08B6  00A8               	movwf	??_Fin_Proceso+2
  7889  08B7  3071               	movlw	113
  7890  08B8  00A7               	movwf	??_Fin_Proceso+1
  7891  08B9  301D               	movlw	29
  7892  08BA  00A6               	movwf	??_Fin_Proceso
  7893  08BB                     u5467:
  7894  08BB  0BA6               	decfsz	??_Fin_Proceso,f
  7895  08BC  28BB               	goto	u5467
  7896  08BD  0BA7               	decfsz	??_Fin_Proceso+1,f
  7897  08BE  28BB               	goto	u5467
  7898  08BF  0BA8               	decfsz	??_Fin_Proceso+2,f
  7899  08C0  28BB               	goto	u5467
  7900  08C1  28C2               	nop2
  7901  08C2  0008               	return
  7902  08C3                     __end_of_Fin_Proceso:
  7903                           
  7904                           	psect	text40
  7905  14C3                     __ptext40:	
  7906 ;; *************** function _Proceso_Fin *****************
  7907 ;; Defined at:
  7908 ;;		line 145 in file "Display_Lcd.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;		None
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7922 ;;      Params:         0       0       0       0       0
  7923 ;;      Locals:         0       0       0       0       0
  7924 ;;      Temps:          0       0       0       0       0
  7925 ;;      Totals:         0       0       0       0       0
  7926 ;;Total ram usage:        0 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    4
  7929 ;; This function calls:
  7930 ;;		_LCD_array
  7931 ;;		_LCD_command
  7932 ;; This function is called by:
  7933 ;;		_Fin_Proceso
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           
  7938                           ;psect for function _Proceso_Fin
  7939  14C3                     _Proceso_Fin:
  7940                           
  7941                           ;Display_Lcd.c: 147:     LCD_command(0x01);
  7942                           
  7943                           ;incstack = 0
  7944                           ; Regs used in _Proceso_Fin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7945  14C3  3001               	movlw	1
  7946  14C4  120A  158A  2684  160A  118A  	fcall	_LCD_command
  7947                           
  7948                           ;Display_Lcd.c: 148:     LCD_array(1,1,"                    ");
  7949  14C9  3001               	movlw	1
  7950  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  7951  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  7952  14CC  00A0               	movwf	LCD_array@x
  7953  14CD  3000               	movlw	0
  7954  14CE  00A1               	movwf	LCD_array@x+1
  7955  14CF  3001               	movlw	1
  7956  14D0  00A2               	movwf	LCD_array@y
  7957  14D1  3000               	movlw	0
  7958  14D2  00A3               	movwf	LCD_array@y+1
  7959  14D3  301C               	movlw	low (STR_38| (0+32768))
  7960  14D4  00A4               	movwf	LCD_array@date
  7961  14D5  3085               	movlw	high (STR_38| (0+32768))
  7962  14D6  00A5               	movwf	LCD_array@date+1
  7963  14D7  120A  158A  2188  160A  118A  	fcall	_LCD_array
  7964                           
  7965                           ;Display_Lcd.c: 149:     LCD_array(2,1," Proceso Finalizado");
  7966  14DC  3002               	movlw	2
  7967  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  7968  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  7969  14DF  00A0               	movwf	LCD_array@x
  7970  14E0  3000               	movlw	0
  7971  14E1  00A1               	movwf	LCD_array@x+1
  7972  14E2  3001               	movlw	1
  7973  14E3  00A2               	movwf	LCD_array@y
  7974  14E4  3000               	movlw	0
  7975  14E5  00A3               	movwf	LCD_array@y+1
  7976  14E6  3070               	movlw	low (STR_39| (0+32768))
  7977  14E7  00A4               	movwf	LCD_array@date
  7978  14E8  3085               	movlw	high (STR_39| (0+32768))
  7979  14E9  00A5               	movwf	LCD_array@date+1
  7980  14EA  120A  158A  2188   	fcall	_LCD_array
  7981  14ED  0008               	return
  7982  14EE                     __end_of_Proceso_Fin:
  7983                           
  7984                           	psect	text41
  7985  081D                     __ptext41:	
  7986 ;; *************** function _Detener *****************
  7987 ;; Defined at:
  7988 ;;		line 30 in file "Menu_Modo.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  i               1    9[BANK0 ] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8002 ;;      Params:         0       0       0       0       0
  8003 ;;      Locals:         0       1       0       0       0
  8004 ;;      Temps:          0       3       0       0       0
  8005 ;;      Totals:         0       4       0       0       0
  8006 ;;Total ram usage:        4 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    5
  8009 ;; This function calls:
  8010 ;;		_Antirrebote
  8011 ;;		_Pant_Detener
  8012 ;; This function is called by:
  8013 ;;		_MEF_Subest_Actualizacion
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           
  8018                           ;psect for function _Detener
  8019  081D                     _Detener:
  8020                           
  8021                           ;Menu_Modo.c: 32:     Antirrebote();
  8022                           
  8023                           ;incstack = 0
  8024                           ; Regs used in _Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8025  081D  120A  118A  27D8  120A  158A  	fcall	_Antirrebote
  8026                           
  8027                           ;Menu_Modo.c: 33:     Output = !Output;
  8028  0822  1283               	bcf	3,5	;RP0=0, select bank0
  8029  0823  1303               	bcf	3,6	;RP1=0, select bank0
  8030  0824  0863               	movf	_Output,w
  8031  0825  1D03               	btfss	3,2
  8032  0826  2829               	goto	u4620
  8033  0827  3001               	movlw	1
  8034  0828  282A               	goto	u4630
  8035  0829                     u4620:
  8036  0829  3000               	movlw	0
  8037  082A                     u4630:
  8038  082A  00FF               	movwf	127
  8039  082B  087F               	movf	127,w
  8040  082C  00E3               	movwf	_Output
  8041                           
  8042                           ;Menu_Modo.c: 34:     PORTBbits.RB4=0;
  8043  082D  1206               	bcf	6,4	;volatile
  8044                           
  8045                           ;Menu_Modo.c: 36:     Pant_Detener();
  8046  082E  160A  118A  23FD  120A  158A  	fcall	_Pant_Detener
  8047                           
  8048                           ;Menu_Modo.c: 38:     for(char i=0;i<3;i++)
  8049  0833  1283               	bcf	3,5	;RP0=0, select bank0
  8050  0834  1303               	bcf	3,6	;RP1=0, select bank0
  8051  0835  01A9               	clrf	Detener@i
  8052  0836                     l318:
  8053                           
  8054                           ;Menu_Modo.c: 39:     {;Menu_Modo.c: 40:         PORTAbits.RA5 = 1;
  8055  0836  1685               	bsf	5,5	;volatile
  8056                           
  8057                           ;Menu_Modo.c: 41:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8058  0837  3003               	movlw	3
  8059  0838  1283               	bcf	3,5	;RP0=0, select bank0
  8060  0839  1303               	bcf	3,6	;RP1=0, select bank0
  8061  083A  00A8               	movwf	??_Detener+2
  8062  083B  308A               	movlw	138
  8063  083C  00A7               	movwf	??_Detener+1
  8064  083D  3055               	movlw	85
  8065  083E  00A6               	movwf	??_Detener
  8066  083F                     u5477:
  8067  083F  0BA6               	decfsz	??_Detener,f
  8068  0840  283F               	goto	u5477
  8069  0841  0BA7               	decfsz	??_Detener+1,f
  8070  0842  283F               	goto	u5477
  8071  0843  0BA8               	decfsz	??_Detener+2,f
  8072  0844  283F               	goto	u5477
  8073                           
  8074                           ;Menu_Modo.c: 42:         PORTAbits.RA5 = 0;
  8075  0845  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0846  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0847  1285               	bcf	5,5	;volatile
  8078                           
  8079                           ;Menu_Modo.c: 43:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8080  0848  3003               	movlw	3
  8081  0849  1283               	bcf	3,5	;RP0=0, select bank0
  8082  084A  1303               	bcf	3,6	;RP1=0, select bank0
  8083  084B  00A8               	movwf	??_Detener+2
  8084  084C  308A               	movlw	138
  8085  084D  00A7               	movwf	??_Detener+1
  8086  084E  3055               	movlw	85
  8087  084F  00A6               	movwf	??_Detener
  8088  0850                     u5487:
  8089  0850  0BA6               	decfsz	??_Detener,f
  8090  0851  2850               	goto	u5487
  8091  0852  0BA7               	decfsz	??_Detener+1,f
  8092  0853  2850               	goto	u5487
  8093  0854  0BA8               	decfsz	??_Detener+2,f
  8094  0855  2850               	goto	u5487
  8095                           
  8096                           ;Menu_Modo.c: 44:     }
  8097  0856  3001               	movlw	1
  8098  0857  00FF               	movwf	127
  8099  0858  087F               	movf	127,w
  8100  0859  1283               	bcf	3,5	;RP0=0, select bank0
  8101  085A  1303               	bcf	3,6	;RP1=0, select bank0
  8102  085B  07A9               	addwf	Detener@i,f
  8103  085C  3003               	movlw	3
  8104  085D  0229               	subwf	Detener@i,w
  8105  085E  1C03               	skipc
  8106  085F  2836               	goto	l318
  8107                           
  8108                           ;Menu_Modo.c: 46:     _delay((unsigned long)((1200)*(20000000/4000.0)));
  8109  0860  301F               	movlw	31
  8110  0861  1283               	bcf	3,5	;RP0=0, select bank0
  8111  0862  1303               	bcf	3,6	;RP1=0, select bank0
  8112  0863  00A8               	movwf	??_Detener+2
  8113  0864  3071               	movlw	113
  8114  0865  00A7               	movwf	??_Detener+1
  8115  0866  301D               	movlw	29
  8116  0867  00A6               	movwf	??_Detener
  8117  0868                     u5497:
  8118  0868  0BA6               	decfsz	??_Detener,f
  8119  0869  2868               	goto	u5497
  8120  086A  0BA7               	decfsz	??_Detener+1,f
  8121  086B  2868               	goto	u5497
  8122  086C  0BA8               	decfsz	??_Detener+2,f
  8123  086D  2868               	goto	u5497
  8124  086E  286F               	nop2
  8125  086F  0008               	return
  8126  0870                     __end_of_Detener:
  8127                           
  8128                           	psect	text42
  8129  13FD                     __ptext42:	
  8130 ;; *************** function _Pant_Detener *****************
  8131 ;; Defined at:
  8132 ;;		line 106 in file "Display_Lcd.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8146 ;;      Params:         0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0
  8149 ;;      Totals:         0       0       0       0       0
  8150 ;;Total ram usage:        0 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    4
  8153 ;; This function calls:
  8154 ;;		_LCD_array
  8155 ;;		_LCD_command
  8156 ;; This function is called by:
  8157 ;;		_Detener
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function _Pant_Detener
  8163  13FD                     _Pant_Detener:
  8164                           
  8165                           ;Display_Lcd.c: 108:     LCD_command(0x01);
  8166                           
  8167                           ;incstack = 0
  8168                           ; Regs used in _Pant_Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8169  13FD  3001               	movlw	1
  8170  13FE  120A  158A  2684  160A  118A  	fcall	_LCD_command
  8171                           
  8172                           ;Display_Lcd.c: 109:     LCD_array(2,3,"Proceso Detenido");
  8173  1403  3002               	movlw	2
  8174  1404  1283               	bcf	3,5	;RP0=0, select bank0
  8175  1405  1303               	bcf	3,6	;RP1=0, select bank0
  8176  1406  00A0               	movwf	LCD_array@x
  8177  1407  3000               	movlw	0
  8178  1408  00A1               	movwf	LCD_array@x+1
  8179  1409  3003               	movlw	3
  8180  140A  00A2               	movwf	LCD_array@y
  8181  140B  3000               	movlw	0
  8182  140C  00A3               	movwf	LCD_array@y+1
  8183  140D  30B9               	movlw	low (STR_31| (0+32768))
  8184  140E  00A4               	movwf	LCD_array@date
  8185  140F  3085               	movlw	high (STR_31| (0+32768))
  8186  1410  00A5               	movwf	LCD_array@date+1
  8187  1411  120A  158A  2188   	fcall	_LCD_array
  8188  1414  0008               	return
  8189  1415                     __end_of_Pant_Detener:
  8190                           
  8191                           	psect	text43
  8192  0988                     __ptext43:	
  8193 ;; *************** function _LCD_array *****************
  8194 ;; Defined at:
  8195 ;;		line 137 in file "Lcd.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  x               2    0[BANK0 ] int 
  8198 ;;  y               2    2[BANK0 ] int 
  8199 ;;  date            2    4[BANK0 ] PTR unsigned char 
  8200 ;;		 -> STR_39(20), STR_38(21), STR_37(10), STR_36(17), 
  8201 ;;		 -> STR_35(9), STR_34(17), STR_33(18), STR_32(17), 
  8202 ;;		 -> STR_31(17), Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), STR_23(2), 
  8203 ;;		 -> STR_22(13), STR_21(2), STR_20(8), STR_19(5), 
  8204 ;;		 -> STR_18(5), STR_17(18), STR_16(6), STR_15(5), 
  8205 ;;		 -> STR_14(14), STR_13(2), STR_12(2), STR_11(2), 
  8206 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  8207 ;;		 -> STR_6(2), STR_5(2), STR_4(21), STR_3(21), 
  8208 ;;		 -> STR_2(21), STR_1(21), 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8220 ;;      Params:         0       6       0       0       0
  8221 ;;      Locals:         0       0       0       0       0
  8222 ;;      Temps:          2       0       0       0       0
  8223 ;;      Totals:         2       6       0       0       0
  8224 ;;Total ram usage:        8 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    3
  8227 ;; This function calls:
  8228 ;;		_LCD_command
  8229 ;;		_LCD_date
  8230 ;; This function is called by:
  8231 ;;		_Pant_Inicio
  8232 ;;		_Pant_Selector
  8233 ;;		_Pant_Menu
  8234 ;;		_Pant_Modos
  8235 ;;		_Pant_Val_Act
  8236 ;;		_Pant_Temporizador
  8237 ;;		_Pant_Detener
  8238 ;;		_Pant_Pulverizacion
  8239 ;;		_Pant_Fuga
  8240 ;;		_Pant_Flujo
  8241 ;;		_Proceso_Fin
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           
  8246                           ;psect for function _LCD_array
  8247  0988                     _LCD_array:
  8248                           
  8249                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  8250                           
  8251                           ;incstack = 0
  8252                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8253  0988  29AD               	goto	l4060
  8254  0989                     l4050:
  8255  0989  0822               	movf	LCD_array@y,w
  8256  098A  3EFF               	addlw	255
  8257  098B  3880               	iorlw	128
  8258  098C  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8259                           
  8260                           ;Lcd.c: 143:         break;
  8261  0991  29E0               	goto	l4068
  8262  0992                     l4052:
  8263  0992  0822               	movf	LCD_array@y,w
  8264  0993  3E3F               	addlw	63
  8265  0994  3880               	iorlw	128
  8266  0995  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8267                           
  8268                           ;Lcd.c: 145:         break;
  8269  099A  29E0               	goto	l4068
  8270  099B                     l4054:
  8271  099B  0822               	movf	LCD_array@y,w
  8272  099C  3E13               	addlw	19
  8273  099D  3880               	iorlw	128
  8274  099E  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8275                           
  8276                           ;Lcd.c: 147:         break;
  8277  09A3  29E0               	goto	l4068
  8278  09A4                     l4056:
  8279  09A4  0822               	movf	LCD_array@y,w
  8280  09A5  3E53               	addlw	83
  8281  09A6  3880               	iorlw	128
  8282  09A7  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8283                           
  8284                           ;Lcd.c: 149:         break;
  8285  09AC  29E0               	goto	l4068
  8286  09AD                     l4060:
  8287                           
  8288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8289                           ; Switch size 1, requested type "simple"
  8290                           ; Number of cases is 1, Range of values is 0 to 0
  8291                           ; switch strategies available:
  8292                           ; Name         Instructions Cycles
  8293                           ; simple_byte            4     3 (average)
  8294                           ; direct_byte           11     8 (fixed)
  8295                           ; jumptable            260     6 (fixed)
  8296                           ;	Chosen strategy is simple_byte
  8297  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  8298  09AE  1303               	bcf	3,6	;RP1=0, select bank0
  8299  09AF  0821               	movf	LCD_array@x+1,w
  8300  09B0  3A00               	xorlw	0	; case 0
  8301  09B1  1903               	skipnz
  8302  09B2  29B4               	goto	l5136
  8303  09B3  29E0               	goto	l4068
  8304  09B4                     l5136:
  8305                           
  8306                           ; Switch size 1, requested type "simple"
  8307                           ; Number of cases is 4, Range of values is 1 to 4
  8308                           ; switch strategies available:
  8309                           ; Name         Instructions Cycles
  8310                           ; simple_byte           13     7 (average)
  8311                           ; direct_byte           23    11 (fixed)
  8312                           ; jumptable            263     9 (fixed)
  8313                           ;	Chosen strategy is simple_byte
  8314  09B4  0820               	movf	LCD_array@x,w
  8315  09B5  3A01               	xorlw	1	; case 1
  8316  09B6  1903               	skipnz
  8317  09B7  2989               	goto	l4050
  8318  09B8  3A03               	xorlw	3	; case 2
  8319  09B9  1903               	skipnz
  8320  09BA  2992               	goto	l4052
  8321  09BB  3A01               	xorlw	1	; case 3
  8322  09BC  1903               	skipnz
  8323  09BD  299B               	goto	l4054
  8324  09BE  3A07               	xorlw	7	; case 4
  8325  09BF  1903               	skipnz
  8326  09C0  29A4               	goto	l4056
  8327  09C1  29E0               	goto	l4068
  8328  09C2                     l4062:
  8329                           
  8330                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  8331  09C2  0825               	movf	LCD_array@date+1,w
  8332  09C3  00FF               	movwf	127
  8333  09C4  0824               	movf	LCD_array@date,w
  8334  09C5  0084               	movwf	4
  8335  09C6  120A  118A  2500  120A  158A  	fcall	stringtab
  8336  09CB  120A  158A  2514  120A  158A  	fcall	_LCD_date
  8337                           
  8338                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  8339  09D0  3007               	movlw	7
  8340  09D1  00F7               	movwf	??_LCD_array+1
  8341  09D2  307D               	movlw	125
  8342  09D3  00F6               	movwf	??_LCD_array
  8343  09D4                     u5507:
  8344  09D4  0BF6               	decfsz	??_LCD_array,f
  8345  09D5  29D4               	goto	u5507
  8346  09D6  0BF7               	decfsz	??_LCD_array+1,f
  8347  09D7  29D4               	goto	u5507
  8348                           
  8349                           ;Lcd.c: 157:         date++;
  8350  09D8  3001               	movlw	1
  8351  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  8352  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  8353  09DB  07A4               	addwf	LCD_array@date,f
  8354  09DC  1803               	skipnc
  8355  09DD  0AA5               	incf	LCD_array@date+1,f
  8356  09DE  3000               	movlw	0
  8357  09DF  07A5               	addwf	LCD_array@date+1,f
  8358  09E0                     l4068:
  8359                           
  8360                           ;Lcd.c: 153:     while(*date)
  8361  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  8362  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  8363  09E2  0825               	movf	LCD_array@date+1,w
  8364  09E3  00FF               	movwf	127
  8365  09E4  0824               	movf	LCD_array@date,w
  8366  09E5  0084               	movwf	4
  8367  09E6  120A  118A  2500  120A  158A  	fcall	stringtab
  8368  09EB  3A00               	xorlw	0
  8369  09EC  1903               	btfsc	3,2
  8370  09ED  0008               	return
  8371  09EE  29C2               	goto	l4062
  8372  09EF                     __end_of_LCD_array:
  8373                           
  8374                           	psect	text44
  8375  0D14                     __ptext44:	
  8376 ;; *************** function _LCD_date *****************
  8377 ;; Defined at:
  8378 ;;		line 88 in file "Lcd.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  date            1    wreg     unsigned char 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  date            1    5[COMMON] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8392 ;;      Params:         0       0       0       0       0
  8393 ;;      Locals:         1       0       0       0       0
  8394 ;;      Temps:          2       0       0       0       0
  8395 ;;      Totals:         3       0       0       0       0
  8396 ;;Total ram usage:        3 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    2
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_Pant_Modos
  8403 ;;		_LCD_array
  8404 ;;		_LCD_character
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _LCD_date
  8410  0D14                     _LCD_date:
  8411                           
  8412                           ;incstack = 0
  8413                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  8414                           ;LCD_date@date stored from wreg
  8415  0D14  00F5               	movwf	LCD_date@date
  8416                           
  8417                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  8418  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  8419  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  8420  0D17  1207               	bcf	7,4	;volatile
  8421  0D18  1287               	bcf	7,5	;volatile
  8422  0D19  1307               	bcf	7,6	;volatile
  8423  0D1A  1387               	bcf	7,7	;volatile
  8424                           
  8425                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  8426  0D1B  0875               	movf	LCD_date@date,w
  8427  0D1C  00F3               	movwf	??_LCD_date
  8428  0D1D  3004               	movlw	4
  8429  0D1E                     u3855:
  8430  0D1E  1003               	clrc
  8431  0D1F  0CF3               	rrf	??_LCD_date,f
  8432  0D20  3EFF               	addlw	-1
  8433  0D21  1D03               	skipz
  8434  0D22  2D1E               	goto	u3855
  8435  0D23  0873               	movf	??_LCD_date,w
  8436  0D24  3901               	andlw	1
  8437  0D25  00F4               	movwf	??_LCD_date+1
  8438  0D26  0EF4               	swapf	??_LCD_date+1,f
  8439  0D27  0807               	movf	7,w	;volatile
  8440  0D28  0674               	xorwf	??_LCD_date+1,w
  8441  0D29  39EF               	andlw	-17
  8442  0D2A  0674               	xorwf	??_LCD_date+1,w
  8443  0D2B  0087               	movwf	7	;volatile
  8444                           
  8445                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  8446  0D2C  0875               	movf	LCD_date@date,w
  8447  0D2D  00F3               	movwf	??_LCD_date
  8448  0D2E  3005               	movlw	5
  8449  0D2F                     u3865:
  8450  0D2F  1003               	clrc
  8451  0D30  0CF3               	rrf	??_LCD_date,f
  8452  0D31  3EFF               	addlw	-1
  8453  0D32  1D03               	skipz
  8454  0D33  2D2F               	goto	u3865
  8455  0D34  0873               	movf	??_LCD_date,w
  8456  0D35  3901               	andlw	1
  8457  0D36  00F4               	movwf	??_LCD_date+1
  8458  0D37  0EF4               	swapf	??_LCD_date+1,f
  8459  0D38  0DF4               	rlf	??_LCD_date+1,f
  8460  0D39  0807               	movf	7,w	;volatile
  8461  0D3A  0674               	xorwf	??_LCD_date+1,w
  8462  0D3B  39DF               	andlw	-33
  8463  0D3C  0674               	xorwf	??_LCD_date+1,w
  8464  0D3D  0087               	movwf	7	;volatile
  8465                           
  8466                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  8467  0D3E  0875               	movf	LCD_date@date,w
  8468  0D3F  00F3               	movwf	??_LCD_date
  8469  0D40  3006               	movlw	6
  8470  0D41                     u3875:
  8471  0D41  1003               	clrc
  8472  0D42  0CF3               	rrf	??_LCD_date,f
  8473  0D43  3EFF               	addlw	-1
  8474  0D44  1D03               	skipz
  8475  0D45  2D41               	goto	u3875
  8476  0D46  0873               	movf	??_LCD_date,w
  8477  0D47  3901               	andlw	1
  8478  0D48  00F4               	movwf	??_LCD_date+1
  8479  0D49  0EF4               	swapf	??_LCD_date+1,f
  8480  0D4A  0DF4               	rlf	??_LCD_date+1,f
  8481  0D4B  0DF4               	rlf	??_LCD_date+1,f
  8482  0D4C  0807               	movf	7,w	;volatile
  8483  0D4D  0674               	xorwf	??_LCD_date+1,w
  8484  0D4E  39BF               	andlw	-65
  8485  0D4F  0674               	xorwf	??_LCD_date+1,w
  8486  0D50  0087               	movwf	7	;volatile
  8487                           
  8488                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  8489  0D51  0875               	movf	LCD_date@date,w
  8490  0D52  00F3               	movwf	??_LCD_date
  8491  0D53  3007               	movlw	7
  8492  0D54                     u3885:
  8493  0D54  1003               	clrc
  8494  0D55  0CF3               	rrf	??_LCD_date,f
  8495  0D56  3EFF               	addlw	-1
  8496  0D57  1D03               	skipz
  8497  0D58  2D54               	goto	u3885
  8498  0D59  0873               	movf	??_LCD_date,w
  8499  0D5A  3901               	andlw	1
  8500  0D5B  00F4               	movwf	??_LCD_date+1
  8501  0D5C  0CF4               	rrf	??_LCD_date+1,f
  8502  0D5D  0CF4               	rrf	??_LCD_date+1,f
  8503  0D5E  0807               	movf	7,w	;volatile
  8504  0D5F  0674               	xorwf	??_LCD_date+1,w
  8505  0D60  397F               	andlw	-129
  8506  0D61  0674               	xorwf	??_LCD_date+1,w
  8507  0D62  0087               	movwf	7	;volatile
  8508                           
  8509                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  8510  0D63  1487               	bsf	7,1	;volatile
  8511                           
  8512                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  8513  0D64  1187               	bcf	7,3	;volatile
  8514                           
  8515                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  8516  0D65  1587               	bsf	7,3	;volatile
  8517                           
  8518                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  8519  0D66  3018               	movlw	24
  8520  0D67  00F3               	movwf	??_LCD_date
  8521  0D68                     u5517:
  8522  0D68  0BF3               	decfsz	??_LCD_date,f
  8523  0D69  2D68               	goto	u5517
  8524  0D6A  2D6B               	nop2
  8525                           
  8526                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  8527  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  8528  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  8529  0D6D  1187               	bcf	7,3	;volatile
  8530                           
  8531                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  8532  0D6E  3018               	movlw	24
  8533  0D6F  00F3               	movwf	??_LCD_date
  8534  0D70                     u5527:
  8535  0D70  0BF3               	decfsz	??_LCD_date,f
  8536  0D71  2D70               	goto	u5527
  8537  0D72  2D73               	nop2
  8538                           
  8539                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  8540  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  8541  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  8542  0D75  1207               	bcf	7,4	;volatile
  8543  0D76  1287               	bcf	7,5	;volatile
  8544  0D77  1307               	bcf	7,6	;volatile
  8545  0D78  1387               	bcf	7,7	;volatile
  8546                           
  8547                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  8548  0D79  0875               	movf	LCD_date@date,w
  8549  0D7A  3901               	andlw	1
  8550  0D7B  00F3               	movwf	??_LCD_date
  8551  0D7C  0EF3               	swapf	??_LCD_date,f
  8552  0D7D  0807               	movf	7,w	;volatile
  8553  0D7E  0673               	xorwf	??_LCD_date,w
  8554  0D7F  39EF               	andlw	-17
  8555  0D80  0673               	xorwf	??_LCD_date,w
  8556  0D81  0087               	movwf	7	;volatile
  8557                           
  8558                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  8559  0D82  0875               	movf	LCD_date@date,w
  8560  0D83  00F3               	movwf	??_LCD_date
  8561  0D84  1003               	clrc
  8562  0D85  0C73               	rrf	??_LCD_date,w
  8563  0D86  3901               	andlw	1
  8564  0D87  00F4               	movwf	??_LCD_date+1
  8565  0D88  0EF4               	swapf	??_LCD_date+1,f
  8566  0D89  0DF4               	rlf	??_LCD_date+1,f
  8567  0D8A  0807               	movf	7,w	;volatile
  8568  0D8B  0674               	xorwf	??_LCD_date+1,w
  8569  0D8C  39DF               	andlw	-33
  8570  0D8D  0674               	xorwf	??_LCD_date+1,w
  8571  0D8E  0087               	movwf	7	;volatile
  8572                           
  8573                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  8574  0D8F  0875               	movf	LCD_date@date,w
  8575  0D90  00F3               	movwf	??_LCD_date
  8576  0D91  3002               	movlw	2
  8577  0D92                     u3895:
  8578  0D92  1003               	clrc
  8579  0D93  0CF3               	rrf	??_LCD_date,f
  8580  0D94  3EFF               	addlw	-1
  8581  0D95  1D03               	skipz
  8582  0D96  2D92               	goto	u3895
  8583  0D97  0873               	movf	??_LCD_date,w
  8584  0D98  3901               	andlw	1
  8585  0D99  00F4               	movwf	??_LCD_date+1
  8586  0D9A  0EF4               	swapf	??_LCD_date+1,f
  8587  0D9B  0DF4               	rlf	??_LCD_date+1,f
  8588  0D9C  0DF4               	rlf	??_LCD_date+1,f
  8589  0D9D  0807               	movf	7,w	;volatile
  8590  0D9E  0674               	xorwf	??_LCD_date+1,w
  8591  0D9F  39BF               	andlw	-65
  8592  0DA0  0674               	xorwf	??_LCD_date+1,w
  8593  0DA1  0087               	movwf	7	;volatile
  8594                           
  8595                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  8596  0DA2  0875               	movf	LCD_date@date,w
  8597  0DA3  00F3               	movwf	??_LCD_date
  8598  0DA4  3003               	movlw	3
  8599  0DA5                     u3905:
  8600  0DA5  1003               	clrc
  8601  0DA6  0CF3               	rrf	??_LCD_date,f
  8602  0DA7  3EFF               	addlw	-1
  8603  0DA8  1D03               	skipz
  8604  0DA9  2DA5               	goto	u3905
  8605  0DAA  0873               	movf	??_LCD_date,w
  8606  0DAB  3901               	andlw	1
  8607  0DAC  00F4               	movwf	??_LCD_date+1
  8608  0DAD  0CF4               	rrf	??_LCD_date+1,f
  8609  0DAE  0CF4               	rrf	??_LCD_date+1,f
  8610  0DAF  0807               	movf	7,w	;volatile
  8611  0DB0  0674               	xorwf	??_LCD_date+1,w
  8612  0DB1  397F               	andlw	-129
  8613  0DB2  0674               	xorwf	??_LCD_date+1,w
  8614  0DB3  0087               	movwf	7	;volatile
  8615                           
  8616                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  8617  0DB4  1487               	bsf	7,1	;volatile
  8618                           
  8619                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  8620  0DB5  1187               	bcf	7,3	;volatile
  8621                           
  8622                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  8623  0DB6  1587               	bsf	7,3	;volatile
  8624                           
  8625                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  8626  0DB7  3053               	movlw	83
  8627  0DB8  00F3               	movwf	??_LCD_date
  8628  0DB9                     u5537:
  8629  0DB9  0BF3               	decfsz	??_LCD_date,f
  8630  0DBA  2DB9               	goto	u5537
  8631                           
  8632                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  8633  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  8634  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  8635  0DBD  1187               	bcf	7,3	;volatile
  8636                           
  8637                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  8638  0DBE  3053               	movlw	83
  8639  0DBF  00F3               	movwf	??_LCD_date
  8640  0DC0                     u5547:
  8641  0DC0  0BF3               	decfsz	??_LCD_date,f
  8642  0DC1  2DC0               	goto	u5547
  8643                           
  8644                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  8645  0DC2  3014               	movlw	20
  8646  0DC3  00F4               	movwf	??_LCD_date+1
  8647  0DC4  3079               	movlw	121
  8648  0DC5  00F3               	movwf	??_LCD_date
  8649  0DC6                     u5557:
  8650  0DC6  0BF3               	decfsz	??_LCD_date,f
  8651  0DC7  2DC6               	goto	u5557
  8652  0DC8  0BF4               	decfsz	??_LCD_date+1,f
  8653  0DC9  2DC6               	goto	u5557
  8654  0DCA  2DCB               	nop2
  8655  0DCB  0008               	return
  8656  0DCC                     __end_of_LCD_date:
  8657                           
  8658                           	psect	text45
  8659  07D8                     __ptext45:	
  8660 ;; *************** function _Antirrebote *****************
  8661 ;; Defined at:
  8662 ;;		line 78 in file "Main.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;		None
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8676 ;;      Params:         0       0       0       0       0
  8677 ;;      Locals:         0       0       0       0       0
  8678 ;;      Temps:          3       0       0       0       0
  8679 ;;      Totals:         3       0       0       0       0
  8680 ;;Total ram usage:        3 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    2
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_MEF_Actualizacion
  8687 ;;		_MEF_Subest_Actualizacion
  8688 ;;		_Select_Modo
  8689 ;;		_Detener
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           
  8694                           ;psect for function _Antirrebote
  8695  07D8                     _Antirrebote:
  8696                           
  8697                           ;Main.c: 80:     PORTAbits.RA5 = 1;
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in _Antirrebote: [wreg]
  8701  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  8702  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  8703  07DA  1685               	bsf	5,5	;volatile
  8704                           
  8705                           ;Main.c: 81:     _delay((unsigned long)((50)*(20000000/4000.0)));
  8706  07DB  3002               	movlw	2
  8707  07DC  00F5               	movwf	??_Antirrebote+2
  8708  07DD  3045               	movlw	69
  8709  07DE  00F4               	movwf	??_Antirrebote+1
  8710  07DF  30A9               	movlw	169
  8711  07E0  00F3               	movwf	??_Antirrebote
  8712  07E1                     u5567:
  8713  07E1  0BF3               	decfsz	??_Antirrebote,f
  8714  07E2  2FE1               	goto	u5567
  8715  07E3  0BF4               	decfsz	??_Antirrebote+1,f
  8716  07E4  2FE1               	goto	u5567
  8717  07E5  0BF5               	decfsz	??_Antirrebote+2,f
  8718  07E6  2FE1               	goto	u5567
  8719  07E7  2FE8               	nop2
  8720                           
  8721                           ;Main.c: 82:     PORTAbits.RA5 = 0;
  8722  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  8723  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  8724  07EA  1285               	bcf	5,5	;volatile
  8725  07EB                     l2958:	
  8726                           ;Main.c: 83:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  8727                           
  8728  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  8729  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  8730  07ED  1C06               	btfss	6,0	;volatile
  8731  07EE  2FF9               	goto	l2960
  8732  07EF                     l2956:
  8733  07EF  3041               	movlw	65
  8734  07F0  00F4               	movwf	??_Antirrebote+1
  8735  07F1  30EE               	movlw	238
  8736  07F2  00F3               	movwf	??_Antirrebote
  8737  07F3                     u5577:
  8738  07F3  0BF3               	decfsz	??_Antirrebote,f
  8739  07F4  2FF3               	goto	u5577
  8740  07F5  0BF4               	decfsz	??_Antirrebote+1,f
  8741  07F6  2FF3               	goto	u5577
  8742  07F7  0000               	nop
  8743  07F8  2FEB               	goto	l2958
  8744  07F9                     l2960:
  8745  07F9  1C86               	btfss	6,1	;volatile
  8746  07FA  1906               	btfsc	6,2	;volatile
  8747  07FB  2FEF               	goto	l2956
  8748  07FC  1D86               	btfss	6,3	;volatile
  8749  07FD  0008               	return
  8750  07FE  2FEF               	goto	l2956
  8751  07FF                     __end_of_Antirrebote:
  8752                           
  8753                           	psect	text46
  8754  0A5D                     __ptext46:	
  8755 ;; *************** function _LCD_init *****************
  8756 ;; Defined at:
  8757 ;;		line 4 in file "Lcd.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;  i               1    0[BANK0 ] unsigned char 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8771 ;;      Params:         0       0       0       0       0
  8772 ;;      Locals:         0       1       0       0       0
  8773 ;;      Temps:          2       0       0       0       0
  8774 ;;      Totals:         2       1       0       0       0
  8775 ;;Total ram usage:        3 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    3
  8778 ;; This function calls:
  8779 ;;		_LCD_command
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function _LCD_init
  8787  0A5D                     _LCD_init:
  8788                           
  8789                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  8790                           
  8791                           ;incstack = 0
  8792                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8793  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  8794  0A5E  1303               	bcf	3,6	;RP1=0, select bank1
  8795  0A5F  1207               	bcf	7,4	;volatile
  8796  0A60  1287               	bcf	7,5	;volatile
  8797  0A61  1307               	bcf	7,6	;volatile
  8798  0A62  1387               	bcf	7,7	;volatile
  8799                           
  8800                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  8801  0A63  1087               	bcf	7,1	;volatile
  8802  0A64  1187               	bcf	7,3	;volatile
  8803                           
  8804                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  8805  0A65  1107               	bcf	7,2	;volatile
  8806  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  8807  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  8808  0A68  1107               	bcf	7,2	;volatile
  8809                           
  8810                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  8811  0A69  30C3               	movlw	195
  8812  0A6A  00F7               	movwf	??_LCD_init+1
  8813  0A6B  30CD               	movlw	205
  8814  0A6C  00F6               	movwf	??_LCD_init
  8815  0A6D                     u5587:
  8816  0A6D  0BF6               	decfsz	??_LCD_init,f
  8817  0A6E  2A6D               	goto	u5587
  8818  0A6F  0BF7               	decfsz	??_LCD_init+1,f
  8819  0A70  2A6D               	goto	u5587
  8820                           
  8821                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  8822  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  8823  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  8824  0A73  01A0               	clrf	LCD_init@i
  8825  0A74                     l4764:
  8826                           
  8827                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  8828  0A74  3003               	movlw	3
  8829  0A75  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8830                           
  8831                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  8832  0A7A  302E               	movlw	46
  8833  0A7B  00F7               	movwf	??_LCD_init+1
  8834  0A7C  3073               	movlw	115
  8835  0A7D  00F6               	movwf	??_LCD_init
  8836  0A7E                     u5597:
  8837  0A7E  0BF6               	decfsz	??_LCD_init,f
  8838  0A7F  2A7E               	goto	u5597
  8839  0A80  0BF7               	decfsz	??_LCD_init+1,f
  8840  0A81  2A7E               	goto	u5597
  8841                           
  8842                           ;Lcd.c: 18:     }
  8843  0A82  3001               	movlw	1
  8844  0A83  00FF               	movwf	127
  8845  0A84  087F               	movf	127,w
  8846  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  8847  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  8848  0A87  07A0               	addwf	LCD_init@i,f
  8849  0A88  3003               	movlw	3
  8850  0A89  0220               	subwf	LCD_init@i,w
  8851  0A8A  1C03               	skipc
  8852  0A8B  2A74               	goto	l4764
  8853                           
  8854                           ;Lcd.c: 21:  LCD_command(0x33);
  8855  0A8C  3033               	movlw	51
  8856  0A8D  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8857                           
  8858                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8859  0A92  30A6               	movlw	166
  8860  0A93  00F6               	movwf	??_LCD_init
  8861  0A94                     u5607:
  8862  0A94  0BF6               	decfsz	??_LCD_init,f
  8863  0A95  2A94               	goto	u5607
  8864  0A96  0000               	nop
  8865                           
  8866                           ;Lcd.c: 23:     LCD_command(0x32);
  8867  0A97  3032               	movlw	50
  8868  0A98  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8869                           
  8870                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  8871  0A9D  3021               	movlw	33
  8872  0A9E  00F7               	movwf	??_LCD_init+1
  8873  0A9F  3076               	movlw	118
  8874  0AA0  00F6               	movwf	??_LCD_init
  8875  0AA1                     u5617:
  8876  0AA1  0BF6               	decfsz	??_LCD_init,f
  8877  0AA2  2AA1               	goto	u5617
  8878  0AA3  0BF7               	decfsz	??_LCD_init+1,f
  8879  0AA4  2AA1               	goto	u5617
  8880  0AA5  0000               	nop
  8881                           
  8882                           ;Lcd.c: 25:  LCD_command(0x28);
  8883  0AA6  3028               	movlw	40
  8884  0AA7  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8885                           
  8886                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8887  0AAC  30A6               	movlw	166
  8888  0AAD  00F6               	movwf	??_LCD_init
  8889  0AAE                     u5627:
  8890  0AAE  0BF6               	decfsz	??_LCD_init,f
  8891  0AAF  2AAE               	goto	u5627
  8892  0AB0  0000               	nop
  8893                           
  8894                           ;Lcd.c: 27:  LCD_command(0x0C);
  8895  0AB1  300C               	movlw	12
  8896  0AB2  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8897                           
  8898                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8899  0AB7  30A6               	movlw	166
  8900  0AB8  00F6               	movwf	??_LCD_init
  8901  0AB9                     u5637:
  8902  0AB9  0BF6               	decfsz	??_LCD_init,f
  8903  0ABA  2AB9               	goto	u5637
  8904  0ABB  0000               	nop
  8905                           
  8906                           ;Lcd.c: 29:  LCD_command(0x06);
  8907  0ABC  3006               	movlw	6
  8908  0ABD  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8909                           
  8910                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8911  0AC2  30A6               	movlw	166
  8912  0AC3  00F6               	movwf	??_LCD_init
  8913  0AC4                     u5647:
  8914  0AC4  0BF6               	decfsz	??_LCD_init,f
  8915  0AC5  2AC4               	goto	u5647
  8916  0AC6  0000               	nop
  8917                           
  8918                           ;Lcd.c: 31:     LCD_command(0x01);
  8919  0AC7  3001               	movlw	1
  8920  0AC8  120A  158A  2684  120A  158A  	fcall	_LCD_command
  8921                           
  8922                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  8923  0ACD  3041               	movlw	65
  8924  0ACE  00F7               	movwf	??_LCD_init+1
  8925  0ACF  30EE               	movlw	238
  8926  0AD0  00F6               	movwf	??_LCD_init
  8927  0AD1                     u5657:
  8928  0AD1  0BF6               	decfsz	??_LCD_init,f
  8929  0AD2  2AD1               	goto	u5657
  8930  0AD3  0BF7               	decfsz	??_LCD_init+1,f
  8931  0AD4  2AD1               	goto	u5657
  8932  0AD5  0000               	nop
  8933  0AD6  0008               	return
  8934  0AD7                     __end_of_LCD_init:
  8935                           
  8936                           	psect	text47
  8937  0E84                     __ptext47:	
  8938 ;; *************** function _LCD_command *****************
  8939 ;; Defined at:
  8940 ;;		line 39 in file "Lcd.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  cmd             1    wreg     unsigned char 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  cmd             1    5[COMMON] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8954 ;;      Params:         0       0       0       0       0
  8955 ;;      Locals:         1       0       0       0       0
  8956 ;;      Temps:          2       0       0       0       0
  8957 ;;      Totals:         3       0       0       0       0
  8958 ;;Total ram usage:        3 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    2
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_MEF_Subest_Actualizacion
  8965 ;;		_Pant_Inicio
  8966 ;;		_Pant_Modos
  8967 ;;		_Pant_Detener
  8968 ;;		_Pant_Pulverizacion
  8969 ;;		_Pant_Fuga
  8970 ;;		_Pant_Flujo
  8971 ;;		_Proceso_Fin
  8972 ;;		_LCD_init
  8973 ;;		_LCD_array
  8974 ;;		_LCD_xy
  8975 ;;		_LCD_character
  8976 ;;		_LCD_shift
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function _LCD_command
  8982  0E84                     _LCD_command:
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  8986                           ;LCD_command@cmd stored from wreg
  8987  0E84  00F5               	movwf	LCD_command@cmd
  8988                           
  8989                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  8990  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  8991  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  8992  0E87  1207               	bcf	7,4	;volatile
  8993  0E88  1287               	bcf	7,5	;volatile
  8994  0E89  1307               	bcf	7,6	;volatile
  8995  0E8A  1387               	bcf	7,7	;volatile
  8996                           
  8997                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  8998  0E8B  0875               	movf	LCD_command@cmd,w
  8999  0E8C  00F3               	movwf	??_LCD_command
  9000  0E8D  3004               	movlw	4
  9001  0E8E                     u3795:
  9002  0E8E  1003               	clrc
  9003  0E8F  0CF3               	rrf	??_LCD_command,f
  9004  0E90  3EFF               	addlw	-1
  9005  0E91  1D03               	skipz
  9006  0E92  2E8E               	goto	u3795
  9007  0E93  0873               	movf	??_LCD_command,w
  9008  0E94  3901               	andlw	1
  9009  0E95  00F4               	movwf	??_LCD_command+1
  9010  0E96  0EF4               	swapf	??_LCD_command+1,f
  9011  0E97  0807               	movf	7,w	;volatile
  9012  0E98  0674               	xorwf	??_LCD_command+1,w
  9013  0E99  39EF               	andlw	-17
  9014  0E9A  0674               	xorwf	??_LCD_command+1,w
  9015  0E9B  0087               	movwf	7	;volatile
  9016                           
  9017                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  9018  0E9C  0875               	movf	LCD_command@cmd,w
  9019  0E9D  00F3               	movwf	??_LCD_command
  9020  0E9E  3005               	movlw	5
  9021  0E9F                     u3805:
  9022  0E9F  1003               	clrc
  9023  0EA0  0CF3               	rrf	??_LCD_command,f
  9024  0EA1  3EFF               	addlw	-1
  9025  0EA2  1D03               	skipz
  9026  0EA3  2E9F               	goto	u3805
  9027  0EA4  0873               	movf	??_LCD_command,w
  9028  0EA5  3901               	andlw	1
  9029  0EA6  00F4               	movwf	??_LCD_command+1
  9030  0EA7  0EF4               	swapf	??_LCD_command+1,f
  9031  0EA8  0DF4               	rlf	??_LCD_command+1,f
  9032  0EA9  0807               	movf	7,w	;volatile
  9033  0EAA  0674               	xorwf	??_LCD_command+1,w
  9034  0EAB  39DF               	andlw	-33
  9035  0EAC  0674               	xorwf	??_LCD_command+1,w
  9036  0EAD  0087               	movwf	7	;volatile
  9037                           
  9038                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  9039  0EAE  0875               	movf	LCD_command@cmd,w
  9040  0EAF  00F3               	movwf	??_LCD_command
  9041  0EB0  3006               	movlw	6
  9042  0EB1                     u3815:
  9043  0EB1  1003               	clrc
  9044  0EB2  0CF3               	rrf	??_LCD_command,f
  9045  0EB3  3EFF               	addlw	-1
  9046  0EB4  1D03               	skipz
  9047  0EB5  2EB1               	goto	u3815
  9048  0EB6  0873               	movf	??_LCD_command,w
  9049  0EB7  3901               	andlw	1
  9050  0EB8  00F4               	movwf	??_LCD_command+1
  9051  0EB9  0EF4               	swapf	??_LCD_command+1,f
  9052  0EBA  0DF4               	rlf	??_LCD_command+1,f
  9053  0EBB  0DF4               	rlf	??_LCD_command+1,f
  9054  0EBC  0807               	movf	7,w	;volatile
  9055  0EBD  0674               	xorwf	??_LCD_command+1,w
  9056  0EBE  39BF               	andlw	-65
  9057  0EBF  0674               	xorwf	??_LCD_command+1,w
  9058  0EC0  0087               	movwf	7	;volatile
  9059                           
  9060                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  9061  0EC1  0875               	movf	LCD_command@cmd,w
  9062  0EC2  00F3               	movwf	??_LCD_command
  9063  0EC3  3007               	movlw	7
  9064  0EC4                     u3825:
  9065  0EC4  1003               	clrc
  9066  0EC5  0CF3               	rrf	??_LCD_command,f
  9067  0EC6  3EFF               	addlw	-1
  9068  0EC7  1D03               	skipz
  9069  0EC8  2EC4               	goto	u3825
  9070  0EC9  0873               	movf	??_LCD_command,w
  9071  0ECA  3901               	andlw	1
  9072  0ECB  00F4               	movwf	??_LCD_command+1
  9073  0ECC  0CF4               	rrf	??_LCD_command+1,f
  9074  0ECD  0CF4               	rrf	??_LCD_command+1,f
  9075  0ECE  0807               	movf	7,w	;volatile
  9076  0ECF  0674               	xorwf	??_LCD_command+1,w
  9077  0ED0  397F               	andlw	-129
  9078  0ED1  0674               	xorwf	??_LCD_command+1,w
  9079  0ED2  0087               	movwf	7	;volatile
  9080                           
  9081                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  9082  0ED3  1087               	bcf	7,1	;volatile
  9083                           
  9084                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  9085  0ED4  1187               	bcf	7,3	;volatile
  9086                           
  9087                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  9088  0ED5  1587               	bsf	7,3	;volatile
  9089                           
  9090                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9091  0ED6  3018               	movlw	24
  9092  0ED7  00F3               	movwf	??_LCD_command
  9093  0ED8                     u5667:
  9094  0ED8  0BF3               	decfsz	??_LCD_command,f
  9095  0ED9  2ED8               	goto	u5667
  9096  0EDA  2EDB               	nop2
  9097                           
  9098                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  9099  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  9100  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  9101  0EDD  1187               	bcf	7,3	;volatile
  9102                           
  9103                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9104  0EDE  3018               	movlw	24
  9105  0EDF  00F3               	movwf	??_LCD_command
  9106  0EE0                     u5677:
  9107  0EE0  0BF3               	decfsz	??_LCD_command,f
  9108  0EE1  2EE0               	goto	u5677
  9109  0EE2  2EE3               	nop2
  9110                           
  9111                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9112  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  9113  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  9114  0EE5  1207               	bcf	7,4	;volatile
  9115  0EE6  1287               	bcf	7,5	;volatile
  9116  0EE7  1307               	bcf	7,6	;volatile
  9117  0EE8  1387               	bcf	7,7	;volatile
  9118                           
  9119                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  9120  0EE9  0875               	movf	LCD_command@cmd,w
  9121  0EEA  3901               	andlw	1
  9122  0EEB  00F3               	movwf	??_LCD_command
  9123  0EEC  0EF3               	swapf	??_LCD_command,f
  9124  0EED  0807               	movf	7,w	;volatile
  9125  0EEE  0673               	xorwf	??_LCD_command,w
  9126  0EEF  39EF               	andlw	-17
  9127  0EF0  0673               	xorwf	??_LCD_command,w
  9128  0EF1  0087               	movwf	7	;volatile
  9129                           
  9130                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  9131  0EF2  0875               	movf	LCD_command@cmd,w
  9132  0EF3  00F3               	movwf	??_LCD_command
  9133  0EF4  1003               	clrc
  9134  0EF5  0C73               	rrf	??_LCD_command,w
  9135  0EF6  3901               	andlw	1
  9136  0EF7  00F4               	movwf	??_LCD_command+1
  9137  0EF8  0EF4               	swapf	??_LCD_command+1,f
  9138  0EF9  0DF4               	rlf	??_LCD_command+1,f
  9139  0EFA  0807               	movf	7,w	;volatile
  9140  0EFB  0674               	xorwf	??_LCD_command+1,w
  9141  0EFC  39DF               	andlw	-33
  9142  0EFD  0674               	xorwf	??_LCD_command+1,w
  9143  0EFE  0087               	movwf	7	;volatile
  9144                           
  9145                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  9146  0EFF  0875               	movf	LCD_command@cmd,w
  9147  0F00  00F3               	movwf	??_LCD_command
  9148  0F01  3002               	movlw	2
  9149  0F02                     u3835:
  9150  0F02  1003               	clrc
  9151  0F03  0CF3               	rrf	??_LCD_command,f
  9152  0F04  3EFF               	addlw	-1
  9153  0F05  1D03               	skipz
  9154  0F06  2F02               	goto	u3835
  9155  0F07  0873               	movf	??_LCD_command,w
  9156  0F08  3901               	andlw	1
  9157  0F09  00F4               	movwf	??_LCD_command+1
  9158  0F0A  0EF4               	swapf	??_LCD_command+1,f
  9159  0F0B  0DF4               	rlf	??_LCD_command+1,f
  9160  0F0C  0DF4               	rlf	??_LCD_command+1,f
  9161  0F0D  0807               	movf	7,w	;volatile
  9162  0F0E  0674               	xorwf	??_LCD_command+1,w
  9163  0F0F  39BF               	andlw	-65
  9164  0F10  0674               	xorwf	??_LCD_command+1,w
  9165  0F11  0087               	movwf	7	;volatile
  9166                           
  9167                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
  9168  0F12  0875               	movf	LCD_command@cmd,w
  9169  0F13  00F3               	movwf	??_LCD_command
  9170  0F14  3003               	movlw	3
  9171  0F15                     u3845:
  9172  0F15  1003               	clrc
  9173  0F16  0CF3               	rrf	??_LCD_command,f
  9174  0F17  3EFF               	addlw	-1
  9175  0F18  1D03               	skipz
  9176  0F19  2F15               	goto	u3845
  9177  0F1A  0873               	movf	??_LCD_command,w
  9178  0F1B  3901               	andlw	1
  9179  0F1C  00F4               	movwf	??_LCD_command+1
  9180  0F1D  0CF4               	rrf	??_LCD_command+1,f
  9181  0F1E  0CF4               	rrf	??_LCD_command+1,f
  9182  0F1F  0807               	movf	7,w	;volatile
  9183  0F20  0674               	xorwf	??_LCD_command+1,w
  9184  0F21  397F               	andlw	-129
  9185  0F22  0674               	xorwf	??_LCD_command+1,w
  9186  0F23  0087               	movwf	7	;volatile
  9187                           
  9188                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
  9189  0F24  1087               	bcf	7,1	;volatile
  9190                           
  9191                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
  9192  0F25  1187               	bcf	7,3	;volatile
  9193                           
  9194                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
  9195  0F26  1587               	bsf	7,3	;volatile
  9196                           
  9197                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9198  0F27  3018               	movlw	24
  9199  0F28  00F3               	movwf	??_LCD_command
  9200  0F29                     u5687:
  9201  0F29  0BF3               	decfsz	??_LCD_command,f
  9202  0F2A  2F29               	goto	u5687
  9203  0F2B  2F2C               	nop2
  9204                           
  9205                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
  9206  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  9207  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  9208  0F2E  1187               	bcf	7,3	;volatile
  9209                           
  9210                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9211  0F2F  3018               	movlw	24
  9212  0F30  00F3               	movwf	??_LCD_command
  9213  0F31                     u5697:
  9214  0F31  0BF3               	decfsz	??_LCD_command,f
  9215  0F32  2F31               	goto	u5697
  9216  0F33  2F34               	nop2
  9217                           
  9218                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
  9219  0F34  3014               	movlw	20
  9220  0F35  00F4               	movwf	??_LCD_command+1
  9221  0F36  3079               	movlw	121
  9222  0F37  00F3               	movwf	??_LCD_command
  9223  0F38                     u5707:
  9224  0F38  0BF3               	decfsz	??_LCD_command,f
  9225  0F39  2F38               	goto	u5707
  9226  0F3A  0BF4               	decfsz	??_LCD_command+1,f
  9227  0F3B  2F38               	goto	u5707
  9228  0F3C  2F3D               	nop2
  9229  0F3D  0008               	return
  9230  0F3E                     __end_of_LCD_command:
  9231                           
  9232                           	psect	text48
  9233  1451                     __ptext48:	
  9234 ;; *************** function _Adc_init *****************
  9235 ;; Defined at:
  9236 ;;		line 5 in file "ADC.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9250 ;;      Params:         0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    2
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_main
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _Adc_init
  9266  1451                     _Adc_init:
  9267                           
  9268                           ;ADC.c: 8:     TRISAbits.TRISA0 = 1,ANSELbits.ANS0 = 1;
  9269                           
  9270                           ;incstack = 0
  9271                           ; Regs used in _Adc_init: [wreg+status,2+status,0]
  9272  1451  1683               	bsf	3,5	;RP0=1, select bank1
  9273  1452  1303               	bcf	3,6	;RP1=0, select bank1
  9274  1453  1405               	bsf	5,0	;volatile
  9275  1454  1683               	bsf	3,5	;RP0=1, select bank3
  9276  1455  1703               	bsf	3,6	;RP1=1, select bank3
  9277  1456  1408               	bsf	8,0	;volatile
  9278                           
  9279                           ;ADC.c: 9:     TRISAbits.TRISA1 = 1;ANSELbits.ANS1 = 1;
  9280  1457  1683               	bsf	3,5	;RP0=1, select bank1
  9281  1458  1303               	bcf	3,6	;RP1=0, select bank1
  9282  1459  1485               	bsf	5,1	;volatile
  9283  145A  1683               	bsf	3,5	;RP0=1, select bank3
  9284  145B  1703               	bsf	3,6	;RP1=1, select bank3
  9285  145C  1488               	bsf	8,1	;volatile
  9286                           
  9287                           ;ADC.c: 10:     TRISAbits.TRISA2 = 1,ANSELbits.ANS2 = 1;
  9288  145D  1683               	bsf	3,5	;RP0=1, select bank1
  9289  145E  1303               	bcf	3,6	;RP1=0, select bank1
  9290  145F  1505               	bsf	5,2	;volatile
  9291  1460  1683               	bsf	3,5	;RP0=1, select bank3
  9292  1461  1703               	bsf	3,6	;RP1=1, select bank3
  9293  1462  1508               	bsf	8,2	;volatile
  9294                           
  9295                           ;ADC.c: 11:     TRISAbits.TRISA3 = 1,ANSELbits.ANS3 = 1;
  9296  1463  1683               	bsf	3,5	;RP0=1, select bank1
  9297  1464  1303               	bcf	3,6	;RP1=0, select bank1
  9298  1465  1585               	bsf	5,3	;volatile
  9299  1466  1683               	bsf	3,5	;RP0=1, select bank3
  9300  1467  1703               	bsf	3,6	;RP1=1, select bank3
  9301  1468  1588               	bsf	8,3	;volatile
  9302                           
  9303                           ;ADC.c: 14:     ADCON0bits.ADCS = 0b10;
  9304  1469  1283               	bcf	3,5	;RP0=0, select bank0
  9305  146A  1303               	bcf	3,6	;RP1=0, select bank0
  9306  146B  081F               	movf	31,w	;volatile
  9307  146C  393F               	andlw	-193
  9308  146D  3880               	iorlw	128
  9309  146E  009F               	movwf	31	;volatile
  9310                           
  9311                           ;ADC.c: 17:     ADCON1bits.ADFM = 1;
  9312  146F  1683               	bsf	3,5	;RP0=1, select bank1
  9313  1470  1303               	bcf	3,6	;RP1=0, select bank1
  9314  1471  179F               	bsf	31,7	;volatile
  9315                           
  9316                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  9317  1472  121F               	bcf	31,4	;volatile
  9318                           
  9319                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  9320  1473  129F               	bcf	31,5	;volatile
  9321  1474  0008               	return
  9322  1475                     __end_of_Adc_init:
  9323                           
  9324                           	psect	text49
  9325  16D9                     __ptext49:	
  9326 ;; *************** function _ISR *****************
  9327 ;; Defined at:
  9328 ;;		line 88 in file "Main.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9342 ;;      Params:         0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0
  9344 ;;      Temps:          3       0       0       0       0
  9345 ;;      Totals:         3       0       0       0       0
  9346 ;;Total ram usage:        3 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    1
  9349 ;; This function calls:
  9350 ;;		_Task_Ready
  9351 ;; This function is called by:
  9352 ;;		Interrupt level 1
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           
  9357                           ;psect for function _ISR
  9358  16D9                     _ISR:
  9359                           
  9360                           ;Main.c: 91:     if(TMR1IF == 1)
  9361  16D9  1C0C               	btfss	12,0	;volatile
  9362  16DA  2F05               	goto	i1l3740
  9363                           
  9364                           ;Main.c: 92:     {;Main.c: 93:         if(Delay100ms!=0 && !Mostrar) Delay100ms--;
  9365  16DB  0878               	movf	_Delay100ms,w	;volatile
  9366  16DC  0479               	iorwf	_Delay100ms+1,w	;volatile
  9367  16DD  1903               	btfsc	3,2
  9368  16DE  2EE8               	goto	i1l3724
  9369  16DF  0865               	movf	_Mostrar,w
  9370  16E0  1D03               	btfss	3,2
  9371  16E1  2EE8               	goto	i1l3724
  9372  16E2  3001               	movlw	1
  9373  16E3  02F8               	subwf	_Delay100ms,f	;volatile
  9374  16E4  3000               	movlw	0
  9375  16E5  1C03               	skipc
  9376  16E6  03F9               	decf	_Delay100ms+1,f	;volatile
  9377  16E7  02F9               	subwf	_Delay100ms+1,f	;volatile
  9378  16E8                     i1l3724:
  9379                           
  9380                           ;Main.c: 94:         if(Delay200ms!=0) Delay200ms--;
  9381  16E8  086D               	movf	_Delay200ms,w	;volatile
  9382  16E9  046E               	iorwf	_Delay200ms+1,w	;volatile
  9383  16EA  1903               	btfsc	3,2
  9384  16EB  2EF2               	goto	i1l3728
  9385  16EC  3001               	movlw	1
  9386  16ED  02ED               	subwf	_Delay200ms,f	;volatile
  9387  16EE  3000               	movlw	0
  9388  16EF  1C03               	skipc
  9389  16F0  03EE               	decf	_Delay200ms+1,f	;volatile
  9390  16F1  02EE               	subwf	_Delay200ms+1,f	;volatile
  9391  16F2                     i1l3728:
  9392                           
  9393                           ;Main.c: 95:         if(Delay1s!=0 && Output) Delay1s--;
  9394  16F2  086B               	movf	_Delay1s,w	;volatile
  9395  16F3  046C               	iorwf	_Delay1s+1,w	;volatile
  9396  16F4  1903               	btfsc	3,2
  9397  16F5  2EFF               	goto	i1l3734
  9398  16F6  0863               	movf	_Output,w
  9399  16F7  1903               	btfsc	3,2
  9400  16F8  2EFF               	goto	i1l3734
  9401  16F9  3001               	movlw	1
  9402  16FA  02EB               	subwf	_Delay1s,f	;volatile
  9403  16FB  3000               	movlw	0
  9404  16FC  1C03               	skipc
  9405  16FD  03EC               	decf	_Delay1s+1,f	;volatile
  9406  16FE  02EC               	subwf	_Delay1s+1,f	;volatile
  9407  16FF                     i1l3734:
  9408                           
  9409                           ;Main.c: 97:         TMR1 = 65285;
  9410  16FF  30FF               	movlw	255
  9411  1700  008F               	movwf	15	;volatile
  9412  1701  3005               	movlw	5
  9413  1702  008E               	movwf	14	;volatile
  9414                           
  9415                           ;Main.c: 98:         TMR1ON = 1;
  9416  1703  1410               	bsf	16,0	;volatile
  9417                           
  9418                           ;Main.c: 99:         TMR1IF = 0;
  9419  1704  100C               	bcf	12,0	;volatile
  9420  1705                     i1l3740:
  9421                           
  9422                           ;Main.c: 102:     if(!Delay100ms || !Delay200ms || !Delay1s) Task_Ready();
  9423  1705  0878               	movf	_Delay100ms,w	;volatile
  9424  1706  0479               	iorwf	_Delay100ms+1,w	;volatile
  9425  1707  1903               	btfsc	3,2
  9426  1708  2F11               	goto	i1l3746
  9427  1709  086D               	movf	_Delay200ms,w	;volatile
  9428  170A  046E               	iorwf	_Delay200ms+1,w	;volatile
  9429  170B  1903               	btfsc	3,2
  9430  170C  2F11               	goto	i1l3746
  9431  170D  086B               	movf	_Delay1s,w	;volatile
  9432  170E  046C               	iorwf	_Delay1s+1,w	;volatile
  9433  170F  1D03               	btfss	3,2
  9434  1710  2F16               	goto	i1l121
  9435  1711                     i1l3746:
  9436  1711  160A  118A  25AE  160A  118A  	fcall	_Task_Ready
  9437  1716                     i1l121:
  9438  1716  0872               	movf	??_ISR+2,w
  9439  1717  1283               	bcf	3,5	;RP0=0, select bank0
  9440  1718  1303               	bcf	3,6	;RP1=0, select bank0
  9441  1719  00FF               	movwf	127
  9442  171A  0871               	movf	??_ISR+1,w
  9443  171B  008A               	movwf	10
  9444  171C  0E70               	swapf	??_ISR^(0+4294967168),w
  9445  171D  0083               	movwf	3
  9446  171E  0EFE               	swapf	126,f
  9447  171F  0E7E               	swapf	126,w
  9448  1720  0009               	retfie
  9449  1721                     __end_of_ISR:
  9450                           
  9451                           	psect	intentry
  9452  0004                     __pintentry:	
  9453                           ;incstack = 0
  9454                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9455                           
  9456  0004                     interrupt_function:
  9457  007E                     saved_w	set	btemp
  9458  0004  00FE               	movwf	btemp
  9459  0005  0E03               	swapf	3,w
  9460  0006  00F0               	movwf	??_ISR
  9461  0007  080A               	movf	10,w
  9462  0008  00F1               	movwf	??_ISR+1
  9463  0009  1283               	bcf	3,5	;RP0=0, select bank0
  9464  000A  1303               	bcf	3,6	;RP1=0, select bank0
  9465  000B  087F               	movf	btemp+1,w
  9466  000C  00F2               	movwf	??_ISR+2
  9467  000D  160A  118A  2ED9   	ljmp	_ISR
  9468                           
  9469                           	psect	text50
  9470  15AE                     __ptext50:	
  9471 ;; *************** function _Task_Ready *****************
  9472 ;; Defined at:
  9473 ;;		line 107 in file "Main.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		wreg, status,2, status,0, btemp+1
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9487 ;;      Params:         0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_ISR
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _Task_Ready
  9502  15AE                     _Task_Ready:
  9503                           
  9504                           ;Main.c: 109:     if(!Delay100ms)
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in _Task_Ready: [wreg+status,2+status,0+btemp+1]
  9508  15AE  0878               	movf	_Delay100ms,w	;volatile
  9509  15AF  0479               	iorwf	_Delay100ms+1,w	;volatile
  9510  15B0  1D03               	btfss	3,2
  9511  15B1  2DBA               	goto	i1l3596
  9512                           
  9513                           ;Main.c: 110:     {;Main.c: 111:         Mostrar = 1;
  9514  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  9515  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  9516  15B4  01E5               	clrf	_Mostrar
  9517  15B5  0AE5               	incf	_Mostrar,f
  9518                           
  9519                           ;Main.c: 112:         Delay100ms = 1000;
  9520  15B6  30E8               	movlw	232
  9521  15B7  00F8               	movwf	_Delay100ms	;volatile
  9522  15B8  3003               	movlw	3
  9523  15B9  00F9               	movwf	_Delay100ms+1	;volatile
  9524  15BA                     i1l3596:
  9525                           
  9526                           ;Main.c: 114:     if(!Delay200ms)
  9527  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  9528  15BB  1303               	bcf	3,6	;RP1=0, select bank0
  9529  15BC  086D               	movf	_Delay200ms,w	;volatile
  9530  15BD  046E               	iorwf	_Delay200ms+1,w	;volatile
  9531  15BE  1D03               	btfss	3,2
  9532  15BF  2DC9               	goto	i1l3602
  9533  15C0  0064               	clrwdt	;# 
  9534                           
  9535                           ;Main.c: 117:         Act_Variables = 1;
  9536  15C1  01FA               	clrf	_Act_Variables
  9537  15C2  0AFA               	incf	_Act_Variables,f
  9538                           
  9539                           ;Main.c: 118:         Delay200ms = 2000;
  9540  15C3  30D0               	movlw	208
  9541  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  9542  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  9543  15C6  00ED               	movwf	_Delay200ms	;volatile
  9544  15C7  3007               	movlw	7
  9545  15C8  00EE               	movwf	_Delay200ms+1	;volatile
  9546  15C9                     i1l3602:
  9547                           
  9548                           ;Main.c: 120:     if(!Delay1s)
  9549  15C9  086B               	movf	_Delay1s,w	;volatile
  9550  15CA  046C               	iorwf	_Delay1s+1,w	;volatile
  9551  15CB  1D03               	btfss	3,2
  9552  15CC  0008               	return
  9553                           
  9554                           ;Main.c: 121:     {;Main.c: 122:         if(Seg == 0)
  9555  15CD  0867               	movf	_Seg,w
  9556  15CE  1D03               	btfss	3,2
  9557  15CF  2DDA               	goto	i1l3612
  9558                           
  9559                           ;Main.c: 123:         {;Main.c: 124:             if(Min != 0) Min--,Seg=59;
  9560  15D0  0868               	movf	_Min,w
  9561  15D1  1903               	btfsc	3,2
  9562  15D2  2DDC               	goto	i1l3614
  9563  15D3  3001               	movlw	1
  9564  15D4  02E8               	subwf	_Min,f
  9565  15D5  303B               	movlw	59
  9566  15D6  00FF               	movwf	127
  9567  15D7  087F               	movf	127,w
  9568  15D8  00E7               	movwf	_Seg
  9569  15D9  2DDC               	goto	i1l3614
  9570  15DA                     i1l3612:
  9571  15DA  3001               	movlw	1
  9572  15DB  02E7               	subwf	_Seg,f
  9573  15DC                     i1l3614:
  9574                           
  9575                           ;Main.c: 127:         Temporizador = 1;
  9576  15DC  1683               	bsf	3,5	;RP0=1, select bank1
  9577  15DD  1303               	bcf	3,6	;RP1=0, select bank1
  9578  15DE  01B9               	clrf	_Temporizador^(0+128)
  9579  15DF  0AB9               	incf	_Temporizador^(0+128),f
  9580                           
  9581                           ;Main.c: 128:         Delay1s = 10000;
  9582  15E0  3010               	movlw	16
  9583  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  9584  15E2  1303               	bcf	3,6	;RP1=0, select bank0
  9585  15E3  00EB               	movwf	_Delay1s	;volatile
  9586  15E4  3027               	movlw	39
  9587  15E5  00EC               	movwf	_Delay1s+1	;volatile
  9588  15E6  0008               	return
  9589  15E7                     __end_of_Task_Ready:
  9590  007E                     btemp	set	126	;btemp
  9591  007E                     wtemp0	set	126
  9592                           
  9593                           	psect	config
  9594                           
  9595                           ;Config register CONFIG1 @ 0x2007
  9596                           ;	Oscillator Selection bits
  9597                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9598                           ;	Watchdog Timer Enable bit
  9599                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9600                           ;	Power-up Timer Enable bit
  9601                           ;	PWRTE = ON, PWRT enabled
  9602                           ;	RE3/MCLR pin function select bit
  9603                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  9604                           ;	Code Protection bit
  9605                           ;	CP = OFF, Program memory code protection is disabled
  9606                           ;	Data Code Protection bit
  9607                           ;	CPD = OFF, Data memory code protection is disabled
  9608                           ;	Brown Out Reset Selection bits
  9609                           ;	BOREN = OFF, BOR disabled
  9610                           ;	Internal External Switchover bit
  9611                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9612                           ;	Fail-Safe Clock Monitor Enabled bit
  9613                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9614                           ;	Low Voltage Programming Enable bit
  9615                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9616                           ;	In-Circuit Debugger Mode bit
  9617                           ;	DEBUG = 0x1, unprogrammed default
  9618  2007                     	org	8199
  9619  2007  2CE2               	dw	11490
  9620                           
  9621                           ;Config register CONFIG2 @ 0x2008
  9622                           ;	Brown-out Reset Selection bit
  9623                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9624                           ;	Flash Program Memory Self Write Enable bits
  9625                           ;	WRT = OFF, Write protection off
  9626  2008                     	org	8200
  9627  2008  3FFF               	dw	16383

Data Sizes:
    Strings     238
    Constant    10
    Data        14
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     65      79
    BANK1            80      4      39
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[20]), STR_38(CODE[21]), STR_37(CODE[10]), STR_36(CODE[17]), 
		 -> STR_35(CODE[9]), STR_34(CODE[17]), STR_33(CODE[18]), STR_32(CODE[17]), 
		 -> STR_31(CODE[17]), Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), STR_23(CODE[2]), 
		 -> STR_22(CODE[13]), STR_21(CODE[2]), STR_20(CODE[8]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[18]), STR_16(CODE[6]), STR_15(CODE[5]), 
		 -> STR_14(CODE[14]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _main->_LCD_init
    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _Pant_Inicio->_LCD_character
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _Pant_Val_Act->_LCD_array
    _Pant_Temporizador->_LCD_array
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Pant_Pulverizacion->_LCD_array
    _Pant_Modos->_LCD_array
    _LCD_xy->_LCD_command
    _Pant_Fuga->_LCD_array
    _Pant_Flujo->_LCD_array
    ___wmul->___lwdiv
    ___ftmul->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _Proceso_Fin->_LCD_array
    _Pant_Detener->_LCD_array
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _Pant_Val_Act->_sprintf
    _Pant_Temporizador->_sprintf
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _Pant_Pulverizacion->_LCD_array
    _Pant_Modos->_LCD_array
    _Pant_Fuga->_LCD_array
    _Pant_Flujo->_LCD_array
    _Lec_Adc_Modo_Pulv->_Adc_Rpm_Read
    _Adc_Rpm_Read->___fttol
    ___wmul->___lwdiv
    _Adc_Pwm_Read->___fttol
    _Lec_Adc_Modo_Fuga->_Adc_Min_Read
    _Lec_Adc_Modo_Fuga->_Adc_Temp_Read
    _Lec_Adc_Modo_Flujo->_Adc_Min_Read
    _Lec_Adc_Modo_Flujo->_Adc_Temp_Read
    _Adc_Temp_Read->___fttol
    _Adc_Min_Read->___fttol
    ___fttol->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->_Adc
    ___awtoft->___ftpack
    _Proceso_Fin->_LCD_array
    _Pant_Detener->_LCD_array

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_MEF_Subest_Actualizacion

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  235658
                           _Adc_init
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
                           _Pwm_init
 ---------------------------------------------------------------------------------
 (1) _Pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0  235342
                                              2 BANK1      2     2      0
                        _Antirrebote
           _MEF_Subest_Actualizacion
                        _Pant_Inicio
                        _Select_Modo
 ---------------------------------------------------------------------------------
 (2) _Select_Modo                                          0     0      0   19450
                        _Antirrebote
                          _Pant_Menu
                      _Pant_Selector
 ---------------------------------------------------------------------------------
 (3) _Pant_Selector                                        0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Pant_Menu                                            0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0   10858
                                              6 BANK0     20    20      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     811
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (2) _MEF_Subest_Actualizacion                             2     2      0  205034
                                              0 BANK1      2     2      0
                        _Antirrebote
                            _Detener
                        _Fin_Proceso
                        _LCD_command
                 _Lec_Adc_Modo_Flujo
                  _Lec_Adc_Modo_Fuga
                  _Lec_Adc_Modo_Pulv
                         _Pant_Flujo
                          _Pant_Fuga
                         _Pant_Modos
                 _Pant_Pulverizacion
                  _Pant_Temporizador
                       _Pant_Val_Act
                  _Salida_Modo_Flujo
                   _Salida_Modo_Fuga
                   _Salida_Modo_Pulv
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Pulv                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Fuga                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Flujo                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Pant_Val_Act                                        22    22      0   14064
                                             26 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Pant_Temporizador                                   22    22      0   13878
                                             26 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    3981
                                              9 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              7 COMMON     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Pant_Pulverizacion                                   3     3      0    9973
                                              6 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Modos                                           0     0      0   10778
                          _LCD_array
                        _LCD_command
                           _LCD_date
                             _LCD_xy
 ---------------------------------------------------------------------------------
 (4) _LCD_xy                                               4     0      4     557
                                              0 BANK0      4     0      4
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Fuga                                            3     3      0    9973
                                              6 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Flujo                                           3     3      0    9973
                                              6 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Pulv                                    0     0      0   58913
                       _Adc_Min_Read
                       _Adc_Pwm_Read
                       _Adc_Rpm_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Rpm_Read                                        15    15      0   16066
                                             50 BANK0     15    15      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     604
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     857
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _Adc_Pwm_Read                                         3     3      0   14271
                                             50 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Fuga                                    0     0      0   28576
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Flujo                                   0     0      0   28576
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Temp_Read                                        3     3      0   14271
                                             50 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _Adc_Min_Read                                         3     3      0   14305
                                             50 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             13     9      4     700
                                             37 BANK0     13     9      4
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4952
                                              7 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    5192
                                             22 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3288
                                              3 BANK0      4     1      3
                                _Adc (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2770
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _Adc                                                  7     5      2     105
                                              3 COMMON     4     2      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Fin_Proceso                                          4     4      0   10041
                                              6 BANK0      4     4      0
                        _Proceso_Fin
 ---------------------------------------------------------------------------------
 (4) _Proceso_Fin                                          0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Detener                                              4     4      0   10041
                                              6 BANK0      4     4      0
                        _Antirrebote
                       _Pant_Detener
 ---------------------------------------------------------------------------------
 (4) _Pant_Detener                                         0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (4) _LCD_array                                            8     2      6    9725
                                              6 COMMON     2     2      0
                                              0 BANK0      6     0      6
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (5) _LCD_date                                             3     3      0     248
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Antirrebote                                          3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     316
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (5) _LCD_command                                          3     3      0     248
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Task_Ready
 ---------------------------------------------------------------------------------
 (8) _Task_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_init
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _MEF_Subest_Actualizacion
       _Antirrebote
       _Detener
         _Antirrebote
         _Pant_Detener
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
       _Fin_Proceso
         _Proceso_Fin
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
       _LCD_command
       _Lec_Adc_Modo_Flujo
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
       _Lec_Adc_Modo_Fuga
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
       _Lec_Adc_Modo_Pulv
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
         _Adc_Pwm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
         _Adc_Rpm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
           ___lwdiv
           ___wmul
             ___lwdiv (ARG)
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
       _Pant_Flujo
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Fuga
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Modos
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
         _LCD_date
         _LCD_xy
           _LCD_command
       _Pant_Pulverizacion
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Temporizador
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Pant_Val_Act
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Salida_Modo_Flujo
       _Salida_Modo_Fuga
       _Salida_Modo_Pulv
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
     _Select_Modo
       _Antirrebote
       _Pant_Menu
         _LCD_array
           _LCD_command
           _LCD_date
       _Pant_Selector
         _LCD_array
           _LCD_command
           _LCD_date
   _MEF_Init
   _Pines_Init
   _Pwm_init

 _ISR (ROOT)
   _Task_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      27       7       48.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      81      12        0.0%
ABS                  0      0      81       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Dec 18 19:06:16 2020

               ??_Salida_Modo_Fuga 0073                 ??_Salida_Modo_Pulv 0073  
                                pc 0002                ??_Salida_Modo_Flujo 0073  
                               fsr 0004                ___wmul@multiplicand 0025  
                 Adc_Rpm_Read@cent 0059                                l220 0948  
                              l222 094A                                l232 0987  
                              l314 14B8                                l324 0889  
                              l318 0836                                l238 0374  
                              l265 045E                                l710 007E  
                              l722 0119                                l731 0174  
                              l724 00EF                                l573 173E  
                              l752 143A                                l488 1579  
                              l971 0A3A                                l972 0A42  
                              _GIE 005F                                _RB4 0034  
                              _ISR 16D9                                _Adc 1721  
                              _Min 0068                                _Seg 0067  
                              _Rpm 00AE                                _Pwm 0069  
                              fsr0 0004                                indf 0000  
                _MEF_Actualizacion 0925                         _Delay100ms 0078  
                Adc_Rpm_Read@dec_m 005D                         _Delay200ms 006D  
                             ?_ISR 0070                __end_of_Fin_Proceso 08C3  
                             ?_Adc 0073                 ?_MEF_Actualizacion 0070  
                     ___ftdiv@cntr 003F                  Adc_Rpm_Read@valor 005F  
        __end_of_Salida_Modo_Flujo 139E                       ___ftdiv@sign 0044  
                Adc_Rpm_Read@uni_m 005B                               l1055 0B2E  
                             l4020 09FE                               l4032 0A25  
                             l4024 0A0A                               l4016 09F7  
                             l4050 0989                               l4026 0A0F  
                             l4052 0992                               l4060 09AD  
                             l4036 0A38                               l4108 1481  
                             l4124 0DFA                               l4220 16B3  
                             l4062 09C2                               l4054 099B  
                             l4038 0A2A                               l4150 0E5E  
                             l4142 0E3F                               l4118 0DE4  
                             l4230 16D4                               l4310 155D  
                             l4056 09A4                               l4304 1548  
                             l4170 0733                               l4226 16C9  
                             l4218 16A5                               l4306 154F  
                             l4314 1564                               l5130 0095  
                             l4068 09E0                               l4164 071D  
                             l4308 1556                               l2732 13D7  
                             l4420 01DC                               l5132 010B  
                             l4340 00AE                               l4182 0772  
                             l5134 156B                               l4414 01CD  
                             l4406 01B4                               l4350 00F1  
                             l4334 0085                               l4430 0054  
                             l5126 0973                               l5136 09B4  
                             l4280 0BD3                               l4408 01B8  
                             l4432 0227                               l4336 009A  
                             l4328 007A                               l5128 044A  
                             l4194 079A                               l4186 0782  
                             l4290 0686                               l2738 1432  
                             l4362 0133                               l2860 0AE8  
                             l4268 0348                               l4428 01E0  
                             l4380 0166                               l4372 0141  
                             l4198 07AA                               l4294 06FF  
                             l2942 159E                               l4390 018D  
                             l4366 013F                               l2960 07F9  
                             l2864 0AF1                               l2936 1582  
                             l4720 0402                               l4712 03F0  
                             l4704 03DA                               l4640 14AD  
                             l2882 0B1A                               l2938 1590  
                             l2946 15A9                               l2956 07EF  
                             l4388 0189                               l4732 0423  
                             l4716 03F9                               l4708 03E6  
                             l4636 14A8                               l4820 0952  
                             l2958 07EB                               l2894 0B3D  
                             l2886 0B2A                               l4398 019E  
                             l4734 042A                               l4726 040D  
                             l4662 036B                               l4654 0355  
                             l4582 04D5                               l4574 0487  
                             l4646 14BA                               l4680 039C  
                             l4672 0386                               l4832 0961  
                             l4808 093C                               l2898 0B4B  
                             l4690 03B7                               l4658 0361  
                             l4746 0440                               l4578 04AE  
                             l4826 0961                               l4764 0A74  
                             l4684 03A5                               l4676 0392  
                             l4668 037C                               l4596 1530  
                             l4844 0967                               l4838 0962  
                             l4696 03BF                               l4794 0926  
                             l4946 1514                               l4796 0929  
                             l4798 092E                               STR_1 055B  
                             STR_2 0546                               STR_3 0531  
                             STR_4 055B                               STR_5 0606  
                             STR_6 052F                               STR_7 0606  
                             STR_8 052F                               STR_9 0606  
                     ?_LCD_command 0070                               u2085 143B  
                             u4015 0A4B                               u2415 0B33  
                             u2095 1442                               u4105 0E1E  
                             u4115 0E40                               u2355 0AF8  
                             u4045 172B                               u4125 0E51  
                             u2525 1585                               u4135 0E5F  
                             u4215 0783                               u4225 078B  
                             u2385 0B1B                               u4305 16A8  
                             u2545 1596                               u2555 159F  
                             u4325 16B4                               u4095 0E0C  
                             u4175 073F                               u4335 16C0  
                             u4265 07AB                               u4185 0751  
                             u4345 16CA                               u4275 07B3  
                             _PEIE 005E                               u4620 0829  
                             u3805 0E9F                               u4525 017B  
                             u4630 082A                               u3815 0EB1  
                             u5407 1657                               u3825 0EC4  
                             u3905 0DA5                               u5417 161B  
                             u3835 0F02                               u5507 09D4  
                             u5427 1738                               u4900 03AE  
                             u3845 0F15                               u5517 0D68  
                             u5437 1760                               u4485 015C  
                             u4670 0884                               u4910 03AF  
                             u5607 0A94                               u5527 0D70  
                             u3855 0D1E                               u5447 0892  
                             u3935 0A03                               u4680 0885  
                             u4760 0C72                               u5617 0AA1  
                             u5537 0DB9                               u3865 0D2F  
                             u5457 08A3                               u4745 1520  
                             u4770 0C8D                               u5707 0F38  
                             u3795 0E8E                               u5627 0AAE  
                             u5547 0DC0                               u3875 0D41  
                             u5467 08BB                               u3955 0A1E  
                             u5387 0CF6                               u4940 03D5  
                             u5637 0AB9                               u5557 0DC6  
                             u3885 0D54                               u5477 083F  
                             u5397 1693                               u4950 03D6  
                             u5647 0AC4                               u5567 07E1  
                             u3895 0D92                               u5487 0850  
                             u3975 0A31                               u5657 0AD1  
                             u5577 07F3                               u5497 0868  
                             u5667 0ED8                               u5587 0A6D  
                             u5677 0EE0                               u5597 0A7E  
                             u5687 0F29                               u5697 0F31  
                             _TMR1 000E                               _Modo 006A  
                             _Temp 0066                               _main 14EE  
                     ___ftpack@arg 0073                       ___ftpack@exp 0076  
                             btemp 007E                ??_MEF_Actualizacion 00C5  
                             start 0010                 __size_of_LCD_array 0067  
                    _Estado_Actual 0061                    __end_of_Detener 0870  
                     ___ftmul@cntr 0034                       ___ftmul@sign 0035  
               _Pant_Pulverizacion 165F                              ??_ISR 0070  
                            ??_Adc 0075                       ___fttol@exp1 0051  
                     ___fttol@lval 004D                __end_of_Antirrebote 07FF  
                 __end_of_LCD_date 0DCC                   __end_of_LCD_init 0AD7  
                 __end_of_MEF_Init 13A9                              ?_main 0070  
                            STR_10 052F                              STR_11 0606  
                            STR_12 052F                              STR_20 05EA  
                            STR_21 05D5                              STR_13 0606  
                            STR_14 0588                              STR_30 05FC  
                            STR_22 05CA                              STR_15 05E5  
                            STR_23 0608                              STR_31 05B9  
                            STR_16 05DB                              STR_24 0601  
                            STR_32 05A8                              STR_25 05FC  
                            STR_17 0596                              STR_33 0584  
                            STR_34 05A8                              STR_26 05FC  
                            STR_18 05F2                              STR_27 05FC  
                            STR_19 05F7                              STR_35 05E1  
                            STR_36 05A8                              STR_28 05FC  
                            STR_29 05FC                              STR_37 05D7  
                            STR_38 051C                              STR_39 0570  
                  __end_of___ftdiv 0E84                    __end_of___ftmul 07D8  
              ?_Pant_Pulverizacion 0070                    __end_of___fttol 0B54  
                    _LCD_character 151A                    __end_of___lwdiv 16D9  
                            i1l121 1716                    __end_of___lwmod 15AE  
        __end_of_MEF_Actualizacion 0988                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _TRISB 0086                              _TRISC 0087  
                    ??_Pant_Inicio 0026                              _PwmS1 00B4  
                            _Reset 0062                      ___awtoft@sign 0026  
                  __end_of_dpowers 051C             __size_of_Pant_Selector 009D  
                  __end_of_isdigit 13D9                      ___ftpack@sign 0077  
                 __end_of_Adc_init 1475                              pclath 000A  
                  ??_Adc_Temp_Read 0078                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 022C  
                    ?_Pant_Detener 0070               ??_Pant_Pulverizacion 0026  
                    ?_Pant_Val_Act 0070                    __initialization 0013  
                     __end_of_main 151A                         _Pant_Flujo 15E7  
                       _Pant_Modos 0BDC                     ?_LCD_character 0076  
                           ??_main 0078                      ___fttol@sign1 004C  
                      _Fin_Proceso 0870                      ??_Select_Modo 0078  
                __end_of_LCD_array 09EF                   __end_of_Pwm_init 081D  
                           _ADCON0 001F                             _ADRESH 001E  
                           _ADRESL 009E         __size_of_Salida_Modo_Flujo 0004  
                 __end_of___awtoft 149A                   __end_of___ftpack 0A5D  
                       _Pines_Init 1415                             i1l3602 15C9  
                           i1l3612 15DA                             i1l3614 15DC  
                           i1l3724 16E8                             i1l3740 1705  
                           i1l3734 16FF                             i1l3728 16F2  
                           i1l3746 1711                             i1l3596 15BA  
              __end_of_Pant_Inicio 0D14                             _LCD_xy 1547  
                    _Act_Variables 007A                     ??_Pant_Detener 0078  
                        ??_Detener 0026                             _TMR1IE 0460  
                           _TMR1IF 0060                         _Task_Ready 15AE  
                           _TMR1ON 0080                             _TRISB4 0434  
               __size_of_Pant_Fuga 003C                   Pant_Inicio@F1330 00BB  
                 Pant_Inicio@F1332 00A0                 __size_of_Pant_Menu 004B  
                   ??_Pant_Val_Act 003A                        _Antirrebote 07D8  
       ??_MEF_Subest_Actualizacion 00C3                             _Output 0063  
                 _Subestado_Actual 00B8                      _Pant_Selector 045F  
                           ___wmul 142E                          ??___ftdiv 003C  
               _Lec_Adc_Modo_Flujo 13B9                          ??___ftmul 002D  
                        ??___fttol 0049                          ??___lwdiv 0077  
                        ??___lwmod 0077                       LCD_date@date 0075  
            ___ftmul@f3_as_product 0031                ?_Lec_Adc_Modo_Flujo 0070  
       __size_of_MEF_Actualizacion 0063                       __pdataCOMMON 0078  
                        ??_isdigit 0073                             saved_w 007E  
                    ??_Proceso_Fin 0078                          ??_sprintf 002D  
              __end_of_Select_Modo 14C3            __end_of__initialization 0049  
             __size_of_LCD_command 00BA                          ?_LCD_date 0070  
             ??_Lec_Adc_Modo_Flujo 0078                          ?_LCD_init 0070  
                        ?_MEF_Init 0070                         ___ftdiv@f1 0039  
                       ___ftdiv@f2 0036                         ___ftdiv@f3 0040  
                       ___awtoft@c 0023                         ___ftmul@f1 0027  
                       ___ftmul@f2 002A                         ___fttol@f1 0045  
                   ?_Pant_Selector 0070                     __pcstackCOMMON 0070  
                     __pidataBANK0 04FC                       __pidataBANK1 13B1  
                  ??_LCD_character 0077                  _Adc_Min_Read$1504 0052  
                      ?_Pant_Flujo 0070                          LCD_init@i 0020  
                      ?_Pant_Modos 0070                          ?_Adc_init 0070  
        __size_of_Salida_Modo_Fuga 0004          __size_of_Salida_Modo_Pulv 0001  
                __end_of_Pant_Fuga 165F                  __end_of_Pant_Menu 1800  
                      _Pant_Inicio 0C68                       sprintf@width 0036  
                      ?_Pines_Init 0070                         __pbssBANK0 0061  
                       __pbssBANK1 00A0                            ?_LCD_xy 0020  
                      ?_Task_Ready 0070                __end_of_Proceso_Fin 14EE  
                       ??_LCD_date 0073                            LCD_xy@x 0020  
                          LCD_xy@y 0022                         ??_LCD_init 0076  
                       ??_MEF_Init 0073                         __pmaintext 14EE  
                          ?___wmul 0023                          ?_Pwm_init 0070  
                       __pintentry 0004                          ?___awtoft 0023  
                        ?___ftpack 0073                         ??_Adc_init 0073  
             __end_of_Pant_Detener 1415                        _Select_Modo 149A  
             __end_of_Pant_Val_Act 1000                         __stringtab 0500  
                          _Delay1s 006B                    __size_of_LCD_xy 0033  
                          _Detener 081D                __size_of_Pant_Flujo 003C  
              __size_of_Pant_Modos 008C                    ??_Pant_Selector 0078  
                          _Mostrar 0065                  _Pant_Temporizador 176A  
                          ___ftdiv 0DCC                         ??_Pwm_init 0073  
                  __size_of___wmul 0023                            ___ftmul 0705  
                          ___fttol 0AD7                            ___lwdiv 169B  
                          ___lwmod 157A                 ?_Pant_Temporizador 0070  
                       ??___awtoft 0078                         ??___ftpack 0020  
                        _ANSELbits 0188                __size_of_Pines_Init 0019  
                          __ptext1 0803                            __ptext2 1415  
                          __ptext3 13A2                            __ptext4 0925  
                          __ptext5 149A                            __ptext6 045F  
                          __ptext7 17B5                            __ptext8 0C68  
                          __ptext9 151A                __size_of_Task_Ready 0039  
             Pant_Inicio@caracter1 002A                       __size_of_ISR 0048  
                     ?_Fin_Proceso 0070                       __size_of_Adc 0049  
                        _T1CONbits 0010                            _dpowers 0512  
                          _isdigit 13CB                         _mod_tiempo 0064  
              ??_Pant_Temporizador 003A                        _Proceso_Fin 14C3  
          Pant_Temporizador@buffer 003C                            _sprintf 004D  
                          clrloop0 13AA               end_of_initialization 0049  
                        _LCD_array 0988              __end_of_Adc_Temp_Read 0925  
               Pant_Val_Act@buffer 003C        __size_of_Pant_Pulverizacion 003C  
                     ?_Antirrebote 0070          __end_of_Pant_Temporizador 17B5  
                     __pstringtext 0500                      ?_Adc_Min_Read 0070  
                        _PORTAbits 0005                          _PORTBbits 0006  
                        _PORTCbits 0007                   _Salida_Modo_Fuga 139E  
                 _Salida_Modo_Pulv 07FF                      LCD_array@date 0024  
                    ?_Adc_Rpm_Read 0070                          _TRISAbits 0085  
                        _TRISBbits 0086                          _TRISCbits 0087  
                    ?_Adc_Pwm_Read 0070                          _Act_PwmS1 00BA  
                       ?_LCD_array 0020                        ___ftdiv@exp 0043  
                   __end_of_LCD_xy 157A                  __size_of_LCD_date 00B8  
                __size_of_LCD_init 007A                  __size_of_MEF_Init 0007  
                      ___ftmul@exp 0030              __size_of_Pant_Detener 0018  
                   ??_Adc_Min_Read 0078                     __end_of___wmul 1451  
                     ??_Pant_Flujo 0026                      __pidataCOMMON 0801  
                     ??_Pant_Modos 0078              __size_of_Pant_Val_Act 00C2  
               _Adc_Temp_Read$1505 0052                     ??_Adc_Rpm_Read 0052  
                __size_of_Adc_init 0024                         LCD_array@x 0020  
                       LCD_array@y 0022                     ??_Adc_Pwm_Read 0078  
              start_initialization 0013                       ?_Pant_Inicio 0070  
__size_of_MEF_Subest_Actualizacion 010B                        __end_of_ISR 1721  
                      __end_of_Adc 176A          ?_MEF_Subest_Actualizacion 0070  
                        _Pant_Fuga 1623                          _Pant_Menu 17B5  
                    ??_LCD_command 0073                          _Per_PwmS1 00AB  
                     ??_Pines_Init 0073                           ??_LCD_xy 0076  
                     ??_Task_Ready 0070                       _Pant_Detener 13FD  
               __end_of_Pant_Flujo 1623        __size_of_Lec_Adc_Modo_Flujo 0009  
               __end_of_Pant_Modos 0C68         __size_of_Pant_Temporizador 004B  
                     _Pant_Val_Act 0F3E                  _Lec_Adc_Modo_Fuga 13C2  
                _Lec_Adc_Modo_Pulv 13EA                           ??___wmul 0077  
                       init_fetch0 13D9                        __pdataBANK0 006B  
                      __pdataBANK1 00BB                 ?_Lec_Adc_Modo_Fuga 0070  
               ?_Lec_Adc_Modo_Pulv 0070                  __size_of_Pwm_init 001A  
            __end_of_LCD_character 1547                 __end_of_Pines_Init 142E  
                __size_of___awtoft 0025                  __size_of___ftpack 006E  
               __end_of_Task_Ready 15E7                ??_Lec_Adc_Modo_Fuga 0078  
                     ?_Select_Modo 0070                        __pbssCOMMON 007A  
              ??_Lec_Adc_Modo_Pulv 0078                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00C3  
             __size_of_Fin_Proceso 0053                       _isdigit$1305 0073  
                       ?_Pant_Fuga 0070                         ?_Pant_Menu 0070  
                      ??_LCD_array 0076                           ?_Detener 0070  
                      sprintf@flag 0035                        sprintf@prec 0031  
              __end_of_LCD_command 0F3E          __end_of_Lec_Adc_Modo_Fuga 13CB  
        __end_of_Lec_Adc_Modo_Pulv 13FD                   ___lwdiv@dividend 0075  
             __size_of_Antirrebote 0027                           ?___ftdiv 0036  
                         ?___ftmul 0027                           ?___fttol 0045  
                         ?___lwdiv 0073                           ?___lwmod 0023  
                        _freqPwmS1 00B6                           ?_isdigit 0070  
                     ?_Proceso_Fin 0070                   ___lwdiv@quotient 0021  
                         ?_sprintf 0029               __end_of_Adc_Min_Read 0705  
              Pant_Inicio@caracter 0032                         Adc@channel 0020  
                interrupt_function 0004                LCD_character@adress 0020  
                   ___wmul@product 0027                           _LCD_date 0D14  
                         _LCD_init 0A5D                           _MEF_Init 13A2  
                        clear_ram0 13A9           __end_of_Salida_Modo_Fuga 13A2  
         __end_of_Salida_Modo_Pulv 0800               __end_of_Adc_Rpm_Read 0354  
             __end_of_Adc_Pwm_Read 0BDC                           Detener@i 0029  
            __end_of_Pant_Selector 04FC                           _PER_T_S1 00B0  
                         _Adc_init 1451                         _ADCON0bits 001F  
                      __stringbase 0512                         _ADCON1bits 009F  
                ___wmul@multiplier 0023                       Fin_Proceso@i 0029  
                         _P_W_T_S1 00B2               __size_of_Pant_Inicio 00AC  
                      ??_Pant_Fuga 0026                        ??_Pant_Menu 0078  
                      _LCD_command 0E84         __end_of_Pant_Pulverizacion 169B  
                    Adc@convertion 0021                   __size_of_Detener 0053  
       __size_of_Lec_Adc_Modo_Fuga 0009                           _Pw_PwmS1 00A8  
       __size_of_Lec_Adc_Modo_Pulv 0013   __end_of_MEF_Subest_Actualizacion 045F  
                         _Pwm_init 0803                   __size_of___ftdiv 00B8  
                 __size_of___ftmul 00D3                   __size_of___fttol 007D  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
                         ___awtoft 1475                           ___ftpack 09EF  
               __end_of__stringtab 0512                         _ANSELHbits 0189  
           __size_of_Adc_Temp_Read 0062                         sprintf@val 0033  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0073  
                  ___lwdiv@counter 0020                           __ptext10 0354  
                         __ptext11 07FF                           __ptext20 0BDC  
                         __ptext12 139E                           __ptext21 1547  
                         __ptext13 139A                           __ptext30 13B9  
                         __ptext22 1623                           __ptext14 0F3E  
                         __ptext31 08C3                           __ptext23 15E7  
                         __ptext15 176A                           __ptext40 14C3  
                         __ptext32 060A                           __ptext24 13EA  
                         __ptext16 004D                           __ptext41 081D  
                         __ptext33 0AD7                           __ptext25 022C  
                         __ptext17 13CB                           __ptext50 15AE  
                         __ptext42 13FD                           __ptext34 0705  
                         __ptext26 142E                           __ptext18 157A  
                         __ptext43 0988                           __ptext35 0DCC  
                         __ptext27 169B                           __ptext19 165F  
                         __ptext44 0D14                           __ptext36 1475  
                         __ptext28 0B54                           __ptext45 07D8  
                         __ptext37 09EF                           __ptext29 13C2  
                         __ptext46 0A5D                           __ptext38 1721  
                         __ptext47 0E84                           __ptext39 0870  
                         __ptext48 1451                           __ptext49 16D9  
                _Adc_Rpm_Read$1502 0056               __size_of_Select_Modo 0029  
                 __size_of_sprintf 01DF                       _Temporizador 00B9  
                    __size_of_main 002C              LCD_character@caracter 0076  
                   LCD_character@i 0021              __size_of_Adc_Min_Read 00FB  
                         init_ram0 13DD                           isdigit@c 0074  
             __size_of_Proceso_Fin 002B                           intlevel1 0000  
                        sprintf@ap 0032                          sprintf@sp 0039  
       __end_of_Lec_Adc_Modo_Flujo 13C2              __size_of_Adc_Rpm_Read 0128  
            __size_of_Adc_Pwm_Read 0088                   ___lwmod@dividend 0025  
                    _Adc_Temp_Read 08C3                          stringcode 050A  
                _Adc_Pwm_Read$1503 0052                       _Adc_Min_Read 060A  
         _MEF_Subest_Actualizacion 0354                      ??_Fin_Proceso 0026  
                         sprintf@c 0038                           sprintf@f 0029  
                  ___lwmod@divisor 0023                    ___lwmod@counter 0077  
                     _Adc_Rpm_Read 022C                           stringtab 0500  
                     _Adc_Pwm_Read 0B54                         _WDTCONbits 0105  
                _Salida_Modo_Flujo 139A                     ?_Adc_Temp_Read 0070  
           __size_of_LCD_character 002D                 ?_Salida_Modo_Flujo 0070  
                    ??_Antirrebote 0073                     LCD_command@cmd 0075  
                ?_Salida_Modo_Fuga 0070                  ?_Salida_Modo_Pulv 0070  
